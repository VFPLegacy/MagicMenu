*--------------------------------------------------------------------------------------------------------------------------------------------------------
* (EN) AUTOGENERATED - ATTENTION!! - NOT INTENDED FOR EXECUTION!! USE ONLY FOR MERGING CHANGES AND STORING WITH SCM TOOLS!!
*--------------------------------------------------------------------------------------------------------------------------------------------------------
*< FOXBIN2PRG: Version="1.21" SourceFile="magicmenu.vcx" CPID="1252" /> (Solo para binarios VFP 9 / Only for VFP 9 binaries)
*
*
DEFINE CLASS console AS collection 
 	*< CLASSDATA: Baseclass="collection" Timestamp="" Scale="Pixels" Uniqueid="" />

	*<DefinedPropArrayMethod>
		*m: newproject
		*m: run		&& Occurs when an Active Document is ready to execute your application code.
		*p: _memberdata		&& XML Metadata for customizable properties
	*</DefinedPropArrayMethod>

	*<PropValue>
		Height = 23
		Name = "console"
		Width = 23
		_memberdata = <VFPData>

		</VFPData>
	*</PropValue>
	
	PROCEDURE newproject
		LOCAL loForm, loConsole, lcRootFolder
		
		loForm = CREATEOBJECT("frmNewConsole")
		loForm.SHOW(1)
		loConsole = loForm.oProject
		
		RELEASE loForm
		
		IF EMPTY(loConsole.cName)
			RETURN
		ENDIF
		
		* Create the root folder
		lcRootFolder = ALLTRIM(loConsole.cDirectory)
		IF NOT DIRECTORY(lcRootFolder)
			*!* fixed by xinjie  2024.01.28
			MKDIR '&lcRootFolder'
			* MKDIR &lcRootFolder
		ENDIF
		
		LOCAL lcCurDir, lcFoxConsolePath, lcFoxConsoleURI, lcMainFilePath, lcConfigFPWFilePath, lcBuffer, lcManifestURL
		lcCurDir = FULLPATH(CURDIR())
		lcFoxConsolePath = ADDBS(lcRootFolder) + 'FoxConsole.prg'
		lcMainFilePath = ADDBS(lcRootFolder) + 'Main.prg'
		lcConfigFPWFilePath = ADDBS(lcRootFolder) + 'CONFIG.FPW'
		
		Local lcDomain
		*!* fixed by xinjie  2024.01.26		
		*!* For countries where the network is so tightly controlled that GitHub cannot be accessed properly
		lcDomain = "https://github.com"					&& After testing, this is doable. However, verification still needs to be done in a normal network environment.
		If InList(Upper(_Screen.oHelper.oLanguage.GetLanguage()), "CN")
			lcDomain = FileToStr("domain4cn.txt")		&& Prevent addresses from being blocked from access without warning
		EndIf
		*!*	lcDomain = "https://raw.githubusercontent.com"
		*!*	If Upper(_Screen.oHelper.oLanguage.GetLanguage()) == "CN"
		*!*		lcDomain = "https://hub.nuaa.cf"
		*!*	EndIf
		
		*!*	lcFoxConsoleURI  = lcDomain+"/Irwin1985/FoxConsole/main/foxconsole.prg"
		* Change Directory to the site root
		CD (lcRootFolder)
		
		*!*	* Download the FoxConsole
		*!*	LOCAL loHttp, lnHandle, lnStartTime, lcMsg
		*!*	loHttp = _SCREEN.oBridge.CreateInstance("System.Net.WebClient")
		*!*	IF TYPE('loHttp') <> 'O'
		*!*		lcMsg = _SCREEN.oHelper.oLanguage.Translate("_6P51DFEA2")
		*!*		lcMsg = STRTRAN(lcMsg, "{instance}", "System.Net.WebClient")
		*!*		MESSAGEBOX(lcMsg, 16)
		*!*		RETURN
		*!*	ENDIF
		
		*!*	IF FILE(lcFoxConsolePath)
		*!*		TRY
		*!*			DELETE FILE (lcFoxConsolePath)
		*!*		CATCH
		*!*		ENDTRY
		*!*	ENDIF
		*!*	WAIT _SCREEN.oHelper.oLanguage.Translate("_6P519I2WS") WINDOW NOWAIT
		*!*	loHttp.DownloadFile(lcFoxConsoleURI, lcFoxConsolePath)
		*!*	WAIT CLEAR
		*!*	IF !FILE(lcFoxConsolePath)
		*!*		lcMsg = _SCREEN.oHelper.oLanguage.Translate("_6P519EMNA")
		*!*		lcMsg = STRTRAN(lcMsg, "{cFileName}", JUSTFNAME(lcFoxConsolePath))
		*!*		MESSAGEBOX(lcMsg, 48)
		*!*		RETURN
		*!*	ENDIF
		*!*	lcManifestURL = lcDomain+"/VFPLegacy/MagicMenu/master/native/fox-console.manifest"
		
		*!* fixed by xinjie  2024.01.26		In order to match the variable lcDomain
		lcManifestURL = lcDomain+"/VFPLegacy/MagicMenu/raw/master/native/fox-console.manifest"
		*_screen.oHelper.oSystem.DownloadFilesFromManifest(lcManifestURL, "fox-console.manifest")
		
		*!* fixed by xinjie  2024.01.25			Necessary remedies
		*!* Of course, there is still a possibility of localization here, but the CASE statement is not written
		*!* If you're in a country like China, or the state of the network is Terrible, then...
		llOK = .T.
		*!* add by xinjie  2024.01.28
		llReturn = .F.
		
		Try
			*!* edit by xinjie  2024.01.28		
			llReturn = _screen.oHelper.oSystem.DownloadFilesFromManifest(lcManifestURL, "fox-console.manifest")
			* _screen.oHelper.oSystem.DownloadFilesFromManifest(lcManifestURL, "fox-console.manifest")
		Catch to loException
			Do Case
				Case Version(3) = [86]
					lcErrorMessage = [网络访问出现问题:] + Chr(13) + ;
									 loException.message + Chr(13) + ;
									 [点击“确定”按钮后输入可用的 github 镜像网络域名，例如：] + Chr(13) + ;
									 [https://github.com]
			
					MessageBox(lcErrorMessage, 64, [Info])
			
					lcDomain = Alltrim(InputBox([请输入新的 github 镜像地址：], [切换域名], [https://github.com]))
					
					lcManifestURL = lcDomain+"/VFPLegacy/MagicMenu/raw/master/native/fox-console.manifest"
					
					Try 
						llReturn = _screen.oHelper.oSystem.DownloadFilesFromManifest(lcManifestURL, "fox-console.manifest")
					Catch 
						llOK = .F.
						MessageBox([无法正常访问。请修改 domain4cn.txt 文件内容后重试！], 64, [Info])
					EndTry
		
			EndCase
		EndTry 
		
		*!* add by xinjie  2024.01.25
		If llReturn = .F.
			Return 
		EndIf 
		
		If llOK = .F.
			Return 
		EndIf 
		
		
		** Create the main PRG file
		TEXT TO lcBuffer NOSHOW TEXTMERGE 
		Do FoxConsole
		* <<_screen.oHelper.oLanguage.Translate("_6P90N981C")>>
		_vfp.cli.Print("<<_screen.oHelper.oLanguage.Translate("_6P90N9ZPB")>>")
		_vfp.cli.Println()
		_vfp.cli.Println("<<_screen.oHelper.oLanguage.Translate("_6P90NAX88")>>")
		
		* <<_screen.oHelper.oLanguage.Translate("_6P90NBFC6")>>
		lcName = _vfp.cli.Input("<<_screen.oHelper.oLanguage.Translate("_6P90NBZXZ")>>")
		If !empty(lcName)
		    _vfp.cli.Println("<<_screen.oHelper.oLanguage.Translate("_6P90NDSL3")>> " + lcName + "!")
		Else
		    _vfp.cli.Println("<<_screen.oHelper.oLanguage.Translate("_6P90NFZF9")>>")
		Endif
		_vfp.cli.Println("<<_screen.oHelper.oLanguage.Translate("_6P90O1AW5")>>")
		_vfp.cli.readkey()
		_vfp.cli.exit(0)
		
		ENDTEXT
		
		STRTOFILE(lcBuffer, lcMainFilePath)
		
		** Create the CONFIG.FPW file
		TEXT TO lcBuffer NOSHOW
		SCREEN = OFF
		RESOURCE = OFF
		ENDTEXT
		STRTOFILE(lcBuffer, lcConfigFPWFilePath)
		
		* Restore the current directory
		CD (lcCurDir)
		
		** Create new project
		LOCAL loProject, lcPrjRoot
		lcPrjRoot = STRTRAN(ADDBS(lcRootFolder), '\', '\\')
		loProject = CREATEOBJECT("Empty")
		ADDPROPERTY(loProject, "cName", ALLTRIM(loConsole.cName))
		ADDPROPERTY(loProject, "cType", "CONEXE")
		ADDPROPERTY(loProject, "cDirectory", lcPrjRoot)
		ADDPROPERTY(loProject, "cMain", lcPrjRoot + "Main.prg")
		ADDPROPERTY(loProject, "oExt", .NULL.)
		ADDPROPERTY(loProject, "oIgnored", .NULL.)
		ADDPROPERTY(loProject, "oExcluded", CREATEOBJECT("Collection"))
		loProject.oExcluded.Add(ADDBS(lcRootFolder) + ALLTRIM(loConsole.cName) + '.exe')
		
		_screen.oHelper.oProject.newProject(loProject)
	ENDPROC

	PROCEDURE run		&& Occurs when an Active Document is ready to execute your application code.
		IF NOT WEXIST('frmProjectManager')
			RETURN
		ENDIF
		
		LOCAL loProject, lcExeName, loDelete
		loProject = _SCREEN.oActiveProject.oProject
		lcExeName = ADDBS(ALLTRIM(loProject.cDirectory)) + ALLTRIM(loProject.cName) + '.exe'
		
		IF !FILE(lcExeName)
			RETURN
		ENDIF
		
		loDelete = CREATEOBJECT("Collection")
		
		lcTempDir = _screen.oMagicMenu.cTempDir + ALLTRIM(loProject.cName) + '\'
		IF NOT DIRECTORY(lcTempDir)
			MKDIR &lcTempDir
		ENDIF
		
		lcBuildFile = lcTempDir + "BUILD.FPW"
		lcBatFile = lcTempDir + "build.bat"
		
		loDelete.Add(JUSTFNAME(lcBuildFile))
		loDelete.Add(JUSTFNAME(lcBatFile))
		loDelete.Add('build.fxp')
		_screen.oHelper.oSystem.DeleteFiles(lcTempDir, loDelete)
		
		LOCAL lcScript, lcParams, lcCommand
		lcParams = _screen.oHelper.oProject.askForParameters()
		lcCommand = 'DO "' + lcExeName + '"'
		IF !EMPTY(lcParams)
			lcCommand = lcCommand + " WITH " + lcParams
		ENDIF
		TEXT TO lcScript NOSHOW textmerge
		_screen.Visible = .f.
		<<lcCommand>>
		
		TRY
			DELETE FILE "<<lcBuildFile>>"
		CATCH
		ENDTRY
		TRY
			DELETE FILE "<<lcBatFile>>"
		CATCH
		ENDTRY
		QUIT
		ENDTEXT
		
		=STRTOFILE(lcScript, lcBuildFile)
		IF !FILE(lcBuildFile)
			RETURN
		ENDIF
		
		TEXT TO lcScript NOSHOW TEXTMERGE PRETEXT 15
			"<<_screen.oMagicMenu.cVFPDir>>" -C "<<lcBuildFile>>"
		ENDTEXT
		
		=STRTOFILE(lcScript, lcBatFile)
		
		IF !FILE(lcBatFile)
			RETURN
		ENDIF
		WAIT CLEAR
		
		_screen.oHelper.oSystem.OpenApplication(lcBatFile, "", 2)
	ENDPROC

ENDDEFINE

DEFINE CLASS frmexamples AS form 
 	*< CLASSDATA: Baseclass="form" Timestamp="" Scale="Pixels" Uniqueid="" />

	*-- OBJECTDATA items order determines ZOrder / El orden de los items OBJECTDATA determina el ZOrder 
	*< OBJECTDATA: ObjPath="Shape2" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Label2" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="SampleList" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="cmdModify" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="cmdQuit" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="cmdDownload" UniqueID="" Timestamp="" />

	*<DefinedPropArrayMethod>
		*p: csamplesdir
		*p: _memberdata		&& XML Metadata for customizable properties
	*</DefinedPropArrayMethod>

	*<PropValue>
		BorderStyle = 2
		Caption = "FoxServer Examples"
		Closable = .F.
		csamplesdir = 
		DoCreate = .T.
		FontName = "MS Sans Serif"
		Height = 297
		Left = 430
		MaxButton = .F.
		MinButton = .F.
		Name = "frmexamples"
		ShowTips = .T.
		Top = 54
		Width = 525
		_memberdata = <VFPData>

		</VFPData>
	*</PropValue>

	ADD OBJECT 'cmdDownload' AS commandbutton WITH ;
		Caption = "\<Download", ;
		Default = .F., ;
		Enabled = .F., ;
		FontBold = .F., ;
		FontName = "MS Sans Serif", ;
		FontSize = 8, ;
		Height = 23, ;
		Left = 452, ;
		Name = "cmdDownload", ;
		TabIndex = 3, ;
		Top = 20, ;
		Width = 67
		*< END OBJECT: BaseClass="commandbutton" />

	ADD OBJECT 'cmdModify' AS commandbutton WITH ;
		Caption = "Modificar", ;
		Enabled = .F., ;
		FontBold = .F., ;
		FontName = "MS Sans Serif", ;
		FontSize = 8, ;
		Height = 23, ;
		Left = 452, ;
		Name = "cmdModify", ;
		TabIndex = 4, ;
		Top = 43, ;
		Width = 67
		*< END OBJECT: BaseClass="commandbutton" />

	ADD OBJECT 'cmdQuit' AS commandbutton WITH ;
		Cancel = .T., ;
		Caption = "\<Close", ;
		FontBold = .F., ;
		FontName = "MS Sans Serif", ;
		FontSize = 8, ;
		Height = 23, ;
		Left = 452, ;
		Name = "cmdQuit", ;
		TabIndex = 5, ;
		Top = 83, ;
		Width = 67
		*< END OBJECT: BaseClass="commandbutton" />

	ADD OBJECT 'Label2' AS label WITH ;
		AutoSize = .T., ;
		Caption = "FoxServer Samples", ;
		FontBold = .F., ;
		FontName = "MS Sans Serif", ;
		FontSize = 8, ;
		Height = 15, ;
		Left = 19, ;
		MousePointer = 7, ;
		Name = "Label2", ;
		TabIndex = 1, ;
		Top = 5, ;
		Width = 93
		*< END OBJECT: BaseClass="label" />

	ADD OBJECT 'SampleList' AS listbox WITH ;
		FontName = "MS Sans Serif", ;
		Height = 259, ;
		Left = 22, ;
		Name = "SampleList", ;
		RowSource = "CURSAMPLES.TITLE", ;
		RowSourceType = 2, ;
		Top = 21, ;
		Width = 411
		*< END OBJECT: BaseClass="listbox" />

	ADD OBJECT 'Shape2' AS shape WITH ;
		Height = 279, ;
		Left = 12, ;
		Name = "Shape2", ;
		SpecialEffect = 0, ;
		Top = 10, ;
		Width = 435
		*< END OBJECT: BaseClass="shape" />
	
	PROCEDURE Init
		Lparameters toSamples
		
		this.Caption = _screen.oHelper.oLanguage.Translate("_6RS1CF4AA")
		
		Select curSamples
		For each loSample in toSamples
			Append Blank
			replace title		with loSample.cTitle
			replace URL			with loSample.cURL
			replace FileName	with loSample.cFileName
			replace FolderName	with loSample.cFolderName
			replace Downloaded	with loSample.bDownloaded
			*!* add by xinjie  2024.01.30
			Replace Domain		with loSample.cDomain
		EndFor
		
		*!* add by xinjie  2024.01.30	localization
		Do Case
			Case Version(3) = [86]
				Go 1
				Replace title With [将摄氏度转换为华氏度]
				Skip
				Replace title With [JSON 网络令牌生成器]
				Skip 
				Replace title With [简单的 TODO 应用程序]
				Skip
				Replace title With [控制器示例]
				Skip 
				Replace title With [体育统计]
				Skip 
				Replace title With [虚拟商店API]
		EndCase 
		
		*this.cSamplesDir = Addbs(Home(1)) + 'MagicMenuSamples\'
		this.cSamplesDir = 'c:\MagicMenuSamples\'
	ENDPROC

	PROCEDURE Load
		create cursor curSamples ( ;
			title c(200),;
			URL c(200), ;
			FileName c(50), ;
			FolderName c(50), ;
			Downloaded l, ;
			Domain c(200))		&& add by xinjie 
	ENDPROC

	PROCEDURE Unload
		Use in curSamples
	ENDPROC

	PROCEDURE cmdDownload.Click
		Local lcFileZip, lcDestination, lcMacro, loShell, loFile, lcProjectName, lcBuffer, lcProjectDir, lcPjx, lcFullPath
		
		lcFileZip = Addbs(thisform.cSamplesDir) + Alltrim(curSamples.FileName)
		lcDestination = Addbs(thisform.cSamplesDir)
		
		* try to download the .zip file
		*!* fixed by xinjie  2024.01.29
		llReturn = _screen.oHelper.oSystem.DownloadFileFromURL(Alltrim(curSamples.url), lcFileZip)
		
		If llReturn = .F.
			Return 
		EndIf 
		*!*_screen.oHelper.oSystem.DownloadFileFromURL(Alltrim(curSamples.url), lcFileZip)
		
		If !File(lcFileZip)
			Return
		EndIf
		
		loShell=CREATEOBJECT("shell.application")
		FOR EACH loFile IN loShell.NameSpace(lcFileZip).items
		    loShell.NameSpace(lcDestination).copyhere(loFile)
		EndFor
		
		** Update the downloaded field
		replace Downloaded with .t. in cursamples
		
		this.Enabled = .f.
		thisform.cmdModify.Enabled = .t.
		
		lcProjectDir = Addbs(thisform.cSamplesDir) + Alltrim(curSamples.FolderName) + '\'
		If !Directory(lcProjectDir)
			Return
		EndIf
		
		lcProjectName = Alltrim(curSamples.FolderName)
		** Create the new project.json
		TEXT TO lcBuffer NOSHOW TEXTMERGE
		{
		  "name": "<<lcProjectName>>",
		  "type": "WEBAPP",
		  "path": "<<STRTRAN(lcProjectDir, '\', '\\')>>",
		  "main": "Main.prg",
		  "ext": ["prg", "dbf", "dbc", "frx", "blx", "scx", "vcx", "mpx", "fpw", "exe", "app", "fll"],
		  "ignored": ["fxp", "err", "bak", "tbk", "mpr", "tmp", "_command.prg", "foxuser.dbf", "foxuser.fpt", "Thumbs.db", "desktop.ini"],
		  "excluded": [],
		  "removed": []
		}
		ENDTEXT
		STRTOFILE(lcBuffer, lcProjectDir + "project.json")
		
		** Open project and change homeDir
		Use (lcProjectDir + Alltrim(curSamples.FolderName) + '.pjx') Alias curProj Shared In 0
		Replace homedir with lcProjectDir in curProj
		Use in curProj
		
		** Distribution folder
		lcDistFolder = lcProjectDir + 'dist\'
		lcRegisterFile 	 = lcDistFolder + 'Install.bat'
		lcStartFile 	 = lcDistFolder + 'start.bat'
		lcStopFile 		 = lcDistFolder + 'stop.bat'
		lcUnistFile 	 = lcDistFolder + 'uninst.bat'
		lcServiceName 	 = Alltrim(curSamples.FolderName)
		lcXMLFile 		 = lcDistFolder + lcServiceName + '.xml'
		lcWinSWFile 	 = lcDistFolder + 'WinSW.exe'
		
		*!* add by xinjie  2024.02.01
		lcRegister		= lcDistFolder + [register.bat]
		lcUnRegister	= lcDistFolder + [unregister.bat]
		
		** Create the XML config file
		TEXT TO lcBuffer NOSHOW TEXTMERGE
		<service>
			<id><<lcServiceName>></id>
			<name><<lcServiceName>></name>
			<description><<_SCREEN.oHelper.oLanguage.Translate("_6PA17SL2A")>></description>
			<executable><<lcDistFolder + lcServiceName + '.exe'>></executable>	
		</service>
		ENDTEXT
		
		*!* fixed by xinjie  2024.02.01		You need to allow Chinese characters in XML files
		If Version(3) = [86]
			STRTOFILE(Strconv(lcBuffer,5), lcXMLFile, 2)
		Else 
			STRTOFILE(lcBuffer, lcXMLFile)
		EndIf 
		
		*!* add by xinjie  2024.02.01
		TEXT TO lcBuffer NOSHOW TEXTMERGE
		%~d0
		cd %~dp0
		
		regsvr32 /s <<lcProjectName>>.dll
		ENDTEXT
		STRTOFILE(lcBuffer, lcRegister)
		
		TEXT TO lcBuffer NOSHOW TEXTMERGE
		%~d0
		cd %~dp0
		
		regsvr32 /u/s <<lcProjectName>>.dll
		ENDTEXT
		STRTOFILE(lcBuffer, lcUnRegister)
		
		** Create the install file
		TEXT TO lcBuffer NOSHOW TEXTMERGE
		"<<lcWinSWFile>>" install "<<lcXMLFile>>"
		ENDTEXT
		STRTOFILE(lcBuffer, lcRegisterFile)
		
		** Create the start batch file
		TEXT TO lcBuffer NOSHOW TEXTMERGE
		"<<lcWinSWFile>>" start "<<lcXMLFile>>"
		ENDTEXT
		STRTOFILE(lcBuffer, lcStartFile)
		
		** Create the stop batch file
		TEXT TO lcBuffer NOSHOW TEXTMERGE
		"<<lcWinSWFile>>" stop "<<lcXMLFile>>"
		ENDTEXT
		STRTOFILE(lcBuffer, lcStopFile)
		
		** Create the uninstall batch file
		TEXT TO lcBuffer NOSHOW TEXTMERGE
		"<<lcWinSWFile>>" uninstall "<<lcXMLFile>>"
		ENDTEXT
		STRTOFILE(lcBuffer, lcUnistFile)
		
		If !File(lcRegisterFile)
			Return
		EndIf
		
		** Register the service
		WAIT _screen.oHelper.oLanguage.Translate("_6PH124M74") WINDOW NOWAIT
		*!* add by xinjie 2024.02.01
		_SCREEN.oHelper.oSystem.OpenApplication(lcRegister, "", 2)
		_SCREEN.oHelper.oSystem.OpenApplication(lcRegisterFile, "", 2)
		WAIT CLEAR
	ENDPROC

	PROCEDURE cmdDownload.Init
		this.Caption = _screen.oHelper.oLanguage.Translate("_6RS1CC7IY")
	ENDPROC

	PROCEDURE cmdModify.Click
		Local lcFolder, lcFullPath, lcMsg, lcPjx
		lcFolder = Addbs(thisform.cSamplesDir) + Alltrim(curSamples.FolderName) + '\'
		If !Directory(lcFolder)
			Return
		EndIf
		
		lcPjx = Alltrim(curSamples.FolderName) + '.pjx'
		lcFullPath = lcFolder + lcPjx
		If !File(lcFullPath)
			lcMsg = STRTRAN(_SCREEN.oHelper.oLanguage.Translate("_6P81AZT2X"), "{FILENAME}", lcPjx)
			MESSAGEBOX(lcMsg, 16)
			Return
		EndIf
		
		*!* edit by xinjie  2024.01.26		We need the project manager to be there all the time
		*!* Modify Project
		Modify Project (lcFullPath) NOWAIT
		
		*!* Add by xinjie   2024.01.26		The modal form makes user impossible to interact with the project manager
		THISFORM.Release()
	ENDPROC

	PROCEDURE cmdModify.Init
		this.Caption = _screen.oHelper.oLanguage.Translate("_6RS1CBRPT")
	ENDPROC

	PROCEDURE cmdQuit.Click
		THISFORM.Release()
	ENDPROC

	PROCEDURE cmdQuit.Init
		this.Caption = _screen.oHelper.oLanguage.Translate("_6RS1CAKSD")
	ENDPROC

	PROCEDURE Label2.Init
		this.Caption = _screen.oHelper.oLanguage.Translate("_6RS1CF4AA")
	ENDPROC

	PROCEDURE SampleList.InteractiveChange
		thisform.cmdDownload.Enabled = !curSamples.Downloaded
		*!*	thisform.cmdRun.Enabled = curSamples.Downloaded
		thisform.cmdModify.Enabled = curSamples.Downloaded
	ENDPROC

ENDDEFINE

DEFINE CLASS frmnew AS form 
 	*< CLASSDATA: Baseclass="form" Timestamp="" Scale="Pixels" Uniqueid="" />

	*-- OBJECTDATA items order determines ZOrder / El orden de los items OBJECTDATA determina el ZOrder 
	*< OBJECTDATA: ObjPath="Container1" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Label1" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="optApplicationType" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Line1" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Line2" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Line3" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="btnCreate" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Label2" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="btnCancel" UniqueID="" Timestamp="" />

	*<DefinedPropArrayMethod>
		*p: nchoice
		*p: _memberdata		&& XML Metadata for customizable properties
	*</DefinedPropArrayMethod>

	*<PropValue>
		AutoCenter = .T.
		BorderStyle = 2
		Caption = "Nuevo"
		Closable = .F.
		DoCreate = .T.
		FontName = "MS Sans Serif"
		Height = 252
		MaxButton = .F.
		MinButton = .F.
		Name = "frmnew"
		nchoice = 0
		Width = 310
		WindowType = 1
		_memberdata = <VFPData>

		</VFPData>
	*</PropValue>

	ADD OBJECT 'btnCancel' AS commandbutton WITH ;
		Cancel = .T., ;
		Caption = "Cancelar", ;
		FontName = "MS Sans Serif", ;
		FontSize = 9, ;
		Height = 26, ;
		Left = 240, ;
		Name = "btnCancel", ;
		Top = 204, ;
		Width = 60
		*< END OBJECT: BaseClass="commandbutton" />

	ADD OBJECT 'btnCreate' AS commandbutton WITH ;
		Caption = "", ;
		Default = .T., ;
		Height = 63, ;
		Left = 240, ;
		Name = "btnCreate", ;
		Picture = ..\bmps\page_white_width.bmp, ;
		Top = 24, ;
		Width = 60
		*< END OBJECT: BaseClass="commandbutton" />

	ADD OBJECT 'Container1' AS container WITH ;
		BackStyle = 0, ;
		BorderColor = 192,192,192, ;
		Height = 212, ;
		Left = 24, ;
		Name = "Container1", ;
		Top = 24, ;
		Width = 206
		*< END OBJECT: BaseClass="container" />

	ADD OBJECT 'Label1' AS label WITH ;
		Anchor = 0, ;
		AutoSize = .T., ;
		Caption = "Tipo de proyecto", ;
		FontName = "MS Sans Serif", ;
		Height = 15, ;
		Left = 31, ;
		Name = "Label1", ;
		Top = 17, ;
		Width = 82
		*< END OBJECT: BaseClass="label" />

	ADD OBJECT 'Label2' AS label WITH ;
		Alignment = 2, ;
		AutoSize = .F., ;
		BackStyle = 0, ;
		Caption = "\<Nuevo", ;
		FontName = "MS Sans Serif", ;
		Height = 16, ;
		Left = 242, ;
		Name = "Label2", ;
		Top = 88, ;
		Width = 56
		*< END OBJECT: BaseClass="label" />

	ADD OBJECT 'Line1' AS line WITH ;
		BorderWidth = 2, ;
		DrawMode = 16, ;
		Height = 0, ;
		Left = 36, ;
		Name = "Line1", ;
		Top = 48, ;
		Width = 181
		*< END OBJECT: BaseClass="line" />

	ADD OBJECT 'Line2' AS line WITH ;
		BorderWidth = 2, ;
		DrawMode = 16, ;
		Height = 0, ;
		Left = 36, ;
		Name = "Line2", ;
		Top = 117, ;
		Width = 181
		*< END OBJECT: BaseClass="line" />

	ADD OBJECT 'Line3' AS line WITH ;
		BorderWidth = 2, ;
		DrawMode = 16, ;
		Height = 0, ;
		Left = 36, ;
		Name = "Line3", ;
		Top = 171, ;
		Width = 181
		*< END OBJECT: BaseClass="line" />

	ADD OBJECT 'optApplicationType' AS optiongroup WITH ;
		BackStyle = 0, ;
		BorderStyle = 0, ;
		ButtonCount = 7, ;
		ControlSource = "thisform.nChoice", ;
		Height = 171, ;
		Left = 36, ;
		Name = "optApplicationType", ;
		Top = 50, ;
		Value = 1, ;
		Width = 189, ;
		Option1.AutoSize = .T., ;
		Option1.BackStyle = 0, ;
		Option1.Caption = "\<Ejecutable con Ventanas", ;
		Option1.FontName = "MS Sans Serif", ;
		Option1.FontSize = 9, ;
		Option1.Height = 15, ;
		Option1.Left = 5, ;
		Option1.Name = "Option1", ;
		Option1.Top = 5, ;
		Option1.Value = 1, ;
		Option1.Width = 137, ;
		Option2.AutoSize = .T., ;
		Option2.BackStyle = 0, ;
		Option2.Caption = "\<Ejecutable de Consola", ;
		Option2.FontName = "MS Sans Serif", ;
		Option2.FontSize = 9, ;
		Option2.Height = 15, ;
		Option2.Left = 5, ;
		Option2.Name = "Option2", ;
		Option2.Top = 24, ;
		Option2.Width = 124, ;
		Option3.AutoSize = .T., ;
		Option3.BackStyle = 0, ;
		Option3.Caption = "\<Aplicaci髇 (app)", ;
		Option3.FontName = "MS Sans Serif", ;
		Option3.FontSize = 9, ;
		Option3.Height = 15, ;
		Option3.Left = 5, ;
		Option3.Name = "Option3", ;
		Option3.Top = 43, ;
		Option3.Width = 94, ;
		Option4.AutoSize = .T., ;
		Option4.BackStyle = 0, ;
		Option4.Caption = "\<Servicio de Windows", ;
		Option4.FontName = "MS Sans Serif", ;
		Option4.FontSize = 9, ;
		Option4.Height = 15, ;
		Option4.Left = 5, ;
		Option4.Name = "Option4", ;
		Option4.Top = 75, ;
		Option4.Width = 118, ;
		Option5.AutoSize = .T., ;
		Option5.BackStyle = 0, ;
		Option5.Caption = "Aplicaci髇 \<Web", ;
		Option5.FontName = "MS Sans Serif", ;
		Option5.FontSize = 9, ;
		Option5.Height = 15, ;
		Option5.Left = 5, ;
		Option5.Name = "Option5", ;
		Option5.Top = 97, ;
		Option5.Width = 93, ;
		Option6.AutoSize = .T., ;
		Option6.BackStyle = 0, ;
		Option6.Caption = "\<Librer韆 COM monousuario", ;
		Option6.FontName = "MS Sans Serif", ;
		Option6.FontSize = 9, ;
		Option6.Height = 15, ;
		Option6.Left = 5, ;
		Option6.Name = "Option6", ;
		Option6.Top = 129, ;
		Option6.Width = 144, ;
		Option7.AutoSize = .T., ;
		Option7.BackStyle = 0, ;
		Option7.Caption = "Librer韆 COM \<multiusuario", ;
		Option7.FontName = "MS Sans Serif", ;
		Option7.FontSize = 9, ;
		Option7.Height = 15, ;
		Option7.Left = 5, ;
		Option7.Name = "Option7", ;
		Option7.Top = 148, ;
		Option7.Width = 139
		*< END OBJECT: BaseClass="optiongroup" />
	
	PROCEDURE Init
		this.caption = _screen.oHelper.oLanguage.Translate("_6P50KBH6A")
	ENDPROC

	PROCEDURE Show
		LPARAMETERS nStyle
		this.nChoice = 1 && Executable with windows
	ENDPROC

	PROCEDURE btnCancel.Click
		thisform.nChoice = 0
		thisform.hide()
	ENDPROC

	PROCEDURE btnCancel.Init
		this.caption = _screen.oHelper.oLanguage.Translate("_6P50KKH0I")
	ENDPROC

	PROCEDURE btnCreate.Click
		thisform.Hide()
	ENDPROC

	PROCEDURE Label1.Init
		this.caption = _screen.oHelper.oLanguage.Translate("_6P50KE1RG")
	ENDPROC

	PROCEDURE Label2.Init
		this.caption = _screen.oHelper.oLanguage.Translate("_6P50KBH6A")
	ENDPROC

	PROCEDURE optApplicationType.Option1.Init
		this.caption = _screen.oHelper.oLanguage.Translate("_6P50KFZ9B")
	ENDPROC

	PROCEDURE optApplicationType.Option2.Init
		this.caption = _screen.oHelper.oLanguage.Translate("_6P50KGU2L")
	ENDPROC

	PROCEDURE optApplicationType.Option3.Init
		this.caption = _screen.oHelper.oLanguage.Translate("_6P50KHKOY")
	ENDPROC

	PROCEDURE optApplicationType.Option4.Init
		this.caption = _screen.oHelper.oLanguage.Translate("_6P50KI1K9")
	ENDPROC

	PROCEDURE optApplicationType.Option5.Init
		this.caption = _screen.oHelper.oLanguage.Translate("_6P50KIJGC")
	ENDPROC

	PROCEDURE optApplicationType.Option6.Init
		this.caption = _screen.oHelper.oLanguage.Translate("_6P50KJAF6")
	ENDPROC

	PROCEDURE optApplicationType.Option7.Init
		this.caption = _screen.oHelper.oLanguage.Translate("_6P50KJUH1")
	ENDPROC

ENDDEFINE

DEFINE CLASS frmnewconsole AS form 
 	*< CLASSDATA: Baseclass="form" Timestamp="" Scale="Pixels" Uniqueid="" />

	*-- OBJECTDATA items order determines ZOrder / El orden de los items OBJECTDATA determina el ZOrder 
	*< OBJECTDATA: ObjPath="txtName" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Label1" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="txtPhysicalData" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Label5" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="btnBrowse" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="btnCreate" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Command1" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Line1" UniqueID="" Timestamp="" />

	*<DefinedPropArrayMethod>
		*p: oproject
		*p: _memberdata		&& XML Metadata for customizable properties
	*</DefinedPropArrayMethod>

	*<PropValue>
		AutoCenter = .T.
		BorderStyle = 2
		Caption = "Nuevo"
		Closable = .F.
		DoCreate = .T.
		FontName = "MS Sans Serif"
		Height = 180
		MaxButton = .F.
		MinButton = .F.
		Name = "frmnewconsole"
		oproject = .NULL.
		Width = 375
		_memberdata = <VFPData>

		</VFPData>
	*</PropValue>

	ADD OBJECT 'btnBrowse' AS commandbutton WITH ;
		Caption = "...", ;
		FontName = "MS Sans Serif", ;
		Height = 25, ;
		Left = 330, ;
		Name = "btnBrowse", ;
		TabIndex = 7, ;
		Top = 87, ;
		Width = 34
		*< END OBJECT: BaseClass="commandbutton" />

	ADD OBJECT 'btnCreate' AS commandbutton WITH ;
		Caption = "\<Crear", ;
		FontName = "MS Sans Serif", ;
		Height = 25, ;
		Left = 223, ;
		Name = "btnCreate", ;
		TabIndex = 11, ;
		Top = 142, ;
		Width = 70
		*< END OBJECT: BaseClass="commandbutton" />

	ADD OBJECT 'Command1' AS commandbutton WITH ;
		Cancel = .T., ;
		Caption = "C\<ancelar", ;
		FontName = "MS Sans Serif", ;
		Height = 25, ;
		Left = 295, ;
		Name = "Command1", ;
		TabIndex = 12, ;
		Top = 142, ;
		Width = 70
		*< END OBJECT: BaseClass="commandbutton" />

	ADD OBJECT 'Label1' AS label WITH ;
		AutoSize = .T., ;
		Caption = "Nombre del Proyecto", ;
		FontName = "MS Sans Serif", ;
		Height = 15, ;
		Left = 12, ;
		Name = "Label1", ;
		TabIndex = 1, ;
		Top = 12, ;
		Width = 101
		*< END OBJECT: BaseClass="label" />

	ADD OBJECT 'Label5' AS label WITH ;
		AutoSize = .T., ;
		Caption = "Ruta f韘ica de los datos", ;
		FontName = "MS Sans Serif", ;
		Height = 15, ;
		Left = 12, ;
		Name = "Label5", ;
		TabIndex = 5, ;
		Top = 72, ;
		Width = 114
		*< END OBJECT: BaseClass="label" />

	ADD OBJECT 'Line1' AS line WITH ;
		BorderWidth = 2, ;
		DrawMode = 16, ;
		Height = 0, ;
		Left = 12, ;
		Name = "Line1", ;
		Top = 129, ;
		Width = 348
		*< END OBJECT: BaseClass="line" />

	ADD OBJECT 'txtName' AS textbox WITH ;
		ControlSource = "thisform.oProject.cName", ;
		FontName = "MS Sans Serif", ;
		Height = 23, ;
		Left = 12, ;
		Name = "txtName", ;
		TabIndex = 2, ;
		Top = 28, ;
		Width = 352
		*< END OBJECT: BaseClass="textbox" />

	ADD OBJECT 'txtPhysicalData' AS textbox WITH ;
		ControlSource = "thisform.oProject.cDirectory", ;
		FontName = "MS Sans Serif", ;
		Height = 23, ;
		Left = 12, ;
		Name = "txtPhysicalData", ;
		TabIndex = 6, ;
		Top = 88, ;
		Width = 316
		*< END OBJECT: BaseClass="textbox" />
	
	PROCEDURE Load
		THIS.oProject = CREATEOBJECT("Empty")
		ADDPROPERTY(THIS.oProject, "cName", "")
		ADDPROPERTY(THIS.oProject, "cDirectory", "")
	ENDPROC

	PROCEDURE Show
		LPARAMETERS nStyle
		this.Caption = _screen.oHelper.oLanguage.Translate("_6P90MMSSY")
	ENDPROC

	PROCEDURE btnBrowse.Click
		LOCAL lcPath
		lcPath = GETDIR(_screen.oMagicMenu.cMainDir)
		IF NOT DIRECTORY(lcPath)
			RETURN
		ENDIF
		
		THISFORM.txtPhysicalData.VALUE = lcPath
	ENDPROC

	PROCEDURE btnBrowse.Init
		this.tooltiptext = _screen.oHelper.oLanguage.Translate("_6P50KPJA9", 2)
	ENDPROC

	PROCEDURE btnCreate.Click
		IF EMPTY(THISFORM.oProject.cName)
			MESSAGEBOX(_screen.oHelper.oLanguage.Translate("_6P50L65PB"), 48)
			thisform.txtName.SetFocus()
			RETURN
		ENDIF
		
		IF EMPTY(THISFORM.oProject.cDirectory)
			MESSAGEBOX(_screen.oHelper.oLanguage.Translate("_6P50LAPWT"), 48)
			thisform.txtPhysicalData.SetFocus()
			RETURN
		ENDIF
		
		thisform.Hide()
	ENDPROC

	PROCEDURE btnCreate.Init
		this.caption = _screen.oHelper.oLanguage.Translate("_6P50KSO2T")
	ENDPROC

	PROCEDURE Command1.Click
		THISFORM.oProject.cName = ""
		THISFORM.oProject.cDirectory = ""
		thisform.Hide()
	ENDPROC

	PROCEDURE Command1.Init
		this.caption = _screen.oHelper.oLanguage.Translate("_6P50KT37N")
	ENDPROC

	PROCEDURE Label1.Init
		this.caption = _screen.oHelper.oLanguage.Translate("_6P90M4WKO")
	ENDPROC

	PROCEDURE Label5.Init
		this.caption = _screen.oHelper.oLanguage.Translate("_6P50KPJA9")
	ENDPROC

ENDDEFINE

DEFINE CLASS frmnewlibrary AS form 
 	*< CLASSDATA: Baseclass="form" Timestamp="" Scale="Pixels" Uniqueid="" />

	*-- OBJECTDATA items order determines ZOrder / El orden de los items OBJECTDATA determina el ZOrder 
	*< OBJECTDATA: ObjPath="txtName" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Label1" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="txtPhysicalData" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Label5" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="btnBrowse" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="btnCreate" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Command1" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Line1" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="txtClassName" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Label2" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="txtBasedOn" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Label3" UniqueID="" Timestamp="" />

	*<DefinedPropArrayMethod>
		*p: oproject
		*p: _memberdata		&& XML Metadata for customizable properties
	*</DefinedPropArrayMethod>

	*<PropValue>
		AutoCenter = .T.
		BorderStyle = 2
		Caption = "Nuevo"
		Closable = .F.
		DoCreate = .T.
		FontName = "MS Sans Serif"
		Height = 223
		MaxButton = .F.
		MinButton = .F.
		Name = "frmnewlibrary"
		oproject = .NULL.
		Width = 375
		_memberdata = <VFPData>

		</VFPData>
	*</PropValue>

	ADD OBJECT 'btnBrowse' AS commandbutton WITH ;
		Caption = "...", ;
		FontName = "MS Sans Serif", ;
		Height = 25, ;
		Left = 330, ;
		Name = "btnBrowse", ;
		TabIndex = 9, ;
		Top = 135, ;
		Width = 34
		*< END OBJECT: BaseClass="commandbutton" />

	ADD OBJECT 'btnCreate' AS commandbutton WITH ;
		Caption = "\<Crear", ;
		FontName = "MS Sans Serif", ;
		Height = 25, ;
		Left = 223, ;
		Name = "btnCreate", ;
		TabIndex = 10, ;
		Top = 190, ;
		Width = 70
		*< END OBJECT: BaseClass="commandbutton" />

	ADD OBJECT 'Command1' AS commandbutton WITH ;
		Cancel = .T., ;
		Caption = "C\<ancelar", ;
		FontName = "MS Sans Serif", ;
		Height = 25, ;
		Left = 295, ;
		Name = "Command1", ;
		TabIndex = 11, ;
		Top = 190, ;
		Width = 70
		*< END OBJECT: BaseClass="commandbutton" />

	ADD OBJECT 'Label1' AS label WITH ;
		AutoSize = .T., ;
		Caption = "Nombre del Proyecto", ;
		FontName = "MS Sans Serif", ;
		Height = 15, ;
		Left = 12, ;
		Name = "Label1", ;
		TabIndex = 1, ;
		Top = 12, ;
		Width = 101
		*< END OBJECT: BaseClass="label" />

	ADD OBJECT 'Label2' AS label WITH ;
		AutoSize = .T., ;
		Caption = "Nombre de la Clase", ;
		FontName = "MS Sans Serif", ;
		Height = 15, ;
		Left = 12, ;
		Name = "Label2", ;
		TabIndex = 3, ;
		Top = 66, ;
		Width = 94
		*< END OBJECT: BaseClass="label" />

	ADD OBJECT 'Label3' AS label WITH ;
		AutoSize = .T., ;
		Caption = "Basada en", ;
		FontName = "MS Sans Serif", ;
		Height = 15, ;
		Left = 192, ;
		Name = "Label3", ;
		TabIndex = 5, ;
		Top = 66, ;
		Width = 53
		*< END OBJECT: BaseClass="label" />

	ADD OBJECT 'Label5' AS label WITH ;
		AutoSize = .T., ;
		Caption = "Ruta f韘ica de los datos", ;
		FontName = "MS Sans Serif", ;
		Height = 15, ;
		Left = 12, ;
		Name = "Label5", ;
		TabIndex = 7, ;
		Top = 120, ;
		Width = 114
		*< END OBJECT: BaseClass="label" />

	ADD OBJECT 'Line1' AS line WITH ;
		BorderWidth = 2, ;
		DrawMode = 16, ;
		Height = 0, ;
		Left = 12, ;
		Name = "Line1", ;
		Top = 177, ;
		Width = 348
		*< END OBJECT: BaseClass="line" />

	ADD OBJECT 'txtBasedOn' AS textbox WITH ;
		ControlSource = "thisform.oProject.cClassBasedOn", ;
		FontName = "MS Sans Serif", ;
		Height = 23, ;
		Left = 192, ;
		Name = "txtBasedOn", ;
		TabIndex = 6, ;
		Top = 82, ;
		Width = 172
		*< END OBJECT: BaseClass="textbox" />

	ADD OBJECT 'txtClassName' AS textbox WITH ;
		ControlSource = "thisform.oProject.cClassName", ;
		FontName = "MS Sans Serif", ;
		Height = 23, ;
		Left = 12, ;
		Name = "txtClassName", ;
		TabIndex = 4, ;
		Top = 82, ;
		Width = 172
		*< END OBJECT: BaseClass="textbox" />

	ADD OBJECT 'txtName' AS textbox WITH ;
		ControlSource = "thisform.oProject.cName", ;
		FontName = "MS Sans Serif", ;
		Height = 23, ;
		Left = 12, ;
		Name = "txtName", ;
		TabIndex = 2, ;
		Top = 28, ;
		Width = 352
		*< END OBJECT: BaseClass="textbox" />

	ADD OBJECT 'txtPhysicalData' AS textbox WITH ;
		ControlSource = "thisform.oProject.cDirectory", ;
		FontName = "MS Sans Serif", ;
		Height = 23, ;
		Left = 12, ;
		Name = "txtPhysicalData", ;
		TabIndex = 8, ;
		Top = 136, ;
		Width = 316
		*< END OBJECT: BaseClass="textbox" />
	
	PROCEDURE Load
		THIS.oProject = CREATEOBJECT("Empty")
		ADDPROPERTY(THIS.oProject, "cName", "")
		ADDPROPERTY(THIS.oProject, "cClassName", "")
		ADDPROPERTY(THIS.oProject, "cClassBasedOn", "Session")
		ADDPROPERTY(THIS.oProject, "cDirectory", "")
	ENDPROC

	PROCEDURE Show
		LPARAMETERS nStyle
		this.Caption = _screen.oHelper.oLanguage.Translate("_6P90MMSSY")
	ENDPROC

	PROCEDURE btnBrowse.Click
		LOCAL lcPath
		lcPath = GETDIR(_screen.oMagicMenu.cMainDir)
		IF NOT DIRECTORY(lcPath)
			RETURN
		ENDIF
		
		THISFORM.txtPhysicalData.VALUE = lcPath
	ENDPROC

	PROCEDURE btnBrowse.Init
		this.tooltiptext = _screen.oHelper.oLanguage.Translate("_6P50KPJA9", 2)
	ENDPROC

	PROCEDURE btnCreate.Click
		IF EMPTY(THISFORM.oProject.cName)
			MESSAGEBOX(_screen.oHelper.oLanguage.Translate("_6P50L65PB"), 48)
			thisform.txtName.SetFocus()
			RETURN
		ENDIF
		
		IF EMPTY(THISFORM.oProject.cClassName)
			MESSAGEBOX(_screen.oHelper.oLanguage.Translate("_6QY0STPEG"), 48)
			thisform.txtClassName.SetFocus()
			RETURN
		ENDIF
		
		IF EMPTY(THISFORM.oProject.cClassBasedOn)
			THISFORM.oProject.cClassBasedOn = 'Session'
		ENDIF
		
		IF EMPTY(THISFORM.oProject.cDirectory)
			MESSAGEBOX(_screen.oHelper.oLanguage.Translate("_6P50LAPWT"), 48)
			thisform.txtPhysicalData.SetFocus()
			RETURN
		ENDIF
		
		thisform.Hide()
	ENDPROC

	PROCEDURE btnCreate.Init
		this.caption = _screen.oHelper.oLanguage.Translate("_6P50KSO2T")
	ENDPROC

	PROCEDURE Command1.Click
		THISFORM.oProject.cName = ""
		THISFORM.oProject.cDirectory = ""
		thisform.Hide()
	ENDPROC

	PROCEDURE Command1.Init
		this.caption = _screen.oHelper.oLanguage.Translate("_6P50KT37N")
	ENDPROC

	PROCEDURE Label1.Init
		this.caption = _screen.oHelper.oLanguage.Translate("_6P90M4WKO")
	ENDPROC

	PROCEDURE Label2.Init
		this.caption = _screen.oHelper.oLanguage.Translate("_6QY0SOTKA")
	ENDPROC

	PROCEDURE Label3.Init
		this.caption = _screen.oHelper.oLanguage.Translate("_6QY0SPFG5")
	ENDPROC

	PROCEDURE Label5.Init
		this.caption = _screen.oHelper.oLanguage.Translate("_6P50KPJA9")
	ENDPROC

ENDDEFINE

DEFINE CLASS frmnewservice AS form 
 	*< CLASSDATA: Baseclass="form" Timestamp="" Scale="Pixels" Uniqueid="" />

	*-- OBJECTDATA items order determines ZOrder / El orden de los items OBJECTDATA determina el ZOrder 
	*< OBJECTDATA: ObjPath="txtName" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Label1" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="txtPhysicalData" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Label5" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="btnBrowse" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="btnCreate" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Command1" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Line1" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Label2" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="edtDescription" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="txtDisplayName" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Label3" UniqueID="" Timestamp="" />

	*<DefinedPropArrayMethod>
		*p: oproject
		*p: _memberdata		&& XML Metadata for customizable properties
	*</DefinedPropArrayMethod>

	*<PropValue>
		AutoCenter = .T.
		BorderStyle = 2
		Caption = "Nuevo"
		Closable = .F.
		DoCreate = .T.
		FontName = "MS Sans Serif"
		Height = 283
		MaxButton = .F.
		MinButton = .F.
		Name = "frmnewservice"
		oproject = .NULL.
		Width = 375
		_memberdata = <VFPData>

		</VFPData>
	*</PropValue>

	ADD OBJECT 'btnBrowse' AS commandbutton WITH ;
		Caption = "...", ;
		FontName = "MS Sans Serif", ;
		Height = 25, ;
		Left = 330, ;
		Name = "btnBrowse", ;
		TabIndex = 9, ;
		Top = 196, ;
		Width = 34
		*< END OBJECT: BaseClass="commandbutton" />

	ADD OBJECT 'btnCreate' AS commandbutton WITH ;
		Caption = "\<Crear", ;
		FontName = "MS Sans Serif", ;
		Height = 25, ;
		Left = 223, ;
		Name = "btnCreate", ;
		TabIndex = 10, ;
		Top = 251, ;
		Width = 70
		*< END OBJECT: BaseClass="commandbutton" />

	ADD OBJECT 'Command1' AS commandbutton WITH ;
		Cancel = .T., ;
		Caption = "C\<ancelar", ;
		FontName = "MS Sans Serif", ;
		Height = 25, ;
		Left = 295, ;
		Name = "Command1", ;
		TabIndex = 11, ;
		Top = 251, ;
		Width = 70
		*< END OBJECT: BaseClass="commandbutton" />

	ADD OBJECT 'edtDescription' AS editbox WITH ;
		ControlSource = "thisform.oProject.cDescription", ;
		FontName = "MS Sans Serif", ;
		Height = 49, ;
		Left = 12, ;
		Name = "edtDescription", ;
		TabIndex = 6, ;
		Top = 124, ;
		Width = 352
		*< END OBJECT: BaseClass="editbox" />

	ADD OBJECT 'Label1' AS label WITH ;
		AutoSize = .T., ;
		Caption = "Nombre del Servicio", ;
		FontName = "MS Sans Serif", ;
		Height = 15, ;
		Left = 12, ;
		Name = "Label1", ;
		TabIndex = 1, ;
		Top = 12, ;
		Width = 97
		*< END OBJECT: BaseClass="label" />

	ADD OBJECT 'Label2' AS label WITH ;
		AutoSize = .T., ;
		Caption = "Descripci髇", ;
		FontName = "MS Sans Serif", ;
		Height = 15, ;
		Left = 12, ;
		Name = "Label2", ;
		TabIndex = 5, ;
		Top = 108, ;
		Width = 58
		*< END OBJECT: BaseClass="label" />

	ADD OBJECT 'Label3' AS label WITH ;
		AutoSize = .T., ;
		Caption = "Nombre para mostrar", ;
		FontName = "MS Sans Serif", ;
		Height = 15, ;
		Left = 12, ;
		Name = "Label3", ;
		TabIndex = 3, ;
		Top = 60, ;
		Width = 100
		*< END OBJECT: BaseClass="label" />

	ADD OBJECT 'Label5' AS label WITH ;
		AutoSize = .T., ;
		Caption = "Ruta f韘ica de los datos", ;
		FontName = "MS Sans Serif", ;
		Height = 15, ;
		Left = 12, ;
		Name = "Label5", ;
		TabIndex = 7, ;
		Top = 181, ;
		Width = 114
		*< END OBJECT: BaseClass="label" />

	ADD OBJECT 'Line1' AS line WITH ;
		BorderWidth = 2, ;
		DrawMode = 16, ;
		Height = 0, ;
		Left = 12, ;
		Name = "Line1", ;
		Top = 238, ;
		Width = 348
		*< END OBJECT: BaseClass="line" />

	ADD OBJECT 'txtDisplayName' AS textbox WITH ;
		ControlSource = "thisform.oProject.cDisplayName", ;
		FontName = "MS Sans Serif", ;
		Height = 23, ;
		Left = 12, ;
		Name = "txtDisplayName", ;
		TabIndex = 4, ;
		Top = 76, ;
		Width = 352
		*< END OBJECT: BaseClass="textbox" />

	ADD OBJECT 'txtName' AS textbox WITH ;
		ControlSource = "thisform.oProject.cName", ;
		FontName = "MS Sans Serif", ;
		Height = 23, ;
		Left = 12, ;
		Name = "txtName", ;
		TabIndex = 2, ;
		Top = 28, ;
		Width = 352
		*< END OBJECT: BaseClass="textbox" />

	ADD OBJECT 'txtPhysicalData' AS textbox WITH ;
		ControlSource = "thisform.oProject.cDirectory", ;
		FontName = "MS Sans Serif", ;
		Height = 23, ;
		Left = 12, ;
		Name = "txtPhysicalData", ;
		TabIndex = 8, ;
		Top = 197, ;
		Width = 316
		*< END OBJECT: BaseClass="textbox" />
	
	PROCEDURE Load
		THIS.oProject = CREATEOBJECT("Empty")
		ADDPROPERTY(THIS.oProject, "cName", "")
		ADDPROPERTY(THIS.oProject, "cDisplayName", "")
		ADDPROPERTY(THIS.oProject, "cDescription", "")
		ADDPROPERTY(THIS.oProject, "cDirectory", "")
	ENDPROC

	PROCEDURE Show
		LPARAMETERS nStyle
		this.Caption = _screen.oHelper.oLanguage.Translate("_6P90MMSSY")
	ENDPROC

	PROCEDURE btnBrowse.Click
		LOCAL lcPath
		lcPath = GETDIR(_screen.oMagicMenu.cMainDir)
		IF NOT DIRECTORY(lcPath)
			RETURN
		ENDIF
		
		THISFORM.txtPhysicalData.VALUE = lcPath
	ENDPROC

	PROCEDURE btnBrowse.Init
		this.tooltiptext = _screen.oHelper.oLanguage.Translate("_6P50KPJA9", 2)
	ENDPROC

	PROCEDURE btnCreate.Click
		IF EMPTY(THISFORM.oProject.cName)
			MESSAGEBOX(_screen.oHelper.oLanguage.Translate("_6P50L65PB"), 48)
			thisform.txtName.SetFocus()
			RETURN
		ENDIF
		
		IF EMPTY(THISFORM.oProject.cDirectory)
			MESSAGEBOX(_screen.oHelper.oLanguage.Translate("_6P50LAPWT"), 48)
			thisform.txtPhysicalData.SetFocus()
			RETURN
		ENDIF
		
		thisform.Hide()
	ENDPROC

	PROCEDURE btnCreate.Init
		this.caption = _screen.oHelper.oLanguage.Translate("_6P50KSO2T")
	ENDPROC

	PROCEDURE Command1.Click
		THISFORM.oProject.cName = ""
		THISFORM.oProject.cDirectory = ""
		thisform.Hide()
	ENDPROC

	PROCEDURE Command1.Init
		this.caption = _screen.oHelper.oLanguage.Translate("_6P50KT37N")
	ENDPROC

	PROCEDURE Label1.Init
		this.caption = _screen.oHelper.oLanguage.Translate("_6PA13ZIM1")
	ENDPROC

	PROCEDURE Label2.Init
		this.caption = _screen.oHelper.oLanguage.Translate("_6PA13ZXAO")
	ENDPROC

	PROCEDURE Label3.Init
		this.caption = _screen.oHelper.oLanguage.Translate("_6PC18N35O")
	ENDPROC

	PROCEDURE Label5.Init
		this.caption = _screen.oHelper.oLanguage.Translate("_6P50KPJA9")
	ENDPROC

ENDDEFINE

DEFINE CLASS frmnewsite AS form 
 	*< CLASSDATA: Baseclass="form" Timestamp="" Scale="Pixels" Uniqueid="" />

	*-- OBJECTDATA items order determines ZOrder / El orden de los items OBJECTDATA determina el ZOrder 
	*< OBJECTDATA: ObjPath="txtSiteName" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Label1" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Label2" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Label3" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="txtSitePort" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Label4" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="txtSitePhysicalData" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Label5" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="btnBrowse" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="btnCreate" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Command1" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Line1" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="txtSiteHostName" UniqueID="" Timestamp="" />

	*<DefinedPropArrayMethod>
		*p: osite
		*p: _memberdata		&& XML Metadata for customizable properties
	*</DefinedPropArrayMethod>

	*<PropValue>
		AutoCenter = .T.
		BorderStyle = 2
		Caption = "New Site"
		Closable = .F.
		DoCreate = .T.
		FontName = "MS Sans Serif"
		Height = 250
		MaxButton = .F.
		MinButton = .F.
		Name = "frmnewsite"
		osite = .NULL.
		Width = 375
		_memberdata = <VFPData>

		</VFPData>
	*</PropValue>

	ADD OBJECT 'btnBrowse' AS commandbutton WITH ;
		Caption = "...", ;
		FontName = "MS Sans Serif", ;
		Height = 25, ;
		Left = 330, ;
		Name = "btnBrowse", ;
		TabIndex = 7, ;
		Top = 87, ;
		Width = 34
		*< END OBJECT: BaseClass="commandbutton" />

	ADD OBJECT 'btnCreate' AS commandbutton WITH ;
		Caption = "\<Crear", ;
		FontName = "MS Sans Serif", ;
		Height = 25, ;
		Left = 223, ;
		Name = "btnCreate", ;
		TabIndex = 11, ;
		Top = 217, ;
		Width = 70
		*< END OBJECT: BaseClass="commandbutton" />

	ADD OBJECT 'Command1' AS commandbutton WITH ;
		Cancel = .T., ;
		Caption = "C\<ancelar", ;
		FontName = "MS Sans Serif", ;
		Height = 25, ;
		Left = 295, ;
		Name = "Command1", ;
		TabIndex = 12, ;
		Top = 217, ;
		Width = 70
		*< END OBJECT: BaseClass="commandbutton" />

	ADD OBJECT 'Label1' AS label WITH ;
		AutoSize = .T., ;
		Caption = "Nombre del Sitio", ;
		FontName = "MS Sans Serif", ;
		Height = 15, ;
		Left = 12, ;
		Name = "Label1", ;
		TabIndex = 1, ;
		Top = 12, ;
		Width = 79
		*< END OBJECT: BaseClass="label" />

	ADD OBJECT 'Label2' AS label WITH ;
		AutoSize = .T., ;
		Caption = "Nombre del Dominio", ;
		FontName = "MS Sans Serif", ;
		Height = 15, ;
		Left = 12, ;
		Name = "Label2", ;
		TabIndex = 8, ;
		Top = 132, ;
		Width = 97
		*< END OBJECT: BaseClass="label" />

	ADD OBJECT 'Label3' AS label WITH ;
		AutoSize = .T., ;
		Caption = "Ejemplo: www.contoso.com o marketing.contoso.com", ;
		FontName = "MS Sans Serif", ;
		FontSize = 8, ;
		Height = 15, ;
		Left = 13, ;
		Name = "Label3", ;
		TabIndex = 10, ;
		Top = 174, ;
		Width = 255
		*< END OBJECT: BaseClass="label" />

	ADD OBJECT 'Label4' AS label WITH ;
		AutoSize = .T., ;
		Caption = "Puerto", ;
		FontName = "MS Sans Serif", ;
		Height = 15, ;
		Left = 300, ;
		Name = "Label4", ;
		TabIndex = 3, ;
		Top = 12, ;
		Width = 33
		*< END OBJECT: BaseClass="label" />

	ADD OBJECT 'Label5' AS label WITH ;
		AutoSize = .T., ;
		Caption = "Ruta f韘ica de los datos", ;
		FontName = "MS Sans Serif", ;
		Height = 15, ;
		Left = 12, ;
		Name = "Label5", ;
		TabIndex = 5, ;
		Top = 72, ;
		Width = 114
		*< END OBJECT: BaseClass="label" />

	ADD OBJECT 'Line1' AS line WITH ;
		BorderWidth = 2, ;
		DrawMode = 16, ;
		Height = 0, ;
		Left = 12, ;
		Name = "Line1", ;
		Top = 204, ;
		Width = 348
		*< END OBJECT: BaseClass="line" />

	ADD OBJECT 'txtSiteHostName' AS textbox WITH ;
		ControlSource = "thisform.oSite.cHost", ;
		FontName = "MS Sans Serif", ;
		Height = 23, ;
		Left = 12, ;
		Name = "txtSiteHostName", ;
		TabIndex = 9, ;
		Top = 149, ;
		Width = 352
		*< END OBJECT: BaseClass="textbox" />

	ADD OBJECT 'txtSiteName' AS textbox WITH ;
		ControlSource = "thisform.oSite.cName", ;
		FontName = "MS Sans Serif", ;
		Height = 23, ;
		Left = 12, ;
		Name = "txtSiteName", ;
		TabIndex = 2, ;
		Top = 28, ;
		Width = 280
		*< END OBJECT: BaseClass="textbox" />

	ADD OBJECT 'txtSitePhysicalData' AS textbox WITH ;
		ControlSource = "thisform.oSite.cDirectory", ;
		FontName = "MS Sans Serif", ;
		Height = 23, ;
		Left = 12, ;
		Name = "txtSitePhysicalData", ;
		TabIndex = 6, ;
		Top = 88, ;
		Width = 316
		*< END OBJECT: BaseClass="textbox" />

	ADD OBJECT 'txtSitePort' AS textbox WITH ;
		ControlSource = "thisform.oSite.nPort", ;
		FontName = "MS Sans Serif", ;
		Height = 23, ;
		Left = 300, ;
		Name = "txtSitePort", ;
		TabIndex = 4, ;
		Top = 28, ;
		Width = 64
		*< END OBJECT: BaseClass="textbox" />
	
	PROCEDURE Load
		THIS.oSite = CREATEOBJECT("Empty")
		ADDPROPERTY(THIS.oSite, "cName", "")
		ADDPROPERTY(THIS.oSite, "nPort", 8080)
		ADDPROPERTY(THIS.oSite, "cDirectory", "")
		ADDPROPERTY(THIS.oSite, "cHost", "127.0.0.1")
	ENDPROC

	PROCEDURE btnBrowse.Click
		LOCAL lcPath
		lcPath = GETDIR(_screen.oMagicMenu.cMainDir)
		IF NOT DIRECTORY(lcPath)
			RETURN
		ENDIF
		
		THISFORM.txtSitePhysicalData.VALUE = lcPath
	ENDPROC

	PROCEDURE btnCreate.Click
		IF EMPTY(THISFORM.oSite.cName)
			MESSAGEBOX(_screen.oHelper.oLanguage.Translate("_6P50L65PB"), 48)
			thisform.txtSiteName.SetFocus()
			RETURN
		ENDIF
		
		IF EMPTY(THISFORM.oSite.nPort)
			MESSAGEBOX(_screen.oHelper.oLanguage.Translate("_6P50L8ORM"), 48)
			thisform.txtSitePort.SetFocus()
			RETURN
		ENDIF
		
		IF EMPTY(THISFORM.oSite.cDirectory)
			MESSAGEBOX(_screen.oHelper.oLanguage.Translate("_6P50LAPWT"), 48)
			thisform.txtSitePhysicalData.SetFocus()
			RETURN
		ENDIF
		
		IF EMPTY(THISFORM.oSite.cHost)
			MESSAGEBOX(_screen.oHelper.oLanguage.Translate("_6P50LCGWW"), 48)
			thisform.txtSiteHostName.SetFocus()
			RETURN
		ENDIF
		
		thisform.Hide()
	ENDPROC

	PROCEDURE btnCreate.Init
		this.caption = _screen.oHelper.oLanguage.Translate("_6P50KSO2T")
	ENDPROC

	PROCEDURE Command1.Click
		THISFORM.oSite.cName = ""
		THISFORM.oSite.nPort = 80
		THISFORM.oSite.cDirectory = ""
		THISFORM.oSite.cHost = ""
		thisform.Hide()
	ENDPROC

	PROCEDURE Command1.Init
		this.caption = _screen.oHelper.oLanguage.Translate("_6P50KT37N")
	ENDPROC

	PROCEDURE Label1.Init
		this.caption = _screen.oHelper.oLanguage.Translate("_6P50KO6WM")
	ENDPROC

	PROCEDURE Label2.Init
		this.caption = _screen.oHelper.oLanguage.Translate("_6P50KQQ34")
	ENDPROC

	PROCEDURE Label3.Init
		this.caption = _screen.oHelper.oLanguage.Translate("_6P50KRKMU")
	ENDPROC

	PROCEDURE Label4.Init
		this.caption = _screen.oHelper.oLanguage.Translate("_6P50KOFR8")
	ENDPROC

	PROCEDURE Label5.Init
		this.caption = _screen.oHelper.oLanguage.Translate("_6P50KPJA9")
	ENDPROC

ENDDEFINE

DEFINE CLASS frmnewwinexe AS form 
 	*< CLASSDATA: Baseclass="form" Timestamp="" Scale="Pixels" Uniqueid="" />

	*-- OBJECTDATA items order determines ZOrder / El orden de los items OBJECTDATA determina el ZOrder 
	*< OBJECTDATA: ObjPath="txtName" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Label1" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="txtPhysicalData" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Label5" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="btnBrowse" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="btnCreate" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Command1" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Line1" UniqueID="" Timestamp="" />

	*<DefinedPropArrayMethod>
		*p: oproject
		*p: _memberdata		&& XML Metadata for customizable properties
	*</DefinedPropArrayMethod>

	*<PropValue>
		AutoCenter = .T.
		BorderStyle = 2
		Caption = "Nuevo"
		Closable = .F.
		DoCreate = .T.
		FontName = "MS Sans Serif"
		Height = 180
		MaxButton = .F.
		MinButton = .F.
		Name = "frmnewwinexe"
		oproject = .NULL.
		Width = 375
		_memberdata = <VFPData>

		</VFPData>
	*</PropValue>

	ADD OBJECT 'btnBrowse' AS commandbutton WITH ;
		Caption = "...", ;
		FontName = "MS Sans Serif", ;
		Height = 25, ;
		Left = 330, ;
		Name = "btnBrowse", ;
		TabIndex = 7, ;
		Top = 87, ;
		Width = 34
		*< END OBJECT: BaseClass="commandbutton" />

	ADD OBJECT 'btnCreate' AS commandbutton WITH ;
		Caption = "\<Crear", ;
		FontName = "MS Sans Serif", ;
		Height = 25, ;
		Left = 223, ;
		Name = "btnCreate", ;
		TabIndex = 11, ;
		Top = 142, ;
		Width = 70
		*< END OBJECT: BaseClass="commandbutton" />

	ADD OBJECT 'Command1' AS commandbutton WITH ;
		Cancel = .T., ;
		Caption = "C\<ancelar", ;
		FontName = "MS Sans Serif", ;
		Height = 25, ;
		Left = 295, ;
		Name = "Command1", ;
		TabIndex = 12, ;
		Top = 142, ;
		Width = 70
		*< END OBJECT: BaseClass="commandbutton" />

	ADD OBJECT 'Label1' AS label WITH ;
		AutoSize = .T., ;
		Caption = "Nombre del Proyecto", ;
		FontName = "MS Sans Serif", ;
		Height = 15, ;
		Left = 12, ;
		Name = "Label1", ;
		TabIndex = 1, ;
		Top = 12, ;
		Width = 101
		*< END OBJECT: BaseClass="label" />

	ADD OBJECT 'Label5' AS label WITH ;
		AutoSize = .T., ;
		Caption = "Ruta f韘ica de los datos", ;
		FontName = "MS Sans Serif", ;
		Height = 15, ;
		Left = 12, ;
		Name = "Label5", ;
		TabIndex = 5, ;
		Top = 72, ;
		Width = 114
		*< END OBJECT: BaseClass="label" />

	ADD OBJECT 'Line1' AS line WITH ;
		BorderWidth = 2, ;
		DrawMode = 16, ;
		Height = 0, ;
		Left = 12, ;
		Name = "Line1", ;
		Top = 129, ;
		Width = 348
		*< END OBJECT: BaseClass="line" />

	ADD OBJECT 'txtName' AS textbox WITH ;
		ControlSource = "thisform.oProject.cName", ;
		FontName = "MS Sans Serif", ;
		Height = 23, ;
		Left = 12, ;
		Name = "txtName", ;
		TabIndex = 2, ;
		Top = 28, ;
		Width = 352
		*< END OBJECT: BaseClass="textbox" />

	ADD OBJECT 'txtPhysicalData' AS textbox WITH ;
		ControlSource = "thisform.oProject.cDirectory", ;
		FontName = "MS Sans Serif", ;
		Height = 23, ;
		Left = 12, ;
		Name = "txtPhysicalData", ;
		TabIndex = 6, ;
		Top = 88, ;
		Width = 316
		*< END OBJECT: BaseClass="textbox" />
	
	PROCEDURE Load
		THIS.oProject = CREATEOBJECT("Empty")
		ADDPROPERTY(THIS.oProject, "cName", "")
		ADDPROPERTY(THIS.oProject, "cDirectory", "")
	ENDPROC

	PROCEDURE Show
		LPARAMETERS nStyle
		this.Caption = _screen.oHelper.oLanguage.Translate("_6P90MMSSY")
	ENDPROC

	PROCEDURE btnBrowse.Click
		LOCAL lcPath
		lcPath = GETDIR(_screen.oMagicMenu.cMainDir)
		IF NOT DIRECTORY(lcPath)
			RETURN
		ENDIF
		
		THISFORM.txtPhysicalData.VALUE = lcPath
	ENDPROC

	PROCEDURE btnBrowse.Init
		this.tooltiptext = _screen.oHelper.oLanguage.Translate("_6P50KPJA9", 2)
	ENDPROC

	PROCEDURE btnCreate.Click
		IF EMPTY(THISFORM.oProject.cName)
			MESSAGEBOX(_screen.oHelper.oLanguage.Translate("_6P50L65PB"), 48)
			thisform.txtName.SetFocus()
			RETURN
		ENDIF
		
		IF EMPTY(THISFORM.oProject.cDirectory)
			MESSAGEBOX(_screen.oHelper.oLanguage.Translate("_6P50LAPWT"), 48)
			thisform.txtPhysicalData.SetFocus()
			RETURN
		ENDIF
		
		thisform.Hide()
	ENDPROC

	PROCEDURE btnCreate.Init
		this.caption = _screen.oHelper.oLanguage.Translate("_6P50KSO2T")
	ENDPROC

	PROCEDURE Command1.Click
		THISFORM.oProject.cName = ""
		THISFORM.oProject.cDirectory = ""
		thisform.Hide()
	ENDPROC

	PROCEDURE Command1.Init
		this.caption = _screen.oHelper.oLanguage.Translate("_6P50KT37N")
	ENDPROC

	PROCEDURE Label1.Init
		this.caption = _screen.oHelper.oLanguage.Translate("_6P90M4WKO")
	ENDPROC

	PROCEDURE Label5.Init
		this.caption = _screen.oHelper.oLanguage.Translate("_6P50KPJA9")
	ENDPROC

ENDDEFINE

DEFINE CLASS frmprojectmanager AS form 
 	*< CLASSDATA: Baseclass="form" Timestamp="" Scale="Pixels" Uniqueid="" />

	*-- OBJECTDATA items order determines ZOrder / El orden de los items OBJECTDATA determina el ZOrder 
	*< OBJECTDATA: ObjPath="pfProject" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="conSearch" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="conSearch.txtSearch" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="conSearch.chkRegExp" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="conSearch.chkMatchCase" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="conSearch.Label1" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="btnExclude" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="btnInclude" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="btnEdit" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="btnDelete" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="btnOpen" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="lblItems" UniqueID="" Timestamp="" />

	*<DefinedPropArrayMethod>
		*m: addnewpage
		*m: addproject
		*m: closeproject
		*m: createcursor
		*m: getprojects
		*m: ocurrentpage_access
		*m: onpopuprightclick
		*m: pageclick
		*m: projectexists
		*m: projectsetfocus
		*m: refreshtotal
		*p: buseregexp
		*p: ocurrentpage
		*p: oregexp
		*p: _memberdata		&& XML Metadata for customizable properties
	*</DefinedPropArrayMethod>

	*<PropValue>
		BorderStyle = 3
		buseregexp = .F.
		Caption = "Gestor de Proyectos"
		DataSession = 2
		DoCreate = .T.
		FontName = "MS Sans Serif"
		Height = 601
		KeyPreview = .T.
		Left = 505
		MaxButton = .F.
		MinButton = .F.
		Name = "frmprojectmanager"
		ocurrentpage = .NULL.
		oregexp = .NULL.
		ShowTips = .T.
		Top = 44
		Width = 415
		_memberdata = <VFPData>

		</VFPData>
	*</PropValue>

	ADD OBJECT 'btnDelete' AS commandbutton WITH ;
		Caption = "", ;
		Height = 28, ;
		Left = 105, ;
		Name = "btnDelete", ;
		Picture = ..\bmps\script_delete.bmp, ;
		TabIndex = 5, ;
		Top = 36, ;
		Width = 36
		*< END OBJECT: BaseClass="commandbutton" />

	ADD OBJECT 'btnEdit' AS commandbutton WITH ;
		Caption = "", ;
		Height = 28, ;
		Left = 70, ;
		Name = "btnEdit", ;
		Picture = ..\bmps\script_edit.bmp, ;
		TabIndex = 4, ;
		Top = 36, ;
		Width = 36
		*< END OBJECT: BaseClass="commandbutton" />

	ADD OBJECT 'btnExclude' AS commandbutton WITH ;
		Caption = "", ;
		Height = 28, ;
		Left = 0, ;
		Name = "btnExclude", ;
		Picture = ..\bmps\tag_red.bmp, ;
		TabIndex = 2, ;
		Top = 36, ;
		Width = 36
		*< END OBJECT: BaseClass="commandbutton" />

	ADD OBJECT 'btnInclude' AS commandbutton WITH ;
		Caption = "", ;
		Height = 28, ;
		Left = 35, ;
		Name = "btnInclude", ;
		Picture = ..\bmps\tag_green.bmp, ;
		TabIndex = 3, ;
		Top = 36, ;
		Width = 36
		*< END OBJECT: BaseClass="commandbutton" />

	ADD OBJECT 'btnOpen' AS commandbutton WITH ;
		Caption = "", ;
		Height = 28, ;
		Left = 140, ;
		Name = "btnOpen", ;
		Picture = ..\bmps\folder16.bmp, ;
		TabIndex = 5, ;
		Top = 36, ;
		Width = 36
		*< END OBJECT: BaseClass="commandbutton" />

	ADD OBJECT 'conSearch' AS container WITH ;
		BackStyle = 0, ;
		BorderWidth = 0, ;
		Height = 34, ;
		Left = 0, ;
		Name = "conSearch", ;
		TabIndex = 1, ;
		Top = 0, ;
		Width = 495
		*< END OBJECT: BaseClass="container" />

	ADD OBJECT 'conSearch.chkMatchCase' AS checkbox WITH ;
		Alignment = 2, ;
		BackColor = 240,240,240, ;
		BackStyle = 1, ;
		Caption = "Aa", ;
		Centered = .T., ;
		ControlSource = "thisform.oRegExp.IgnoreCase", ;
		FontName = "MS Sans Serif", ;
		FontSize = 12, ;
		Height = 28, ;
		Left = 365, ;
		Name = "chkMatchCase", ;
		Style = 1, ;
		TabIndex = 4, ;
		Top = 4, ;
		Value = .F., ;
		Width = 36
		*< END OBJECT: BaseClass="checkbox" />

	ADD OBJECT 'conSearch.chkRegExp' AS checkbox WITH ;
		Alignment = 2, ;
		BackColor = 240,240,240, ;
		Caption = ".*", ;
		Centered = .T., ;
		ControlSource = "thisform.bUseRegExp", ;
		FontName = "MS Sans Serif", ;
		FontSize = 12, ;
		Height = 28, ;
		Left = 330, ;
		Name = "chkRegExp", ;
		Style = 1, ;
		TabIndex = 3, ;
		Top = 4, ;
		Value = .F., ;
		Width = 36
		*< END OBJECT: BaseClass="checkbox" />

	ADD OBJECT 'conSearch.Label1' AS label WITH ;
		AutoSize = .T., ;
		BackStyle = 0, ;
		Caption = "\<Buscar:", ;
		FontName = "MS Sans Serif", ;
		Height = 15, ;
		Left = 7, ;
		Name = "Label1", ;
		TabIndex = 1, ;
		Top = 9, ;
		Width = 44
		*< END OBJECT: BaseClass="label" />

	ADD OBJECT 'conSearch.txtSearch' AS textbox WITH ;
		FontName = "MS Sans Serif", ;
		Height = 23, ;
		Left = 50, ;
		Name = "txtSearch", ;
		TabIndex = 2, ;
		Top = 7, ;
		Width = 280
		*< END OBJECT: BaseClass="textbox" />

	ADD OBJECT 'lblItems' AS label WITH ;
		Alignment = 1, ;
		AutoSize = .F., ;
		BackStyle = 0, ;
		Caption = "999 Elementos", ;
		FontName = "MS Sans Serif", ;
		Height = 16, ;
		Left = 180, ;
		Name = "lblItems", ;
		TabIndex = 1, ;
		Top = 42, ;
		Visible = .F., ;
		Width = 231
		*< END OBJECT: BaseClass="label" />

	ADD OBJECT 'pfProject' AS pageframe WITH ;
		ActivePage = 0, ;
		ErasePage = .T., ;
		Height = 533, ;
		Left = 0, ;
		Name = "pfProject", ;
		PageCount = 0, ;
		TabIndex = 6, ;
		TabStretch = 1, ;
		TabStyle = 1, ;
		Top = 65, ;
		Width = 413
		*< END OBJECT: BaseClass="pageframe" />
	
	PROCEDURE addnewpage
		LPARAMETERS toProject
		
		THIS.pfProject.PAGECOUNT = THIS.pfProject.PAGECOUNT + 1
		
		LOCAL loPage, lcAlias
		loPage  = this.pfProject.Pages[this.pfProject.PageCount]
		lcAlias = SYS(2015)
		loPage.CAPTION = toProject.cName
		
		THISFORM.createCursor(lcAlias)
		
		loPage.ADDOBJECT("ProjectExplorer1", "ProjectExplorer")
		loPage.ProjectExplorer1.oProject = toProject
		loPage.ProjectExplorer1.cAlias = lcAlias
		
		WAIT _screen.oHelper.oLanguage.Translate("_6PG0QXJN8") WINDOW NOWAIT
		loPage.ProjectExplorer1.loadFiles()
		WAIT CLEAR
		
		loPage.ProjectExplorer1.VISIBLE = .T.
		
		** Bind the click event to all pages
		LOCAL loCurPage
		FOR EACH loCurPage IN THIS.pfProject.PAGES
			=BINDEVENT(loCurPage, "Click", THIS, "PageClick")
		ENDFOR
		
		THIS.pfProject.ActivePage = this.pfProject.PageCount
		loPage.setFocus()
		this.PageClick(THIS.pfProject.PAGECOUNT)
	ENDPROC

	PROCEDURE addproject
		LPARAMETERS toProject
		
		THISFORM.addNewPage(toProject)
	ENDPROC

	PROCEDURE closeproject
		** Close this Page
		IF this.pfProject.PAGECOUNT == 1
			thisform.release()
		ELSE
			this.pfProject.Pages[this.pfProject.ActivePage].PageOrder = this.pfProject.PAGECOUNT
			this.pfProject.PageCount = this.pfProject.PageCount - 1
		ENDIF
		*this.Parent.Remove()
	ENDPROC

	PROCEDURE createcursor
		LPARAMETERS tcAlias
		
		CREATE CURSOR (tcAlias) (;
			cName c(250), ;
			cExt c(3), ;
			cPath c(250), ;
			cIcon c(250), ;
			bVisible l, ;
			bDeleted l, ;
			bExcluded l, ;
			bIsMain l)
		
		INDEX on cExt TAG cExt additive
		SET ORDER to cExt
	ENDPROC

	PROCEDURE getprojects
		LOCAL loProjects, loPage
		loProjects = CREATEOBJECT("Collection")
		
		FOR EACH loPage IN THIS.pfProject.PAGES
			loProjects.Add(loPage.ProjectExplorer1.oProject)
		ENDFOR
		
		RETURN loProjects
	ENDPROC

	PROCEDURE Init
		LPARAMETERS toProject
		
		THISFORM.CAPTION = _SCREEN.oHelper.oLanguage.Translate("_6PB10EB5Z")
		THISFORM.addProject(toProject)
		
		THIS.DOCKABLE = 2
		THIS.DOCK(1)
		
		_SCREEN.oVfpstretch.DO(THISFORM)
	ENDPROC

	PROCEDURE KeyPress
		LPARAMETERS nKeyCode, nShiftAltCtrl
		
		** DEBUG
		*WAIT "nKeyCode: " + ALLTRIM(TRANSFORM(nKeyCode)) + " - nShiftAltCtrl: " + ALLTRIM(TRANSFORM(nShiftAltCtrl)) WINDOW NOWAIT 
		** DEBUG
		
		DO case
		case nKeyCode = 6 AND nShiftAltCtrl = 2 && CTRL+F
			NODEFAULT
			THISFORM.conSearch.txtSearch.SETFOCUS()
		CASE nKeyCode = 5 AND nShiftAltCtrl = 2 && CTRL+E
			NODEFAULT
			thisform.btnOpen.Click()
		endcase
	ENDPROC

	PROCEDURE Load
		thisform.oRegExp = CREATEOBJECT("VBScript.RegExp")
		thisform.oRegExp.Global = .T.
	ENDPROC

	PROCEDURE ocurrentpage_access
		return this.pfProject.Pages[this.pfProject.ActivePage]
		
	ENDPROC

	PROCEDURE onpopuprightclick
		LPARAMETERS tnBar
		
		DO CASE
		CASE tnBar == 1 && Modify
			thisform.btnEdit.Click()
		CASE tnBar == 2 && Exclude
			thisform.btnExclude.Click()
		CASE tnBar == 3 && Include
			thisform.btnInclude.Click()
		CASE tnBar == 4 && Remove
			thisform.btnDelete.Click()
		CASE tnBar == 5 && Set Main
			IF EMPTY(thisform.pfProject.ActivePage)
				RETURN
			ENDIF
			thisform.pfProject.Pages[thisform.pfProject.ActivePage].projectExplorer1.SetMainFile()
		CASE tnBar == 6 && Browse
			IF EMPTY(thisform.pfProject.ActivePage)
				RETURN
			ENDIF
			thisform.pfProject.Pages[thisform.pfProject.ActivePage].projectExplorer1.BrowseTable()
		OTHERWISE
		ENDCASE
	ENDPROC

	PROCEDURE pageclick
		LPARAMETERS tnPage
		
		IF EMPTY(tnPage)
			tnPage = this.pfProject.ActivePage
		ENDIF
		
		** Restore all pages
		LOCAL loPage
		FOR EACH loPage IN this.pfProject.Pages
			loPage.forecolor = RGB(0, 0, 0)
			loPage.fontbold = .f.
		ENDFOR
		
		THIS.pfProject.PAGES[tnPage].FORECOLOR = RGB(0, 0, 255)
		THIS.pfProject.PAGES[tnPage].FONTBOLD = .T.
		
		_screen.oActiveProject = loPage.ProjectExplorer1
		this.refreshTotal()
		
		_screen.oMagicMenu.oBarra.Update()
	ENDPROC

	PROCEDURE projectexists
		LPARAMETERS tcProjectName
		
		LOCAL loProjects, loProj
		loProjects = this.getProjects()
		
		FOR EACH loProj IN loProjects
			IF LOWER(tcProjectName) == LOWER(ALLTRIM(loProj.cName))
				RETURN .T.
				EXIT
			ENDIF
		ENDFOR
		
		RETURN .F.
	ENDPROC

	PROCEDURE projectsetfocus
		LPARAMETERS tcProjectName
		
		LOCAL i
		FOR i=1 to THIS.pfProject.PAGECOUNT
			IF LOWER(tcProjectName) == LOWER(THIS.pfProject.Pages[i].ProjectExplorer1.oProject.cName)
				THIS.pfProject.Pages[i].SetFocus()
				this.PageClick(i)
				RETURN
			ENDIF
		ENDFOR
	ENDPROC

	PROCEDURE QueryUnload
		_screen.oProjectManager = .null.
		_screen.oActiveProject = .null.
	ENDPROC

	PROCEDURE refreshtotal
		** Number of elements
		
		LOCAL lcAlias, lcMsg
		LOCAL ARRAY laTotal[1]
		laTotal[1]  = 0
		lcAlias 	= this.pfProject.Pages[this.pfProject.ActivePage].ProjectExplorer1.cAlias
		SELECT COUNT(*) FROM (lcAlias) WHERE !bDeleted AND bVisible INTO ARRAY laTotal
		lcMsg   = _screen.oHelper.oLanguage.Translate("_6PG0S7P9Y")
		lcMsg   = STRTRAN(lcMsg, "{nItems}", ALLTRIM(STR(laTotal[1])))
		thisform.lblItems.Caption = lcMsg
		thisform.lblItems.Visible = .t.
	ENDPROC

	PROCEDURE Show
		LPARAMETERS nStyle
		
		*!* fixed by xinjie  2024.01.28		The object may not exist
		If Vartype(_screen.oMagicMenu.oBarra) <> [O]
			_Screen.oMagicMenu.oBarra = Createobject("ToolBarMenuX16")
			_Screen.oMagicMenu.oBarra.Show()
		EndIf 
		
		
		_screen.oMagicMenu.oBarra.update()
	ENDPROC

	PROCEDURE Unload
		_screen.oProjectManager = .null.
		_screen.oActiveProject = .null.
	ENDPROC

	PROCEDURE btnDelete.Click
		IF EMPTY(thisform.pfProject.ActivePage)
			RETURN
		ENDIF
		thisform.pfProject.Pages[thisform.pfProject.ActivePage].projectExplorer1.RemoveFile()
	ENDPROC

	PROCEDURE btnDelete.Init
		this.ToolTipText = _screen.oHelper.oLanguage.Translate("_6PC1BPP0Q", 2)
	ENDPROC

	PROCEDURE btnEdit.Click
		IF EMPTY(thisform.pfProject.ActivePage)
			RETURN
		ENDIF
		thisform.pfProject.Pages[thisform.pfProject.ActivePage].projectExplorer1.ModifyFile()
	ENDPROC

	PROCEDURE btnEdit.Init
		this.ToolTipText = _screen.oHelper.oLanguage.Translate("_6PC1BOFB0", 2)
	ENDPROC

	PROCEDURE btnExclude.Click
		IF EMPTY(thisform.pfProject.ActivePage)
			RETURN
		ENDIF
		thisform.pfProject.Pages[thisform.pfProject.ActivePage].projectExplorer1.ExcludeFile()
	ENDPROC

	PROCEDURE btnExclude.Init
		this.tooltiptext = _screen.oHelper.oLanguage.Translate("_6PC1BMPXF", 2)
	ENDPROC

	PROCEDURE btnInclude.Click
		IF EMPTY(thisform.pfProject.ActivePage)
			RETURN
		ENDIF
		thisform.pfProject.Pages[thisform.pfProject.ActivePage].projectExplorer1.IncludeFile()
	ENDPROC

	PROCEDURE btnInclude.Init
		this.tooltiptext = _screen.oHelper.oLanguage.Translate("_6PC1BNK9C", 2)
	ENDPROC

	PROCEDURE btnOpen.Click
		IF EMPTY(thisform.pfProject.ActivePage)
			RETURN
		ENDIF
		LOCAL lcAlias, lcDirectory
		lcAlias 	= thisform.pfProject.Pages[thisform.pfProject.ActivePage].projectExplorer1.cAlias
		lcDirectory = ADDBS(&lcAlias..cPath)
		
		_screen.oHelper.oSystem.openFolder(lcDirectory)
	ENDPROC

	PROCEDURE btnOpen.Init
		this.ToolTipText = _screen.oHelper.oLanguage.Translate("_6PF11N5BK", 2)
	ENDPROC

	PROCEDURE conSearch.chkMatchCase.Init
		this.ToolTipText = _screen.oHelper.oLanguage.Translate("_6PC1DDTPL", 2)
	ENDPROC

	PROCEDURE conSearch.chkMatchCase.InteractiveChange
		this.BackColor = IIF(this.Value, RGB(102,102,255), RGB(240, 240, 240))
	ENDPROC

	PROCEDURE conSearch.chkMatchCase.When
		RETURN this.Parent.chkRegExp.value
	ENDPROC

	PROCEDURE conSearch.chkRegExp.Init
		this.ToolTipText = _screen.oHelper.oLanguage.Translate("_6PC1DC622", 2)
	ENDPROC

	PROCEDURE conSearch.chkRegExp.InteractiveChange
		this.BackColor = IIF(this.Value, RGB(102,102,255), RGB(240, 240, 240))
		IF NOT this.value
			thisform.conSearch.chkMatchCase.Value = .f.
			thisform.conSearch.chkMatchCase.InteractiveChange()
		ENDIF
	ENDPROC

	PROCEDURE conSearch.txtSearch.Valid
		LOCAL lcAlias
		lcAlias = THISFORM.pfProject.PAGES[thisform.pfProject.ActivePage].ProjectExplorer1.cAlias
		
		IF EMPTY(THIS.VALUE)
			UPDATE (lcAlias) SET bVisible = .T.
		ELSE
			IF THISFORM.bUseRegExp
				UPDATE (lcAlias) SET bVisible = .T.
				LOCAL lcName, lbResult
				THISFORM.oRegExp.PATTERN = ALLTRIM(THIS.VALUE)
				SELECT (lcAlias)
				GO TOP
				SCAN
					lcName 	 = ALLTRIM(&lcAlias..cName)
					lbResult = THISFORM.oRegExp.Test(lcName)
					REPLACE bVisible WITH lbResult IN (lcAlias)
				ENDSCAN
			ELSE		
				UPDATE (lcAlias) SET bVisible = .F. WHERE NOT ALLTRIM(THIS.VALUE)$ALLTRIM(cName)
			ENDIF
		ENDIF
		
		GO TOP IN (lcAlias)
		THISFORM.pfProject.PAGES[thisform.pfProject.ActivePage].ProjectExplorer1.grid1.REFRESH()
	ENDPROC

ENDDEFINE

DEFINE CLASS helper AS collection 
 	*< CLASSDATA: Baseclass="collection" Timestamp="" Scale="Pixels" Uniqueid="" />

	*<DefinedPropArrayMethod>
		*m: helpmessage
		*p: oconsole
		*p: olanguage
		*p: olibrary
		*p: oproject
		*p: oservice
		*p: osite
		*p: osystem
		*p: _memberdata		&& XML Metadata for customizable properties
	*</DefinedPropArrayMethod>

	*<PropValue>
		Height = 23
		Name = "helper"
		oconsole = .NULL.
		olanguage = .NULL.
		olibrary = .NULL.
		oproject = .NULL.
		oservice = .NULL.
		osite = .NULL.
		osystem = .NULL.
		Width = 23
		_memberdata = <VFPData>

		</VFPData>
	*</PropValue>
	
	PROCEDURE helpmessage
		LOCAL lcMsg
		lcMsg = _screen.oHelper.oLanguage.Translate("_6P81CQUZT")
		lcMsg = STRTRAN(lcMsg, "{cVersion}", _screen.oMagicMenu.cVersion)
		
		MESSAGEBOX(lcMsg, 64, "MagicMenu")
	ENDPROC

	PROCEDURE Init
		this.oSite 		= CREATEOBJECT("Site")
		this.oLanguage 	= CREATEOBJECT("Language")
		this.oSystem 	= CREATEOBJECT("System")
		this.oConsole 	= CREATEOBJECT("Console")
		this.oService 	= CREATEOBJECT("Service")
		this.oProject 	= CREATEOBJECT("Project")
		this.oLibrary 	= CreateObject("Library")
	ENDPROC

ENDDEFINE

DEFINE CLASS language AS collection 
 	*< CLASSDATA: Baseclass="collection" Timestamp="" Scale="Pixels" Uniqueid="" />

	*<DefinedPropArrayMethod>
		*m: getlanguage
		*m: loadlanguage
		*m: translate
		*p: language
		*p: _memberdata		&& XML Metadata for customizable properties
	*</DefinedPropArrayMethod>

	HIDDEN language
	*<PropValue>
		Height = 23
		language = 
		Name = "language"
		Width = 23
		_memberdata = <VFPData>

		</VFPData>
	*</PropValue>
	
	PROCEDURE getlanguage
		Return this.language
	ENDPROC

	PROCEDURE loadlanguage
		LPARAMETERS tcLanguage
		
		this.language = tcLanguage
		
		SELECT 0
		USE "Languages.dbf" SHARED IN 0
		GO TOP
		
		LOCAL lcColumnName, lcScript, loCollection, loRow, loData
		lcColumnName = "content_" + tcLanguage
		loCollection = CREATEOBJECT("Collection")
		
		SELECT Languages
		SCAN
			SCATTER MEMO NAME loRow
			loData = CREATEOBJECT("Empty")
			ADDPROPERTY(loData, "cCaption", EVALUATE("loRow.caption_" + tcLanguage))
			ADDPROPERTY(loData, "cHint", EVALUATE("loRow.hint_" + tcLanguage))
			loCollection.ADD(loData, loRow.control_id)
		ENDSCAN
		
		USE IN Languages
		
		RETURN loCollection
	ENDPROC

	PROCEDURE translate
		LPARAMETERS tcControlID, tnType
		
		LOCAL lnIndex
		lnIndex = _SCREEN.oLang.GETKEY(tcControlID)
		
		IF EMPTY(lnIndex)
			RETURN ""
		ENDIF
		
		IF EMPTY(tnType)
			tnType = 1 && CAPTION
		ENDIF
		
		DO CASE
		CASE tnType = 1 && CAPTION
			RETURN ALLTRIM(_SCREEN.oLang(lnIndex).cCaption)
		CASE tnType = 2 && TOOLTIPTEXT
			RETURN ALLTRIM(_SCREEN.oLang(lnIndex).cHint)
		ENDCASE
		
		RETURN ""
	ENDPROC

ENDDEFINE

DEFINE CLASS library AS collection 
 	*< CLASSDATA: Baseclass="collection" Timestamp="" Scale="Pixels" Uniqueid="" />

	*<DefinedPropArrayMethod>
		*m: newproject
		*p: _memberdata		&& XML Metadata for customizable properties
	*</DefinedPropArrayMethod>

	*<PropValue>
		Height = 23
		Name = "library"
		Width = 23
		_memberdata = <VFPData>

		</VFPData>
	*</PropValue>
	
	PROCEDURE newproject
		Lparameters tcProjectType
		
		* POLICIA
		Set Step On
		* POLICIA
		
		LOCAL loForm, loLibrary, lcRootFolder, lcCurDir, lcMsg, lcScript
		
		loForm = CREATEOBJECT("frmNewLibrary")
		loForm.SHOW(1)
		loLibrary = loForm.oProject
		
		RELEASE loForm
		IF EMPTY(loLibrary.cName)
			RETURN
		ENDIF
		
		* Create the root folder
		lcRootFolder = ADDBS(ALLTRIM(loLibrary.cDirectory))
		IF NOT DIRECTORY(lcRootFolder)
			MKDIR &lcRootFolder
		ENDIF
		lcCurDir = FULLPATH(CURDIR())
		* Change Directory to the site root
		CD (lcRootFolder)
		
		LOCAL lcBuffer, lcMainFilePath, lcConfigFPWFilePath, lcClassName, lcClassBasedOn, lcLibraryName, lcRegisterFile, lcConfigJSONFilePath
		lcClassName 		= Alltrim(loLibrary.cName)
		lcClassBasedOn		= Alltrim(loLibrary.cClassBasedOn)
		lcMainFilePath 		= lcRootFolder + 'Main.prg'
		lcConfigFPWFilePath = lcRootFolder + 'CONFIG.FPW'
		lcLibraryName 		= ALLTRIM(loLibrary.cName)
		
		Set Textmerge delimiters to '$(', ')$'
		
		** Create the main PRG file
		TEXT TO lcBuffer NOSHOW TEXTMERGE
		DEFINE CLASS $(lcClassName)$ AS $(lcClassBasedOn)$ OLEPUBLIC	
			Hidden oLogger
			
			Procedure init
				this.oLogger = CreateObject("Logger")
			EndProc
			
			
			Procedure $(_screen.oHelper.oLanguage.Translate("_6Q91D4JXJ"))$ as String
				Return "$(_screen.oHelper.oLanguage.Translate("_6Q91D4JXJ"))$!"
			EndProc
		
		EndDefine
		
		Define Class Logger as Custom
			Hidden cLogFile
		
			Procedure SetLogFile(tcLogFile)
				this.cLogFile = tcLogFile
			EndProc	
		
			procedure Log(tnType, tcMessage)
				If Empty(This.cLogFile)
					This.cLogFile = FullPath('$(lcLibraryName)$.log')
				Endif
				If Type('tnType') == 'C'
					tcMessage = tnType
					tnType = 16
				EndIf
				Try
					Local lcLogText As Memo, lcDateAct As String, lcCenturyAct As String, lcType, lnHour
		
					lcDateAct 	 = Set("Date")
					lcCenturyAct = Set("Century")
					lcType 		 = ""
					lnHour		 = Set("Hours")
					
					Set Date Italian
					Set Century On
					Set Hours To 24
					
					Do Case
					Case tnType = 16
						lcType = "ERROR  "
					Case tnType = 64
						lcType = "INFO   "
					Case tnType = 48
						lcType = "WARNING"
					Endcase
		
					lcLogText = Textmerge("<<Ttoc(Datetime())>> | <<lcType>> | <<tcMessage>>") + Chr(13) + Chr(10)
					=Strtofile(lcLogText, This.cLogFile, 1)
				Catch
				Finally
					Set Century &lcCenturyAct
					Set Date &lcDateAct
					Set Hours To (lnHour)
				Endtry
			endproc
		EndDefine
		
		ENDTEXT
		STRTOFILE(lcBuffer, lcMainFilePath)
		Set Textmerge delimiters to
		
		
		** Create the CONFIG.FPW file
		TEXT TO lcBuffer NOSHOW
		SCREEN = OFF
		RESOURCE = OFF
		ENDTEXT
		STRTOFILE(lcBuffer, lcConfigFPWFilePath)
		
		* Restore the current directory
		CD (lcCurDir)
		
		** Create new project
		LOCAL loProject, lcPrjRoot
		lcPrjRoot = STRTRAN(ADDBS(lcRootFolder), '\', '\\')
		loProject = CREATEOBJECT("Empty")
		ADDPROPERTY(loProject, "cName", ALLTRIM(loLibrary.cName))
		ADDPROPERTY(loProject, "cType", tcProjectType)
		ADDPROPERTY(loProject, "cDirectory", lcPrjRoot)
		ADDPROPERTY(loProject, "cMain", lcPrjRoot+"Main.prg")
		ADDPROPERTY(loProject, "oExt", .NULL.)
		ADDPROPERTY(loProject, "oIgnored", .NULL.)
		ADDPROPERTY(loProject, "oExcluded", CREATEOBJECT("Collection"))
		
		** Excluir el fichero CONFIG.FPW
		loProject.oExcluded.Add(lcConfigFPWFilePath)
		
		_screen.oHelper.oProject.newProject(loProject)
	ENDPROC

ENDDEFINE

DEFINE CLASS project AS collection 
 	*< CLASSDATA: Baseclass="collection" Timestamp="" Scale="Pixels" Uniqueid="" />

	*<DefinedPropArrayMethod>
		*m: arraytostr
		*m: askforparameters
		*m: bindprojectfiles
		*m: close
		*m: compile
		*m: createnativeproject
		*m: debug
		*m: dicttostr
		*m: getbuildtype
		*m: getprojectextension
		*m: getprojecttype
		*m: isexcluded
		*m: loadconfigfile
		*m: newproject
		*m: openfoxprofile
		*m: openhomedir
		*m: openproject
		*m: reloadproject
		*m: run		&& Occurs when an Active Document is ready to execute your application code.
		*m: saveproject
		*m: stopservice
		*m: updateruntimes
		*p: oextensions
		*p: _memberdata		&& XML Metadata for customizable properties
	*</DefinedPropArrayMethod>

	*<PropValue>
		Height = 23
		Name = "project"
		oextensions = .NULL.
		Width = 23
		_memberdata = <VFPData>

		</VFPData>
	*</PropValue>
	
	PROCEDURE arraytostr
		LPARAMETERS toCollection
		
		LOCAL lcOutput, lcValue
		
		lcOutput = ""
		
		FOR EACH lcValue IN toCollection
			IF !EMPTY(lcOutput)
				lcOutput = lcOutput + ','
			ENDIF
			lcOutput = lcOutput + '"' + lcValue + '"'
		ENDFOR
		
		RETURN lcOutput
	ENDPROC

	PROCEDURE askforparameters
		IF MESSAGEBOX(_SCREEN.oHelper.oLanguage.Translate("_6PG0JFDX0"), 36) = 6
			RETURN INPUTBOX(_SCREEN.oHelper.oLanguage.Translate("_6PG0JSPXC"), _SCREEN.oHelper.oLanguage.Translate("_6PG0JRU4P"))
		ENDIF
		RETURN SPACE(1)
		
	ENDPROC

	PROCEDURE bindprojectfiles
		LPARAMETERS toFiles, toExcluded, tcMainFile
		
		** Create the file object
		LOCAL lcFileName, loCollection, loFile
		loCollection = CREATEOBJECT("Collection")
		
		FOR EACH lcFileName IN toFiles
			loFile = CREATEOBJECT("Empty")
			ADDPROPERTY(loFile, "cName", lcFileName)	
			ADDPROPERTY(loFile, "bExcluded", this.isExcluded(lcFileName, toExcluded))
			ADDPROPERTY(loFile, "bIsMain", LOWER(lcFileName) == LOWER(tcMainFile))
			loCollection.Add(loFile)
		ENDFOR
		
		RETURN loCollection
	ENDPROC

	PROCEDURE close
		IF NOT WEXIST('frmProjectManager')
			RETURN
		ENDIF
		_SCREEN.oProjectManager.CloseProject()
	ENDPROC

	PROCEDURE compile
		IF NOT WEXIST('frmProjectManager')
			RETURN
		ENDIF
		
		Try
			THIS.stopService()
			LOCAL loProject, lcCurDir, loPry, loFile, loAddedFile, lcProjectName, lcSafAct, lcErrName, lcExeName, loDelete, lbResult, lcTempDir
			
			lcSafAct = SET("Safety")
			SET SAFETY OFF
			loProject = _SCREEN.oActiveProject.oProject
			*lcProjectName = "pry" + ALLTRIM(loProject.cName) + '.pjx'
			lcProjectName = "pry" + SYS(2015) + '.pjx'
			lcErrName = STRTRAN(lcProjectName, '.pjx', '.err')
			lcExeName = ALLTRIM(loProject.cName) + '.' + THIS.getProjectExtension(loProject.cType)
			loDelete = CREATEOBJECT("Collection")
		
			loDelete.Add(lcProjectName)
			loDelete.Add(STRTRAN(lcProjectName, '.pjx', '.pjt'))
			loDelete.Add(lcErrName)
			loDelete.Add(lcExeName)
			lcTempDir = ADDBS(_screen.oMagicMenu.cTempDir + ALLTRIM(loProject.cName))
			IF NOT DIRECTORY(lcTempDir)
				MKDIR &lcTempDir
			ENDIF
			_screen.oHelper.oSystem.DeleteFiles(lcTempDir, loDelete)
			WAIT _SCREEN.oHelper.oLanguage.Translate("_6PG0UE8SK") WINDOW NOWAIT
			lcCurDir = FULLPATH(CURDIR())
			CD (lcTempDir)
		
			CREATE PROJECT (lcProjectName) NOSHOW NOWAIT
			oPry = _VFP.ActiveProject
			oPry.FILES.ADD(loProject.cMain)
			
			FOR EACH loFile IN loProject.oFiles
				IF !FILE(loFile.cName) OR LOWER(loFile.cName) == LOWER(loProject.cMain)
					LOOP
				ENDIF
				loAddedFile = oPry.Files.Add(loFile.cName)
				IF loFile.bExcluded
					loAddedFile.Exclude = .t.
				ENDIF
			ENDFOR
			
			LOCAL lcBuildType, lcExeFullPath, lcMacro, lcBuildFile, lcBatFile
			lcBuildType = this.getbuildtype(loProject.cType)
			lcExeFullPath = ADDBS(loProject.cDirectory) + lcExeName
			IF INLIST(UPPER(ALLTRIM(loProject.cType)), "SRVEXE", "WEBAPP")
				lcExeFullPath = ADDBS(loProject.cDirectory) + 'Dist\' + lcExeName
			ENDIF
			lcBuildFile = ADDBS(loProject.cDirectory) + 'BUILD.FPW'
			lcBatFile = ADDBS(loProject.cDirectory) + 'build.bat'
			** CleanUp builder files
			loBuilFiles = CREATEOBJECT("Collection")
			loBuilFiles.Add('BUILD.FXP')
			loBuilFiles.Add('build.bat')
			IF INLIST(lcBuildType, "DLL", "MTDLL")
				loBuilFiles.Add(ALLTRIM(loProject.cName) + '.dll')
				loBuilFiles.Add(ALLTRIM(loProject.cName) + '.tbl')
				loBuilFiles.Add(ALLTRIM(loProject.cName) + '.vbr')
			ENDIF
			_screen.oHelper.oSystem.DeleteFiles(ADDBS(loProject.cDirectory), loBuilFiles)
			
			TEXT TO lcMacro NOSHOW TEXTMERGE
				_SCREEN.VISIBLE = .F.
				CD <<lcTempDir>>
				BUILD <<lcBuildType>> "<<lcExeFullPath>>" FROM "<<lcTempDir+lcProjectName>>"
				IF FILE("<<lcErrName>>")
					_SCREEN.VISIBLE = .T.
					MODIFY FILE "<<lcErrName>>" NOEDIT
				ENDIF
				TRY
					DELETE FILE "<<lcBuildFile>>"
				CATCH
				ENDTRY
				TRY
					DELETE FILE "<<lcBatFile>>"
				CATCH
				ENDTRY
				TRY
					DELETE FILE "<<lcTempDir+lcProjectName>>"
				CATCH
				ENDTRY
				
				TRY
					DELETE FILE "<<lcTempDir+STRTRAN(lcProjectName, '.pjx', '.pjt')>>"
				CATCH
				ENDTRY
		
				QUIT
			ENDTEXT
			=STRTOFILE(lcMacro, lcBuildFile)
		
			TEXT TO lcMacro NOSHOW PRETEXT 7 textmerge
				"<<_screen.oMagicMenu.cVFPDir>>" -C "<<lcBuildFile>>"
			ENDTEXT
			=STRTOFILE(lcMacro, lcBatFile)
		
			oPry.Close()
			RELEASE oPry
			
			IF FILE(lcBuildFile) AND FILE(lcBuildFile)	
				_screen.oHelper.oSystem.OpenApplication(lcBatFile, "", 2)			
				lbResult = .T.
			ENDIF
			
			WAIT CLEAR
		CATCH TO loEx
			lbResult = .F.
			MESSAGEBOX(loEx.MESSAGE, 16)
		FINALLY
			IF TYPE('oPry') == 'O'
				oPry.Close()
			ENDIF
		
			CD (lcCurDir)
			SET SAFETY &lcSafAct
		ENDTRY
		
		*!*	If lbResult
		*!*		MessageBox(_screen.oHelper.oLanguage.Translate("_6QL1DQXYK"), 64, "MagicMenu" + _screen.oMagicMenu.cVersion)
		*!*	EndIf
		
		RETURN lbResult
	ENDPROC

	PROCEDURE createnativeproject
		LPARAMETERS toProject
		
		LOCAL lcCurdir, loProject, lcProjectType, lcProjectDir, lcSrcFile, lcMsg, lcHookLib
		lcCurdir  = FULLPATH(CURDIR())
		CD (toProject.cDirectory)
		
		lcPjxFile 	 = STRTRAN(ALLTRIM(toProject.cDirectory), '\\','\') + ALLTRIM(toProject.cName) + '.pjx'
		lcProjectDir = ADDBS(JustPath(lcPjxFile))
		
		CREATE PROJECT (lcPjxFile) NOSHOW NOWAIT
		loProject = _vfp.Projects(JUSTFNAME(lcPjxFile))
		
		lcProjectType = toProject.cType
		DO CASE
		CASE lcProjectType == 'CONEXE'
			lcHookLib = lcProjectDir + 'MagicMenuProjectHook.VCX'
			lcSrcFile = lcProjectDir  + 'Main.prg'
			loProject.Files.Add(lcSrcFile)
			
			
			lcSrcFile = lcProjectDir  + 'CONFIG.FPW'
			loProject.Files.Add(lcSrcFile)
		
		CASE lcProjectType == 'SRVEXE'
			lcHookLib = lcProjectDir + 'MagicMenuProjectHook.VCX'
			lcSrcFile = lcProjectDir  + 'Main.prg'
			loProject.Files.Add(lcSrcFile)
			
			
			lcSrcFile = lcProjectDir  + 'CONFIG.FPW'
			loProject.Files.Add(lcSrcFile)
		
		CASE lcProjectType == 'WEBAPP'
			lcHookLib = lcProjectDir + 'src\vcx\MagicMenuProjectHook.VCX'
			lcSrcFile = lcProjectDir + 'Main.prg'
			loProject.Files.Add(lcSrcFile)
		
			lcSrcFile = lcProjectDir + 'src\header\macros.h'
			loProject.Files.Add(lcSrcFile)
			
			lcSrcFile = lcProjectDir + 'src\prg\BaseClass.prg'
			loProject.Files.Add(lcSrcFile)
			
		ENDCASE
		
		*!* add by xinjie  2024.01.28
		llOK = .T.
		
		IF !FILE(lcHookLib)
			lcMsg = _SCREEN.oHelper.oLanguage.Translate("_6PA1A9Y9J")
			lcMsg = STRTRAN(lcMsg, "{cFileName}", lcHookLib)
			MESSAGEBOX(lcMsg, 16)
			llOK = .F.
			*!* RETURN
		ENDIF
		
		*!* edit by xinjie  2021.01.28
		If llOK
			loProject.ProjectHookLibrary = lcHookLib
			loProject.ProjectHookClass 	 = 'fsHook'
		EndIf 
		
		loProject.close()
	ENDPROC

	PROCEDURE debug
		IF NOT WEXIST('frmProjectManager')
			RETURN
		ENDIF
		
		IF THIS.compile()
			LOCAL loProject, lcExeName, loDelete, lcBuildFile, lcBatFile, lcTempDir
			loProject = _SCREEN.oActiveProject.oProject
			lcExeName = ADDBS(ALLTRIM(loProject.cDirectory)) + ALLTRIM(loProject.cName) + '.' + this.getProjectExtension(loProject.cType)
			loDelete = CREATEOBJECT("Collection")
		
			lcTempDir = _screen.oMagicMenu.cTempDir + ALLTRIM(loProject.cName) + '\'
			IF NOT DIRECTORY(lcTempDir)
				MKDIR &lcTempDir
			ENDIF
		
			lcBuildFile = lcTempDir + "BUILD.FPW"
			lcBatFile = lcTempDir + "build.bat"
		
			loDelete.Add(JUSTFNAME(lcBuildFile))
			loDelete.Add(JUSTFNAME(lcBatFile))
			loDelete.Add('build.fxp')
			_screen.oHelper.oSystem.DeleteFiles(lcTempDir, loDelete)
		
			IF !FILE(lcExeName)
				RETURN
			ENDIF
		
			LOCAL lcScript, lcParams
			lcParams = this.askForParameters()
			lcScript = 'DO "' + lcExeName + '"'
			IF !EMPTY(lcParams)
				lcScript = lcScript + " WITH " + lcParams
			ENDIF
			=STRTOFILE(lcScript, lcBuildFile)
			IF !FILE(lcBuildFile)
				RETURN
			ENDIF
			TEXT TO lcScript NOSHOW TEXTMERGE PRETEXT 15
				"<<_screen.oMagicMenu.cVFPDir>>" -C "<<lcBuildFile>>"
			ENDTEXT
			=STRTOFILE(lcScript, lcBatFile)
			IF !FILE(lcBatFile)
				RETURN
			ENDIF
			WAIT CLEAR
		
			_screen.oHelper.oSystem.OpenApplication(lcBatFile)		
		ENDIF
	ENDPROC

	PROCEDURE dicttostr
	ENDPROC

	PROCEDURE getbuildtype
		LPARAMETERS tcType
		
		*!*	1 Executable with windows 	=> WINEXE
		*!*	2 Console Executable		=> CONEXE
		*!*	3 Application				=> APP
		*!*	4 Windows Service			=> SRVEXE
		*!*	5 Web Application			=> WEBAPP
		*!*	6 Single Threaded			=> DLL
		*!*	7 Multi Threaded			=> MTDLL
		
		
		DO CASE
		CASE INLIST(UPPER(tcType), 'WINEXE', 'CONEXE')
			RETURN "EXE"
		CASE UPPER(tcType) == 'APP'
			RETURN "APP"
		CASE UPPER(tcType) == 'DLL'
			RETURN "DLL"
		CASE INLIST(UPPER(tcType), 'SRVEXE', 'MTDLL', 'WEBAPP')
			RETURN "MTDLL"
		ENDCASE
	ENDPROC

	PROCEDURE getprojectextension
		LPARAMETERS tcType
		
		*!*	1 Executable with windows 	=> WINEXE
		*!*	2 Console Executable		=> CONEXE
		*!*	3 Application				=> APP
		*!*	4 Windows Service			=> SRVEXE
		*!*	5 Web Application			=> WEBAPP
		*!*	6 Single Threaded			=> DLL
		*!*	7 Multi Threaded			=> MTDLL
		
		
		DO CASE
		CASE INLIST(UPPER(tcType), 'WINEXE', 'CONEXE')
			RETURN "exe"
		CASE UPPER(tcType) == 'APP'
			RETURN "app"
		CASE INLIST(UPPER(tcType), 'SRVEXE', 'DLL', 'MTDLL', 'WEBAPP')
			RETURN "dll"	
		OTHERWISE
		ENDCASE
	ENDPROC

	PROCEDURE getprojecttype
		IF _vfp.Projects.Count = 0
			RETURN ""
		ENDIF
		
		LOCAL loProject, lcJsonFile
		loProject  = _vfp.ActiveProject
		lcJsonFile = ADDBS(loProject.HomeDir)+ 'project.json'
		IF !FILE(lcJsonFile)
			RETURN ""
		ENDIF
		
		RETURN STREXTRACT(STREXTRACT(FILETOSTR(lcJsonFile), '"type"', ','), '"', '"')
	ENDPROC

	PROCEDURE isexcluded
		LPARAMETERS tcFile, toExcluded
		LOCAL lcFile
		FOR EACH lcFile IN toExcluded
			IF LOWER(lcFile) == LOWER(tcFile)
				RETURN .T.
			ENDIF
		ENDFOR
		
		RETURN .F.
	ENDPROC

	PROCEDURE loadconfigfile
		If !_Screen.oMagicMenu.bUseNative
			If Not Wexist('frmProjectManager')
				Return .Null.
			Endif
			Return _Screen.oActiveProject.oProject
		Else
			If _vfp.Projects.Count = 0
				Return .Null.
			Endif
		
			Local loProject, lcJsonFile, loJson, loConfig
			loProject  = _vfp.ActiveProject
			lcJsonFile = Addbs(loProject.HomeDir)+ 'project.json'
			If !File(lcJsonFile)
				Return .Null.
			Endif
			loJson = .Null.
		
			Try
				Do JSONFox.App
				loJson = _Screen.json.parse(Filetostr(lcJsonFile))
			Catch
			Endtry
		
			If Isnull(loJson)
				Return .Null.
			Endif
		
			loConfig = Createobject("Empty")
			AddProperty(loConfig, "cName", loJson.Name)
			AddProperty(loConfig, "cType", loJson.Type)
			AddProperty(loConfig, "cDirectory", loJson.Path)
			AddProperty(loConfig, "cMain", loJson.Main)
			AddProperty(loConfig, "oExt", Createobject("Collection"))
			AddProperty(loConfig, "oIgnored", Createobject("Collection"))
			AddProperty(loConfig, "oExcluded", Createobject("Collection"))
			AddProperty(loConfig, "oRemoved", Createobject("Collection"))
			AddProperty(loConfig, "oFiles", Createobject("Collection"))
			
			Return loConfig
		Endif
	ENDPROC

	PROCEDURE newproject
		LPARAMETERS toProject
		
		LOCAL lcBuffer, lcCurdir, lcProjectFile, lcExcluded
		lcCurdir  = FULLPATH(CURDIR())
		lcExcluded = ALLTRIM(STRTRAN(this.arrayToStr(toProject.oExcluded), '\','\\'))
		CD (toProject.cDirectory)
		** Create the project configuration file
		TEXT TO lcBuffer NOSHOW TEXTMERGE
		{
		  "name": "<<toProject.cName>>",
		  "type": "<<toProject.cType>>",
		  "path": "<<toProject.cDirectory>>",
		  "main": "<<ALLTRIM(toProject.cMain)>>",
		  "ext": ["prg", "dbf", "dbc", "frx", "blx", "scx", "vcx", "mpx", "fpw", "exe", "app", "fll"],
		  "ignored": ["fxp", "err", "bak", "tbk", "mpr", "tmp", "_command.prg", "foxuser.dbf", "foxuser.fpt", "Thumbs.db", "desktop.ini"],
		  "excluded": [<<lcExcluded>>],
		  "removed": []
		}
		ENDTEXT
		STRTOFILE(lcBuffer, "project.json")
		
		lcProjectFile = STRTRAN(ALLTRIM(toProject.cDirectory), '\\','\') + 'project.json'
		
		** Create the Native Project and Hook the class
		IF _SCREEN.oMagicMenu.bUseNative
			this.createNativeProject(toProject)
		ENDIF
		
		*!* this.openProject(lcProjectFile)
		*!* edit by xinjie  2024.01.26	Actually, it's ugly:(
		this.openProject(lcProjectFile, toProject.cName)
	ENDPROC

	PROCEDURE openfoxprofile
		LPARAMETERS tcFileName
		
		IF !FILE(tcFileName)
			RETURN
		ENDIF
		
		LOCAL lcExt, lcMacro
		
		lcExt = UPPER(JUSTEXT(tcFileName))
		lcMacro = ''
		
		DO CASE
		CASE lcExt == "SCX"
			lcMacro = "MODIFY FORM '" + tcFileName + "'"
		CASE lcExt == "PRG"
			lcMacro = "MODIFY COMMAND '" + tcFileName + "'"
		CASE lcExt == "FRX"
			lcMacro = "MODIFY REPORT '" + tcFileName + "'"
		CASE lcExt == "LBX"
			lcMacro = "MODIFY LABEL '" + tcFileName + "'"
		CASE lcExt == "VCX"
			lcMacro = "MODIFY CLASS '" + tcFileName + "'"
		CASE lcExt == "DBC"
			lcMacro = "MODIFY DATABASE '" + tcFileName + "'"
		CASE lcExt == "DBF"
			TRY
				SELECT 0
				USE (tcFileName) EXCLUSIVE IN 0
				MODIFY STRUCTURE
			CATCH TO loEx
				MESSAGEBOX(loEx.Message, 16)
			FINALLY
				IF USED(JUSTSTEM(tcFileName))
					USE IN (JUSTSTEM(tcFileName))
				ENDIF
			ENDTRY
		CASE lcExt == "MNX"
			lcMacro = "MODIFY MENU '" + tcFileName + "'"
		CASE lcExt == "QPR"
			lcMacro = "MODIFY QUERY '" + tcFileName + "'"
		CASE INLIST(lcExt, "TXT", "FPW", "MPR", "JSON", "YAML", "TOML")
			lcMacro = "MODIFY FILE '" + tcFileName + "'"
		CASE INLIST(lcExt, "APP", "EXE")
			LOCAL lcParams
			lcParams = this.askforparameters()
			_screen.oHelper.oSystem.openApplication(tcFileName, lcParams)	
		OTHERWISE	
		ENDCASE
		IF !EMPTY(lcMacro)
			&lcMacro
		ENDIF
	ENDPROC

	PROCEDURE openhomedir
		IF _vfp.Projects.Count = 0
			RETURN ""
		ENDIF
		
		LOCAL loProject, lcHomeDir
		loProject  = _vfp.ActiveProject
		lcHomeDir = loProject.HomeDir
		_screen.oHelper.oSystem.openFolder(lcHomeDir)
	ENDPROC

	PROCEDURE openproject
		LPARAMETERS tcProjectFile, tcNavProjectName
		
		IF EMPTY(tcProjectFile) OR NOT FILE(tcProjectFile)
		  LOCAL lcProjectFile
		  lcProjectFile = GETFILE("json", "project")
		
		  IF NOT FILE(lcProjectFile)
		    RETURN
		  ENDIF
		
		  IF LOWER(JUSTFNAME(lcProjectFile)) != 'project.json'
		    MESSAGEBOX(_SCREEN.oHelper.oLanguage.Translate("_6PC1CHUOF"), 48)
		    RETURN
		  ENDIF
		  tcProjectFile = lcProjectFile
		ENDIF
		
		WAIT _SCREEN.oHelper.oLanguage.Translate("_6PE1A6IOZ") WINDOW NOWAIT
		
		LOCAL loProject, loJson
		TRY
		  *!* fixed by xinjie  2024.01.28	The directory has changed
		  Do (_screen.omagicmenu.cmaindir + [libs\JSONFox.APP])
		  *!* DO JSONFox.APP
		  loJson = _SCREEN.json.parse(FILETOSTR(tcProjectFile))
		CATCH
		ENDTRY
		
		IF TYPE('loJson') <> 'O' 
		  *!* add by xinjie		Use VFP IDE open project
		  Modify Project tcNavProjectName + [.pjx] save
		
		  RETURN
		ENDIF
		
		loProject = CREATEOBJECT("Empty")
		ADDPROPERTY(loProject, "cName", loJson.NAME)
		ADDPROPERTY(loProject, "cType", loJson.TYPE)
		ADDPROPERTY(loProject, "cDirectory", loJson.PATH)
		ADDPROPERTY(loProject, "cMain", loJson.MAIN)
		ADDPROPERTY(loProject, "oExt", CREATEOBJECT("Collection"))
		ADDPROPERTY(loProject, "oIgnored", CREATEOBJECT("Collection"))
		ADDPROPERTY(loProject, "oExcluded", CREATEOBJECT("Collection"))
		ADDPROPERTY(loProject, "oRemoved", CREATEOBJECT("Collection"))
		ADDPROPERTY(loProject, "oFiles", CREATEOBJECT("Collection"))
		
		** Fill extensions
		LOCAL lcExt
		FOR EACH lcExt IN loJson.ext
		  loProject.oExt.ADD(lcExt)
		ENDFOR
		
		** Fill ignored
		LOCAL lcIgnore
		FOR EACH lcIgnore IN loJson.ignored
		  loProject.oIgnored.ADD(lcIgnore)
		ENDFOR
		
		** Fill excluded
		LOCAL lcExclude
		FOR EACH lcExclude IN loJson.excluded
		  IF TYPE('lcExclude') == 'C'
		    loProject.oExcluded.ADD(lcExclude)
		  ENDIF
		ENDFOR
		
		** Fill removed
		LOCAL lcRemovedFile
		FOR EACH lcRemovedFile IN loJson.removed
		  IF TYPE('lcRemovedFile') == 'C'
		    loProject.oRemoved.ADD(lcRemovedFile)
		  ENDIF
		ENDFOR
		
		LOCAL lcCurdir, loFiles
		lcCurdir = FULLPATH(CURDIR())
		loFiles = CREATEOBJECT("Collection")
		
		** Load the project files based on its extensions, excluded and Ignored.
		_SCREEN.oHelper.oSystem.FindFiles(loProject.cDirectory, loProject.oExt, loFiles)
		loProject.oFiles = THIS.bindProjectFiles(loFiles, loProject.oExcluded, loProject.cMain)
		
		CD (lcCurdir)
		WAIT CLEAR
		IF _SCREEN.oMagicMenu.bUseNative
			MODIFY PROJECT (ADDBS(loProject.cDirectory) + loProject.cName) NOWAIT
		ELSE
		  IF WEXIST('frmProjectManager')
		    IF _SCREEN.oProjectManager.ProjectExists(loProject.cName)
		      _SCREEN.oProjectManager.ProjectSetFocus(loProject.cName)
		      RETURN
		    ENDIF
		    _SCREEN.oProjectManager.AddProject(loProject)
		  ELSE
		    _SCREEN.oProjectManager = CREATEOBJECT("frmProjectManager", loProject)
		    _SCREEN.oProjectManager.SHOW()
		  ENDIF
		ENDIF
		
	ENDPROC

	PROCEDURE reloadproject
		IF NOT WEXIST('frmProjectManager')
			RETURN
		ENDIF
		
		LOCAL loFiles, loProject
		loFiles = CREATEOBJECT("Collection")
		loProject = _SCREEN.oActiveProject.oProject
		
		WAIT _screen.oHelper.oLanguage.Translate("_6PG0RFA5L") WINDOW NOWAIT
		
		** Load the project files based on its extensions, excluded and Ignored.
		_SCREEN.oHelper.oSystem.FindFiles(loProject.cDirectory, loProject.oExt, loFiles)
		
		TRY
			LOCAL lcSource, lcDestination, lcFile, lcDif, loFile, loDif, loNewFiles, loDeletedFiles
			IF loFiles.COUNT != loProject.oFiles.COUNT && Changes
				lcSource = SYS(2015) && These are the new detected files
				lcDestination = SYS(2015) && These are the current project files
				lcDif = SYS(2015)
				CREATE CURSOR (lcSource) (cFile c(250))
				CREATE CURSOR (lcDestination) (cFile c(250))
		
				FOR EACH loFile IN loProject.oFiles
					INSERT INTO &lcDestination VALUES(loFile.cName)
				ENDFOR
		
				FOR EACH lcFile IN loFiles
					INSERT INTO &lcSource VALUES(lcFile)
				ENDFOR
			ENDIF
		
			DO CASE
			CASE loFiles.COUNT > loProject.oFiles.COUNT && New Files
				** Get the differences
				SELECT * FROM (lcSource) WHERE LOWER(cFile) NOT IN (SELECT cFile FROM (lcDestination)) INTO CURSOR (lcDif)
		
				loDif = CREATEOBJECT("Collection")
				SELECT (lcDif)
				SCAN
					loDif.ADD(&lcDif..cFile)
				ENDSCAN
		
				loNewFiles = THIS.bindProjectFiles(loDif, loProject.oExcluded, loProject.cMain)
		
				** Refresh the project items in the screen
				_SCREEN.oActiveProject.AddNewFiles(loNewFiles)
		
			CASE loFiles.COUNT < loProject.oFiles.COUNT && Deleted Files
				** Get the differences
				SELECT * FROM (lcDestination) WHERE LOWER(cFile) NOT IN (SELECT cFile FROM (lcSource)) INTO CURSOR (lcDif)
		
				loDif = CREATEOBJECT("Collection")
				SELECT (lcDif)
				SCAN
					loDif.ADD(&lcDif..cFile)
				ENDSCAN
		
				loDeletedFiles = THIS.bindProjectFiles(loDif, CREATEOBJECT("Collection"), "")
		
				** Refresh the project items in the screen
				_SCREEN.oActiveProject.DeleteFilesFromCursor(loDeletedFiles)
			ENDCASE
		CATCH TO loEx
			MESSAGEBOX(loEx.MESSAGE, 16)
		FINALLY
			IF !EMPTY(lcSource) AND USED(lcSource)
				USE IN (lcSource)
			ENDIF
			IF !EMPTY(lcDestination) AND USED(lcDestination)
				USE IN (lcDestination)
			ENDIF
			IF !EMPTY(lcDif) AND USED(lcDif)
				USE IN (lcDif)
			ENDIF
		ENDTRY
		
		WAIT CLEAR
	ENDPROC

	PROCEDURE run		&& Occurs when an Active Document is ready to execute your application code.
		IF NOT WEXIST('frmProjectManager')
			RETURN
		ENDIF
		
		IF THIS.compile()
			LOCAL loProject, lcExeName
			loProject = _SCREEN.oActiveProject.oProject
			lcExeName = ADDBS(ALLTRIM(loProject.cDirectory)) + ALLTRIM(loProject.cName) + '.' + this.getProjectExtension(loProject.cType)
			IF INLIST(UPPER(loProject.cType), "SRVEXE", "WEBAPP")
				lcExeName = ADDBS(ALLTRIM(loProject.cDirectory)) + 'Dist\' + ALLTRIM(loProject.cName) + '.' + this.getProjectExtension(loProject.cType)
			ENDIF
		
			IF !FILE(lcExeName)
				RETURN
			ENDIF
			WAIT _screen.oHelper.oLanguage.Translate("_6PG0UDOBN") WINDOW NOWAIT
			DO CASE
			CASE INLIST(UPPER(loProject.cType), "SRVEXE", "WEBAPP")
				_screen.oHelper.oService.Register()
			CASE UPPER(loProject.cType) == "CONEXE"
				_screen.oHelper.oConsole.run()
			OTHERWISE
				_screen.oHelper.oSystem.OpenApplication(lcExeName)
			ENDCASE
			WAIT CLEAR
		ENDIF
	ENDPROC

	PROCEDURE saveproject
		LPARAMETERS toProject
		LOCAL lbResult, lcDirectory, lcIgnored, lcExcluded, lcRemoved
		lbResult = .T.
		lcDirectory = ALLTRIM(STRTRAN(toProject.cDirectory, '\','\\'))
		lcIgnored   = this.arrayToStr(toProject.oIgnored)
		lcExcluded  = ALLTRIM(STRTRAN(this.arrayToStr(toProject.oExcluded), '\','\\'))
		lcRemoved   = ALLTRIM(STRTRAN(this.arrayToStr(toProject.oRemoved), '\','\\'))
		TRY
			LOCAL lcJson
			TEXT TO lcJson NOSHOW TEXTMERGE
		{
		  "name": "<<ALLTRIM(toProject.cName)>>",
		  "type": "<<ALLTRIM(toProject.cType)>>",
		  "path": "<<lcDirectory>>",
		  "main": "<<ALLTRIM(toProject.cMain)>>",
		  "ext": [<<this.arrayToStr(toProject.oExt)>>],
		  "ignored": [<<lcIgnored>>],
		  "excluded": [<<lcExcluded>>],
		  "removed": [<<lcRemoved>>]
		}
			ENDTEXT
		
			=STRTOFILE(lcJson, ADDBS(ALLTRIM(toProject.cDirectory)) + 'project.json')
		CATCH
			lbResult = .F.
		ENDTRY
		
		RETURN lbResult
	ENDPROC

	PROCEDURE stopservice
		** Detiene el servicio en caso que sea un proyecto tipo SERVICIO WINDOWS o SERVICIO WEB
		IF inlist(UPPER(this.getProjectType()), "SRVEXE", "WEBAPP")
			_screen.oHelper.oService.Stop()
			INKEY(2, "HC")
		ENDIF
	ENDPROC

	PROCEDURE updateruntimes
		IF _vfp.Projects.Count = 0
			RETURN ""
		ENDIF
		
		Local lcDomain
		lcDomain = "https://github.com"
		If Upper(_Screen.oHelper.oLanguage.GetLanguage()) == "CN"
			lcDomain = "https://hub.nuaa.cf"
		EndIf
		
		** Detener el servicio (en caso de ser un proyecto tipo servicio)
		THIS.stopService()
		
		LOCAL loProject, lcDllName, lcSrvName, lcRtPath, lcBackupPath, lcMacro, loFiles, lcFileName, lcFileURL, i
		loFiles = CREATEOBJECT("Collection")
		loProject = _VFP.ActiveProject
		
		&& 24/10/2023 TODO(irwin): actualizar tambi閚 los runtime del servicio de windows (SRVEXE)
		IF !INLIST(UPPER(this.getProjectType()), "WEBAPP")
			RETURN .F.
		ENDIF
		
		lcRtPath  = ADDBS(loProject.HomeDir) + 'Dist\'
		** Crear carpeta backup
		lcBackupPath = ADDBS(lcRtPath + 'Backup' + DTOS(DATE()))
		IF !DIRECTORY(lcBackupPath)
			MKDIR &lcBackupPath
		ENDIF
		
		** Lista de ficheros a actualizar
		
		** 1. FoxServer.dll
		lcFileName = 'FoxServer.dll'
		lcFileURL = lcDomain+'/VFPLegacy/FoxServer/raw/main/FoxServer.dll'
		loFiles.Add(lcRtPath + lcFileName + ';' + lcBackupPath + lcFileName + ';' + lcFileURL)
		
		** 2. <ProjectName>.exe
		lcFileName = ALLTRIM(JUSTSTEM(loProject.Name)) + '.exe'
		lcFileURL = lcDomain+'/VFPLegacy/FoxServer/raw/main/FoxServer.exe'
		loFiles.Add(lcRtPath + lcFileName + ';' + lcBackupPath + lcFileName + ';' + lcFileURL)
		
		** 3. WinSW.exe
		lcFileName = 'WinSW.exe'
		lcFileURL = lcDomain+'/VFPLegacy/FoxServer/raw/main/WinSW.exe'
		loFiles.Add(lcRtPath + lcFileName + ';' + lcBackupPath + lcFileName + ';' + lcFileURL)
		
		** 4. JSONFox.app
		lcFileName = 'JSONFox.app'
		lcFileURL = lcDomain+'/Irwin1985/JSONFox/raw/master/jsonfox.app'
		loFiles.Add(lcRtPath + lcFileName + ';' + lcBackupPath + lcFileName + ';' + lcFileURL)
		
		** 5. PrintPDF.exe
		lcFileName = 'PrintPDF.exe'
		lcFileURL = lcDomain+'/VFPLegacy/FoxServer/raw/main/PrintPDF.exe'
		loFiles.Add(lcRtPath + lcFileName + ';' + lcBackupPath + lcFileName + ';' + lcFileURL)
		
		** 6. FoxyPreviewer.app
		lcFileName = 'FoxyPreviewer.app'
		lcFileURL = lcDomain+'/VFPLegacy/FoxServer/raw/main/FoxyPreviewer.app'
		loFiles.Add(lcRtPath + lcFileName + ';' + lcBackupPath + lcFileName + ';' + lcFileURL)
		
		** 7. PrintPDF.exe
		lcFileName = 'FSUtility.dll'
		lcFileURL = lcDomain+'/VFPLegacy/FoxServer/raw/main/FSUtility.dll'
		loFiles.Add(lcRtPath + lcFileName + ';' + lcBackupPath + lcFileName + ';' + lcFileURL)
		
		** Ahora con los ficheros a salvo podemos dar inicio a la descarga
		WAIT _SCREEN.oHelper.oLanguage.Translate("_6QQ1BLMAT") WINDOW NOWAIT
		TRY
			FOR i=1 TO loFiles.Count
				** Copiar los ficheros al backup
				lcFileName = GETWORDNUM(loFiles.Item(i), 1, ';')
				lcBackupFile = GETWORDNUM(loFiles.Item(i), 2, ';')
				lcFileURL = GETWORDNUM(loFiles.Item(i), 3, ';')
				lcMacro = "COPY FILE '" + lcFileName + "' TO '" + lcBackupFile + "'"
				&lcMacro
				** Descargar fichero
				IF FILE(lcBackupFile)
					IF !_screen.oHelper.oSystem.DownloadFileFromURL(lcFileURL, lcFileName)
						TRY
							** Restaurar el fichero desde su respaldo
							lcMacro = "COPY FILE '" + lcBackupFile + "' TO '" + lcFileName + "'"
							&lcMacro
						CATCH
						ENDTRY
						RETURN .F.
					ENDIF
				ENDIF
			ENDFOR
		CATCH TO loEx
			WAIT loEx.message WINDOW
		ENDTRY
		
		WAIT CLEAR
		
		MESSAGEBOX(_screen.oHelper.oLanguage.Translate("_6QQ1E0AWX"), 64, "MagicMenu" + _screen.oMagicMenu.cVersion)
	ENDPROC

ENDDEFINE

DEFINE CLASS projectexplorer AS container 
 	*< CLASSDATA: Baseclass="container" Timestamp="" Scale="Pixels" Uniqueid="" />

	*-- OBJECTDATA items order determines ZOrder / El orden de los items OBJECTDATA determina el ZOrder 
	*< OBJECTDATA: ObjPath="txtPath" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Grid1" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Grid1.Column1.Header1" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Grid1.Column1.Text1" UniqueID="" Timestamp="" />

	*<DefinedPropArrayMethod>
		*m: addfiles
		*m: addnewfiles
		*m: browsetable
		*m: deletefilesfromcursor
		*m: excludefile
		*m: includefile
		*m: loadfiles
		*m: modifyfile
		*m: removefile
		*m: setfontbold
		*m: setforecolor
		*m: setmainfile
		*p: calias
		*p: nrowsperpage
		*p: oform
		*p: oproject
		*p: _memberdata		&& XML Metadata for customizable properties
	*</DefinedPropArrayMethod>

	*<PropValue>
		BackStyle = 0
		BorderWidth = 0
		calias = 
		Height = 512
		Name = "projectexplorer"
		nrowsperpage = 40
		oform = .NULL.
		oproject = .NULL.
		Width = 370
		_memberdata = <VFPData>

		</VFPData>
	*</PropValue>

	ADD OBJECT 'Grid1' AS grid WITH ;
		AllowAddNew = .F., ;
		AllowCellSelection = .F., ;
		ColumnCount = 1, ;
		DeleteMark = .F., ;
		FontName = "Tahoma", ;
		GridLines = 0, ;
		Height = 487, ;
		HighlightBackColor = 255,255,0, ;
		HighlightForeColor = 0,0,255, ;
		HighlightStyle = 2, ;
		Left = 0, ;
		Name = "Grid1", ;
		Panel = 1, ;
		RecordMark = .F., ;
		RecordSource = "", ;
		ScrollBars = 2, ;
		SplitBar = .F., ;
		Top = 0, ;
		Width = 370, ;
		Column1.ColumnOrder = 1, ;
		Column1.ControlSource = "", ;
		Column1.FontName = "Tahoma", ;
		Column1.Name = "Column1", ;
		Column1.Visible = .T., ;
		Column1.Width = 347
		*< END OBJECT: BaseClass="grid" />

	ADD OBJECT 'Grid1.Column1.Header1' AS header WITH ;
		Alignment = 2, ;
		Caption = "Elementos del proyecto [Clic derecho para opciones]", ;
		FontName = "Tahoma", ;
		Name = "Header1"
		*< END OBJECT: BaseClass="header" />

	ADD OBJECT 'Grid1.Column1.Text1' AS textbox WITH ;
		BackColor = 255,255,255, ;
		BorderStyle = 0, ;
		FontName = "Tahoma", ;
		ForeColor = 0,0,0, ;
		Margin = 0, ;
		Name = "Text1", ;
		Visible = .T.
		*< END OBJECT: BaseClass="textbox" />

	ADD OBJECT 'txtPath' AS textbox WITH ;
		BackStyle = 0, ;
		BorderStyle = 0, ;
		DisabledForeColor = 0,0,0, ;
		Enabled = .T., ;
		FontName = "Tahoma", ;
		Height = 23, ;
		Left = 0, ;
		Name = "txtPath", ;
		ReadOnly = .T., ;
		Top = 487, ;
		Width = 370
		*< END OBJECT: BaseClass="textbox" />
	
	PROCEDURE addfiles
	ENDPROC

	PROCEDURE addnewfiles
		LPARAMETERS toNewFiles
		
		** Fill the cursor with the files
		SELECT (this.cAlias)
		LOCAL lcFileName, lbIsRemoved, loFile, lcRemovedFile, lnRecno
		lnRecno = RECNO()
		
		FOR EACH loFile IN toNewFiles
			lbIsRemoved = .F.
			lcFileName  = JUSTFNAME(loFile.cName)
			FOR EACH lcRemovedFile IN this.oProject.oRemoved
				IF LOWER(lcFileName) == LOWER(lcRemovedFile)
					lbIsRemoved = .T.
					EXIT
				ENDIF
			ENDFOR
			IF lbIsRemoved
				LOOP
			ENDIF
			
			APPEND BLANK
			REPLACE cName 		WITH lcFileName
			REPLACE cExt		WITH LOWER(JUSTEXT(loFile.cName))
			REPLACE cPath		WITH JUSTPATH(loFile.cName)
			REPLACE bVisible	WITH .T.
			REPLACE bDeleted 	WITH .F.
			REPLACE bExcluded	WITH loFile.bExcluded
			replace bIsMain		WITH loFile.bIsMain
		ENDFOR
		GO lnRecno IN (this.cAlias)
		this.oForm.RefreshTotal()
		this.grid1.Refresh()
	ENDPROC

	PROCEDURE browsetable
		LOCAL lcName, lcFileName
		lcName = ALLTRIM(EVALUATE(THIS.cAlias + '.cName'))
		IF !EMPTY(lcName)
			lcFileName = ADDBS(ALLTRIM(EVALUATE(THIS.cAlias + '.cPath'))) + lcName
			TRY
				DEFINE WINDOW winBrowse FROM 1,1 TO 20,120 TITLE JUSTSTEM(lcFileName) FONT "Microsoft Sans Serif", 9 Style 'N' CLOSE FLOAT GROW ZOOM MINIMIZE
				SELECT 0
				USE (lcFileName) SHARED
				BROWSE WINDOW winBrowse
			CATCH TO loEx
				MESSAGEBOX(loEx.Message, 16)
			FINALLY
				IF USED(JUSTSTEM(lcFileName))
					USE IN (JUSTSTEM(lcFileName))
				ENDIF
				RELEASE WINDOWS winBrowse
			ENDTRY
		ENDIF
	ENDPROC

	PROCEDURE deletefilesfromcursor
		LPARAMETERS toFiles
		
		LOCAL loFile, lcFile
		FOR EACH loFile IN toFiles
			lcFile = LOWER(ALLTRIM(loFile.cName))
			UPDATE (this.cAlias) SET bDeleted = .T. WHERE LOWER(ADDBS(ALLTRIM(cPath)) + ALLTRIM(cName)) == lcFile
		ENDFOR
		
		IF !EOF(this.cAlias)
			GO TOP IN (this.cAlias)
		ENDIF
		this.oForm.RefreshTotal()
		this.grid1.Refresh()
	ENDPROC

	PROCEDURE excludefile
		IF TYPE('this.oProject') != 'O'
			RETURN
		ENDIF
		
		LOCAL lcName, lcKey, lcAlias
		lcAlias = this.cAlias
		lcName  = LOWER(ADDBS(ALLTRIM(&lcAlias..cPath))+ALLTRIM(&lcAlias..cName))
		
		FOR EACH lcKey IN this.oProject.oExcluded
			IF LOWER(lcName) == LOWER(lcKey)
				RETURN
			ENDIF
		ENDFOR
		
		this.oProject.oExcluded.Add(lcName)
		
		IF _screen.oHelper.oProject.SaveProject(this.oProject)
			SELECT (this.cAlias)
			replace bExcluded WITH .t.
			thisform.Refresh()
		ENDIF
		
	ENDPROC

	PROCEDURE includefile
		IF TYPE('this.oProject') != 'O'
			RETURN
		ENDIF
		
		LOCAL lcName, lbSave, i, lcKey
		lcName = LOWER(ALLTRIM(EVALUATE(this.cAlias + '.cName')))
		i = 0
		FOR EACH lcKey IN this.oProject.oExcluded
			i = i + 1
			IF LOWER(lcName) == LOWER(lcKey)
				lbSave = .T.		
				this.oProject.oExcluded.Remove(i)
				EXIT
			ENDIF
		ENDFOR
		
		IF lbSave
			IF _screen.oHelper.oProject.SaveProject(this.oProject)
				SELECT (this.cAlias)
				replace bExcluded WITH .f.
				thisform.Refresh()
			ENDIF
		ENDIF
	ENDPROC

	PROCEDURE Init
		this.oForm = this.Parent.parent.parent
		THIS.WIDTH = THIS.PARENT.PARENT.PAGEWIDTH
		THIS.HEIGHT = THIS.PARENT.PARENT.PAGEHEIGHT
		
		THIS.grid1.WIDTH = THIS.WIDTH
		this.grid1.column1.Width = this.grid1.Width
		THIS.grid1.HEIGHT = THIS.HEIGHT - THIS.txtPath.HEIGHT
		
	ENDPROC

	PROCEDURE loadfiles
		** Fill the cursor with the files
		SELECT (this.cAlias)
		LOCAL lcFileName, lbIsRemoved, loFile, lcRemovedFile
		FOR EACH loFile IN this.oProject.oFiles
			lbIsRemoved = .F.
			lcFileName  = JUSTFNAME(loFile.cName)
			FOR EACH lcRemovedFile IN this.oProject.oRemoved
				IF LOWER(ALLTRIM(loFile.cName)) == LOWER(lcRemovedFile)
					lbIsRemoved = .T.
					EXIT
				ENDIF
			ENDFOR
			IF lbIsRemoved
				LOOP
			ENDIF
			
			APPEND BLANK
			REPLACE cName 		WITH lcFileName
			REPLACE cExt		WITH LOWER(JUSTEXT(loFile.cName))
			REPLACE cPath		WITH JUSTPATH(loFile.cName)
			REPLACE bVisible	WITH .T.
			REPLACE bExcluded	WITH loFile.bExcluded
			replace bIsMain		WITH loFile.bIsMain
		ENDFOR
		GO TOP
		
		this.grid1.RecordSource = this.cAlias
		this.grid1.column1.ControlSource = this.cAlias + '.cName'
		this.txtPath.ControlSource = this.cAlias + '.cPath'
		
		SET FILTER TO !bDeleted AND bVisible
		
		this.oForm.RefreshTotal()
	ENDPROC

	PROCEDURE modifyfile
		LOCAL lcName, lcFileName
		lcName = ALLTRIM(EVALUATE(THIS.cAlias + '.cName'))
		IF !EMPTY(lcName)
			lcFileName = ADDBS(ALLTRIM(EVALUATE(THIS.cAlias + '.cPath'))) + lcName
			_SCREEN.oHelper.oProject.OpenFoxProFile(lcFileName)
		ENDIF
	ENDPROC

	PROCEDURE removefile
		IF TYPE('this.oProject') != 'O'
			RETURN
		ENDIF
		
		LOCAL lbDeleteFromDisk, lcName, lcPath
		lbDeleteFromDisk = MESSAGEBOX(_screen.oHelper.oLanguage.Translate("_6PE1DGNT7"),36) = 6
		lcName = LOWER(ALLTRIM(EVALUATE(this.cAlias + '.cName')))
		lcPath = ADDBS(ALLTRIM(EVALUATE(this.cAlias + '.cPath')))
		lcFileName = lcPath + lcName
		
		this.oProject.oRemoved.Add(lcFileName)
		
		IF _screen.oHelper.oProject.SaveProject(this.oProject)
			SELECT (this.cAlias)
			replace bDeleted WITH .T.
			IF lbDeleteFromDisk
				TRY
					IF FILE(lcFileName)
						DELETE FILE (lcFileName) RECYCLE
					ENDIF
				CATCH TO loEx
					MESSAGEBOX(loEx.message, 16)
				ENDTRY
			ENDIF
			this.oForm.RefreshTotal()
			thisform.Refresh()
		ENDIF
	ENDPROC

	PROCEDURE setfontbold
		RETURN bExcluded OR bIsMain
	ENDPROC

	PROCEDURE setforecolor
		RETURN IIF(bExcluded, RGB(200, 0, 0), RGB(0, 0, 0))
	ENDPROC

	PROCEDURE setmainfile
		LOCAL lcAlias, lcMain, lnRecno
		lcAlias = THIS.cAlias
		lcMain = JUSTFNAME(&lcAlias..cName)
		THIS.oProject.cMain = lcMain
		
		IF _SCREEN.oHelper.oProject.SaveProject(THIS.oProject)
			SELECT (lcAlias)
			lnRecno = RECNO(lcAlias)
			REPLACE ALL bIsMain WITH .F.
			UPDATE (lcAlias) SET bIsMain = .T. WHERE RECNO() == lnRecno
			GO lnRecno IN (lcAlias)
			THIS.grid1.REFRESH()
		ENDIF
	ENDPROC

	PROCEDURE Grid1.AfterRowColChange
		LPARAMETERS nColIndex
		THIS.Parent.txtPath.Refresh()
	ENDPROC

	PROCEDURE Grid1.BeforeRowColChange
		LPARAMETERS nColIndex
		THIS.Parent.txtPath.Refresh()
	ENDPROC

	PROCEDURE Grid1.Column1.Header1.Init
		this.Caption = _screen.oHelper.oLanguage.Translate("_6PE1C9IPA")
	ENDPROC

	PROCEDURE Grid1.DblClick
		this.Parent.modifyfile()
	ENDPROC

	PROCEDURE Grid1.Init
		THIS.SETALL("DynamicForeColor","This.Parent.setForeColor()","Column")
		THIS.SETALL("DynamicFontBold","This.Parent.setFontBold()","Column")
	ENDPROC

	PROCEDURE Grid1.KeyPress
		LPARAMETERS nKeyCode, nShiftAltCtrl
		
		DO CASE
		CASE nKeyCode = 13 AND nShiftAltCtrl = 0 && ENTER
			this.Parent.ModifyFile()
		CASE nKeyCode = 1 AND nShiftAltCtrl = 0 && HOME
			GO TOP IN (THIS.PARENT.cAlias)
		CASE nKeyCode = 6 AND nShiftAltCtrl = 0 && END
			GO BOTTOM IN (THIS.PARENT.cAlias)
		ENDCASE
	ENDPROC

	PROCEDURE Grid1.RightClick
		SET SHADOW ON
		
		DEFINE POPUP popMenuFiles ;
			FROM MROW() , MCOL();
			MARGIN ;
			SHORTCUT
		
		DEFINE BAR 1 OF popMenuFiles PROMPT _screen.oHelper.oLanguage.Translate("_6PE1D8257") 	PICTURE _screen.oMagicMenu.cDirBMP+"script_edit.bmp" SKIP FOR INLIST(cExt, "app", "exe", "dll", "fll")
		DEFINE BAR 2 OF popMenuFiles PROMPT _screen.oHelper.oLanguage.Translate("_6PE1D8CET") 	PICTURE _screen.oMagicMenu.cDirBMP+"tag_red.bmp" SKIP FOR (bExcluded OR bIsMain)
		DEFINE BAR 3 OF popMenuFiles PROMPT _screen.oHelper.oLanguage.Translate("_6PE1D8LL9") 	PICTURE _screen.oMagicMenu.cDirBMP+"tag_green.bmp" SKIP FOR !bExcluded
		DEFINE BAR 4 OF popMenuFiles PROMPT _screen.oHelper.oLanguage.Translate("_6PE1DAT76") 	PICTURE _screen.oMagicMenu.cDirBMP+"script_delete.bmp" SKIP FOR bIsMain
		DEFINE BAR 5 OF popMenuFiles PROMPT _screen.oHelper.oLanguage.Translate("_6PF1CY5ZE")	PICTURE _screen.oMagicMenu.cDirBMP+"lightning16.bmp" SKIP FOR (bIsMain OR bExcluded OR !INLIST(cExt, "scx", "mnx", "prg"))
		DEFINE BAR 6 OF popMenuFiles PROMPT _screen.oHelper.oLanguage.Translate("_6PG0KEGYP")	PICTURE _screen.oMagicMenu.cDirBMP+"table.bmp" SKIP FOR (cExt != "dbf")
		
		ON SELECTION POPUP popMenuFiles _SCREEN.oProjectManager.onpopuprightclick(BAR())
		ACTIVATE POPUP popMenuFiles
		RELEASE POPUP popMenuFiles
	ENDPROC

ENDDEFINE

DEFINE CLASS service AS collection 
 	*< CLASSDATA: Baseclass="collection" Timestamp="" Scale="Pixels" Uniqueid="" />

	*<DefinedPropArrayMethod>
		*m: downloadtemplates
		*m: executeserviceaction
		*m: newservice
		*m: printstatus
		*m: register
		*m: start
		*m: stop
		*p: _memberdata		&& XML Metadata for customizable properties
	*</DefinedPropArrayMethod>

	*<PropValue>
		Height = 23
		Name = "service"
		Width = 23
		_memberdata = <VFPData>

		</VFPData>
	*</PropValue>
	
	PROCEDURE downloadtemplates
	ENDPROC

	PROCEDURE executeserviceaction
		LPARAMETERS tcBatchName
		
		LOCAL loProject, lcExeName
		loProject = _screen.oHelper.oProject.loadConfigFile()
		
		If IsNull(loProject)
			Return
		EndIf
		
		lcExeName = ADDBS(ALLTRIM(loProject.cDirectory)) + 'Dist\'+ ALLTRIM(loProject.cName) + '.' + _screen.oHelper.oProject.getProjectExtension(loProject.cType)
		
		IF UPPER(loProject.cType) == "WEBAPP" and tcBatchName == "Start" and !File(lcExeName) and !_screen.oMagicMenu.bUseNative
			_screen.oHelper.oProject.compile() && Compile first
			Local lnStart, lnElapsed, lnMaxTime
			lnStart = Seconds()
			lnElapsed = 0
			lnMaxTime = 10
			Do while !File(lcExeName)
				lnElapsed = Int(Seconds() - lnStart)
				Wait "Esperando la finalizaci髇 del servicio de compilaci髇, tiempo trascurrido [" + Alltrim(Str(lnElapsed)) + " seg] de un m醲imo de [" + Alltrim(Str(lnMaxTime)) + "] segundos, por favor espere..." window NOWAIT
				If Lastkey() == 27 or lnElapsed >= lnMaxTime
					Exit
				EndIf
				Doevents
			EndDo
			Wait clear
		EndIf
		
		IF !FILE(lcExeName)
			RETURN
		EndIf
		
		LOCAL lcBatchFile
		lcBatchFile = ADDBS(ALLTRIM(loProject.cDirectory)) + 'Dist\' + tcBatchName + '.bat'
		IF !FILE(lcBatchFile)
			RETURN
		ENDIF
		
		_screen.oHelper.oSystem.RunCmd(lcBatchFile)
	ENDPROC

	PROCEDURE newservice
		LOCAL loForm, loService, lcRootFolder, lcCurDir, lcMsg, lcScript, lcManifestURL, lcManifestName
		
		loForm = CREATEOBJECT("frmNewService")
		loForm.SHOW(1)
		loService = loForm.oProject
		
		RELEASE loForm
		IF EMPTY(loService.cName)
			RETURN
		ENDIF
		
		* Create the root folder
		lcRootFolder = ADDBS(ALLTRIM(loService.cDirectory))
		IF NOT DIRECTORY(lcRootFolder)
			*!* fixed by xinjie
			MKDIR '&lcRootFolder'
			*!* MKDIR &lcRootFolder
		ENDIF
		lcCurDir = FULLPATH(CURDIR())
		*!*	* Change Directory to the site root
		*!*	CD (lcRootFolder)
		
		Local lcDomain
		lcDomain = "https://github.com"
		
		*!* fixed by xinjie  2024.01.26		
		*!* For countries where the network is so tightly controlled that GitHub cannot be accessed properly
		If InList(Upper(_Screen.oHelper.oLanguage.GetLanguage()), "CN")
			lcDomain = FileToStr("domain4cn.txt")		&& Prevent addresses from being blocked from access without warning
		EndIf
		*!*	If Upper(_Screen.oHelper.oLanguage.GetLanguage()) == "CN"
		*!*		lcDomain = "https://hub.nuaa.cf"
		*!*	EndIf
		
		IF _screen.oMagicMenu.bUseNative
			CD (lcRootFolder)
			*!* fixed by xinjie  2024.01.26
			lcManifestURL  = lcDomain+'/VFPLegacy/MagicMenu/raw/master/native/service-wrapper.manifest'
			* lcManifestURL  = lcDomain+'/VFPLegacy/MagicMenu/master/native/service-wrapper.manifest'
			lcManifestName = 'service-wrapper.manifest'
		ELSE
			lcManifestURL  = lcDomain+'/Irwin1985/ServiceWrapper/raw/main/setup.manifest'
			lcManifestName = 'setup.manifest'
		ENDIF
		
		*!* fixed by xinjie  2024.01.28
		llReturn = _screen.oHelper.oSystem.DownloadFilesFromManifest(lcManifestURL, lcManifestName)
		
		If llReturn = .F.
			Return .F.
		EndIf 
		*!* _screen.oHelper.oSystem.DownloadFilesFromManifest(lcManifestURL, lcManifestName)
		
		*!*	* Change Directory to the site root
		*!*	CD (lcRootFolder)
		
		
		*!*	_SCREEN.oHelper.oSystem.DownloadFilesFromManifest("https://github.com/Irwin1985/ServiceWrapper/raw/main/setup.manifest", "setup.manifest")
		
		** Rename SrvWrapper.exe with service name
		LOCAL lcWrapper, lcService, lcDistFolder
		lcDistFolder = lcRootFolder + 'dist\'
		lcWrapper = lcDistFolder + 'SrvWrapper.exe'
		lcService = lcDistFolder + ALLTRIM(loService.cName) + '.exe'
		IF NOT FILE(lcWrapper)
			lcMsg = _SCREEN.oHelper.oLanguage.Translate("_6PA1A9Y9J")
			lcMsg = STRTRAN(lcMsg, "{cFileName}", lcWrapper)
			MESSAGEBOX(lcMsg, 16)
			RETURN
		ENDIF
		
		lcScript = "RENAME '" + lcWrapper + "' TO '" + lcService + "'"
		&lcScript
		
		LOCAL lcBuffer, lcMainFilePath, lcConfigFPWFilePath, lcClassName, lcServiceName, lcRegisterFile, lcConfigJSONFilePath
		lcClassName = SYS(2015)
		lcMainFilePath = lcRootFolder + 'Main.prg'
		lcConfigFPWFilePath = lcRootFolder + 'CONFIG.FPW'
		
		** Distribution folder
		lcConfigJSONFilePath = lcDistFolder + 'config.json'
		lcRegisterFile = lcDistFolder + 'Install.bat'
		lcStartFile = lcDistFolder + 'start.bat'
		lcStopFile = lcDistFolder + 'stop.bat'
		lcUnistFile = lcDistFolder + 'uninst.bat'
		lcServiceName = ALLTRIM(loService.cName)
		
		IF EMPTY(loService.cDescription)
			loService.cDescription = _SCREEN.oHelper.oLanguage.Translate("_6PA17SL2A")
		ENDIF
		
		IF EMPTY(loService.cDisplayName)
			loService.cDisplayName = loService.cName
		ENDIF
		
		** Create the batch file for registering the service
		TEXT TO lcBuffer NOSHOW TEXTMERGE
		sc create <<lcServiceName>> binPath="<<lcDistFolder + lcServiceName + '.exe'>>"
		sc config <<lcServiceName>> DisplayName="<<ALLTRIM(loService.cDisplayName)>>"
		sc description <<lcServiceName>> "<<ALLTRIM(loService.cDescription)>>"
		ENDTEXT
		STRTOFILE(lcBuffer, lcRegisterFile)
		
		** Create the start batch file
		TEXT TO lcBuffer NOSHOW TEXTMERGE
		sc start <<lcServiceName>>
		ENDTEXT
		STRTOFILE(lcBuffer, lcStartFile)
		
		** Create the stop batch file
		TEXT TO lcBuffer NOSHOW TEXTMERGE
		sc stop <<lcServiceName>>
		ENDTEXT
		STRTOFILE(lcBuffer, lcStopFile)
		
		** Create the stop batch file
		TEXT TO lcBuffer NOSHOW TEXTMERGE
		sc delete <<lcServiceName>>
		ENDTEXT
		STRTOFILE(lcBuffer, lcUnistFile)
		
		** Create the main PRG file
		TEXT TO lcBuffer NOSHOW TEXTMERGE
		* <<_screen.oHelper.oLanguage.Translate("_6PA18LVBJ")>>
		DEFINE CLASS <<lcClassName>> AS CUSTOM OLEPUBLIC
			* <<_screen.oHelper.oLanguage.Translate("_6PA19T2HC")>>
			cErrorLog = ""
			cWarningLog = ""
			cInfoLog = ""
			* <<_screen.oHelper.oLanguage.Translate("_6Q20NNC7A")>>
			nInterval = 0
			
		
			PROCEDURE OnStart
				TRY
					* <<_screen.oHelper.oLanguage.Translate("_6PA15CWIL")>>
				CATCH TO loEx
					THIS.LogError(loEx)
				ENDTRY
			ENDPROC
			
			
			PROCEDURE MainLoop
				TRY
					* <<_screen.oHelper.oLanguage.Translate("_6PA15DQ3S")>>
				CATCH TO loEx
					THIS.LogError(loEx)
				ENDTRY
			ENDPROC
		
		
			PROCEDURE OnStop
				TRY
					* <<_screen.oHelper.oLanguage.Translate("_6PA15EBT9")>>
				CATCH TO loEx
					THIS.LogError(loEx)
				ENDTRY
			ENDPROC
		
		
			HIDDEN PROCEDURE LogError(toException)
				LOCAL lcErrorMsg
				lcErrorMsg = "ERROR NRO: " + ALLTRIM(STR(toException.ERRORNO))
				lcErrorMsg = lcErrorMsg + CHR(13) + "LINE: " + ALLTRIM(STR(toException.LINENO))
				lcErrorMsg = lcErrorMsg + CHR(13) + "MESSAGE: " + ALLTRIM(toException.MESSAGE)
				lcErrorMsg = lcErrorMsg + CHR(13) + "PROGRAM: " + ALLTRIM(toException.PROCEDURE)
				THIS.cErrorLog = lcErrorMsg
			ENDPROC
		ENDDEFINE
		ENDTEXT
		STRTOFILE(lcBuffer, lcMainFilePath)
		
		** Create the config json file
		TEXT TO lcBuffer NOSHOW TEXTMERGE
		{
		  "instance": "<<lcServiceName+'.'+lcClassName>>"
		}
		ENDTEXT
		STRTOFILE(lcBuffer, lcConfigJSONFilePath)
		
		** Create the CONFIG.FPW file
		TEXT TO lcBuffer NOSHOW
		SCREEN = OFF
		RESOURCE = OFF
		ENDTEXT
		STRTOFILE(lcBuffer, lcConfigFPWFilePath)
		
		* Restore the current directory
		CD (lcCurDir)
		
		** Create new project
		LOCAL loProject, lcPrjRoot
		lcPrjRoot = STRTRAN(ADDBS(lcRootFolder), '\', '\\')
		loProject = CREATEOBJECT("Empty")
		ADDPROPERTY(loProject, "cName", ALLTRIM(loService.cName))
		ADDPROPERTY(loProject, "cType", "SRVEXE")
		ADDPROPERTY(loProject, "cDirectory", lcPrjRoot)
		ADDPROPERTY(loProject, "cMain", lcPrjRoot+"Main.prg")
		ADDPROPERTY(loProject, "oExt", .NULL.)
		ADDPROPERTY(loProject, "oIgnored", .NULL.)
		ADDPROPERTY(loProject, "oExcluded", CREATEOBJECT("Collection"))
		loProject.oExcluded.Add(lcService)
		loProject.oExcluded.Add(lcDistFolder + 'ServoInstaller.exe')
		
		** Register the service
		WAIT _screen.oHelper.oLanguage.Translate("_6PH124M74") WINDOW NOWAIT
		_SCREEN.oHelper.oSystem.OpenApplication(lcRegisterFile, "", 2)
		WAIT CLEAR
		*----------------------
		
		_screen.oHelper.oProject.newProject(loProject)
	ENDPROC

	PROCEDURE printstatus
		LPARAMETERS tcBatchName
		
		LOCAL loProject
		loProject = _screen.oHelper.oProject.loadConfigFile()
		
		If IsNull(loProject)
			Return
		EndIf
		
		LOCAL lcBatchFile, lcOutput, lnSeconds, lbFound, lnState, lcHint, lcLang, lcStatus, loResult, lcBuffer
		loResult = .null.
		lcOutput = ADDBS(ALLTRIM(loProject.cDirectory)) + Sys(2015) + '.txt'
		lcBuffer = 'sc query ' + ALLTRIM(loProject.cName) + '>"' + lcOutput + '"'
		lcBatchFile = ADDBS(ALLTRIM(loProject.cDirectory)) + Sys(2015) + '.bat'
		=StrToFile(lcBuffer, lcBatchFile)
		If !File(lcBatchFile)
			Return loResult
		EndIf
		
		lbFound = .f.
		_screen.oHelper.oSystem.RunCmd(lcBatchFile)
		Inkey(1)
		
		** Wait 2 seconds
		lnSeconds = Seconds() + 2
		
		Do while Seconds() <= lnSeconds
			If File(lcOutput)
				lbFound = .t.
				Exit
			EndIf
		EndDo
		
		If lbFound
			lcLang = Upper(_Screen.oHelper.oLanguage.GetLanguage())
			Do case
			case lcLang == "ES"
				lcHint = "ESTADO"
			Case lcLang == "EN"
				lcHint = "STATE"
			Case lcLang == "CN"
				lcHint = "状态"
			endcase	
			lnState = Int(Val(GetWordNum(Alltrim(strextract(FileToStr(lcOutput), lcHint, Chr(13)+Chr(10))),2)))
			
			DO CASE
			CASE lnState = 1
				Do case
				case lcLang == "ES"
					lcStatus = "El servicio no se est?ejecutando"
				Case lcLang == "EN"
					lcStatus = "The service is not running"
				Case lcLang == "CN"
					lcStatus = "服务没有运行"
				endcase
			CASE lnState = 2
				Do case
				case lcLang == "ES"
					lcStatus = "El servicio est?comenzando"
				Case lcLang == "EN"
					lcStatus = "The service is starting"
				Case lcLang == "CN"
					lcStatus = "服务正在启动"
				endcase
			CASE lnState = 3
				Do case
				case lcLang == "ES"
					lcStatus = "El servicio se est?deteniendo"
				Case lcLang == "EN"
					lcStatus = "The service is stopping"
				Case lcLang == "CN"
					lcStatus = "服务正在停止"
				endcase
			CASE lnState = 4
				Do case
				case lcLang == "ES"
					lcStatus = "El servicio se est?ejecutando"
				Case lcLang == "EN"
					lcStatus = "The service is running"
				Case lcLang == "CN"
					lcStatus = "服务已运行"
				endcase
			CASE lnState = 5
				Do case
				case lcLang == "ES"
					lcStatus = "La continuaci髇 del servicio est?pendiente"
				Case lcLang == "EN"
					lcStatus = "The service continue is pending"
				Case lcLang == "CN"
					lcStatus = "服务已挂起"
				endcase
			CASE lnState = 6
				Do case
				case lcLang == "ES"
					lcStatus = "La pausa del servicio est?pendiente"
				Case lcLang == "EN"
					lcStatus = "The service pause is pending"
				Case lcLang == "CN"
					lcStatus = "服务暂停，处于挂起状态"
				endcase
			CASE lnState = 7
				Do case
				case lcLang == "ES"
					lcStatus = "El servicio est?en pausa"
				Case lcLang == "EN"
					lcStatus = "The service is paused"
				Case lcLang == "CN"
					lcStatus = "服务已暂停"
				endcase
			OTHERWISE
				Do case
				case lcLang == "ES"
					lcStatus = "C骴igo de estado desconocido"
				Case lcLang == "EN"
					lcStatus = "Unknown status code"
				Case lcLang == "CN"
					lcStatus = "未知状态码"
				endcase
			EndCase
		
			Do case
			case lcLang == "ES"
				lcStatus = "Estado del servicio("+ALLTRIM(loProject.cName)+"):"
			Case lcLang == "EN"
				lcStatus = "Service status("+ALLTRIM(loProject.cName)+"):"
			Case lcLang == "CN"
				lcStatus = "服务状态("+ALLTRIM(loProject.cName)+"):"
			endcase
			
			Try
				Delete File (lcOutput)
			Catch to loEx
				MessageBox(loEx.message,16)
			EndTry
			Try
				Delete File (lcBatchFile)
			Catch to loEx
				MessageBox(loEx.message,16)
			EndTry
		
			loResult = CreateObject("Empty")
			AddProperty(loResult, "nCode", lnState)
			AddProperty(loResult, "cMessage", lcStatus)
		EndIf
		
		Return loResult
	ENDPROC

	PROCEDURE register
		this.ExecuteServiceAction("_6PH124M74", "Install")
	ENDPROC

	PROCEDURE start
		WAIT _screen.oHelper.oLanguage.Translate("_6RK1F5O4S") WINDOW NOWAIT
		
		this.ExecuteServiceAction("Start")
		
		Wait clear
	ENDPROC

	PROCEDURE stop
		Lparameters tnDuration
		
		WAIT _screen.oHelper.oLanguage.Translate("_6RK1F4328") WINDOW NOWAIT
		
		this.ExecuteServiceAction("Stop")
		
		If Type('tnDuration') == 'N' and tnDuration > 0
			Inkey(tnDuration)
		EndIf
		
		WAIT CLEAR
	ENDPROC

ENDDEFINE

DEFINE CLASS site AS collection 
 	*< CLASSDATA: Baseclass="collection" Timestamp="" Scale="Pixels" Uniqueid="" />

	*<DefinedPropArrayMethod>
		*m: create404page
		*m: createbaseclassfile
		*m: createmacrofile
		*m: createmainfile
		*m: downloadtemplates
		*m: getcontrollertemplate
		*m: gethtmltemplate
		*m: newprogram
		*m: newsite
		*m: newwebserver
		*m: openexamples
		*m: run		&& Occurs when an Active Document is ready to execute your application code.
		*p: _memberdata		&& XML Metadata for customizable properties
	*</DefinedPropArrayMethod>

	*<PropValue>
		Height = 23
		Name = "site"
		Width = 23
		_memberdata = <VFPData>

		</VFPData>
	*</PropValue>
	
	PROCEDURE create404page
	ENDPROC

	PROCEDURE createbaseclassfile
		Local lcBuffer as memo
		TEXT TO lcBuffer NOSHOW TEXTMERGE
		&& -------------------------------------------------------- &&
		&& <(_screen.oHelper.oLanguage.Translate("_6RH1ALSQD"))>
		&& -------------------------------------------------------- &&
		Define Class Base as Session
			oRequest 	= .NULL.
			oResponse 	= .NULL.
			oJson 		= .NULL.
			oFoxServer 	= .null.
			oHelper		= .null.
			nLastID	 	= 0
			cMethod		= ""
			cEnvProg	= ""
			cAllowedOrigins = "*"
			cJWTPwd		= ""
			oJWT		= .null.
			cURL		= ""
			bHandleURL  = .F.
			
			Procedure LoadJsonFox
				If Type('_screen.json') == 'U' or Type('_screen.json.version') == 'U'
					Do LocFile("JSONFox", "app")
					_screen.json.lShowErrors = .F.
				EndIf
			EndProc
		
			Procedure ParseJsonBodyFromRequest
				this.LoadJsonFox()
				this.oJson = _Screen.json.parse(This.oRequest.GetBody())
			EndProc
		
			Procedure TableToJson(tcCursor, tbCurrentRow) as memo
				this.LoadJsonFox()
				Local lcResult, i
				lcResult = '['
				i = 0
				Select (tcCursor)
				If tbCurrentRow
					Scatter memo name loRow
					lcResult = lcResult + _screen.json.encode(loRow, "", .t., .t.)
				else
					Scan
						Scatter memo name loRow
						i = i + 1
						If i > 1
							lcResult = lcResult + ','
						EndIf
						lcResult = lcResult + _screen.json.encode(loRow, "", .t., .t.)
					EndScan
				EndIf
				lcResult = lcResult + ']'
		
				Return lcResult
			EndProc
		
			Function MethodExists(tcMethod as String) as Boolean
				Return PemStatus(this, tcMethod, 5) and PemStatus(this, tcMethod, 3) == 'Method'
			EndFunc
		
			Function MasterToJSON(tcMaster as String, tcDetail as String, tcExpr as String, tcDetailAttribute as String, tnSessionID as Integer)
				this.LoadJsonFox()
				Return _screen.json.masterDetailToJson(tcMaster, tcDetail, tcExpr, tcDetailAttribute, tnSessionID)
			EndFunc
		
			Function GetLastID as Integer
				Return this.nLastID
			EndFunc
		
			Procedure SetLastID(tnID as Integer)
				this.nLastID = tnID
			endproc
		
			Function GetMethod as String
				Return this.cMethod
			EndFunc
		
			procedure SetMethod(tcMethod as String)
				this.cMethod = tcMethod
			EndProc
		
			Procedure SetURL(tcURL as String)
				this.cURL = tcURL
			EndProc
			
			Function GetURL as String
				Return this.cURL
			EndFunc
		
			Procedure CallMethod(tcMethod, p1, p2, p3, p4, p5, p6, p7, p8, p9, p10)
			
				Local lcMacro, i
				If Pcount() > 1
					lcMacro = tcMethod + '('
					For i=2 to Pcount()
						If i > 2
							lcMacro = lcMacro + ','
						EndIf
						lcMacro = lcMacro + 'p' + Alltrim(Str(i-1))
					EndFor
					lcMacro = lcMacro + ')'
				Else
					lcMacro = tcMethod + '()'
				EndIf
				Evaluate(Textmerge('this.<<lcMacro>>'))
			endproc
		
			function GetBody
				return this.oJson
			EndFunc
		
			Function ValidateToken
				Local lbValid
				lbValid = .F.
				If This.oRequest.HeaderExists('Authorization')
					Local lcToken
					lcToken = This.oRequest.HeaderGet('Authorization')
					this.oJWT = this.oHelper.ParseJWT(lcToken, this.cJWTPwd)
					If !IsNull(this.oJWT) and this.oJWT.valid
						lbValid = .T.
					Else
						this.oResponse.SetStatusCode(401)
						this.oResponse.SetContent(this.oHelper.getJsonResponse('error', .null., 'El token de autenticaci髇 es inv醠ido'))
					EndIf
				Else
					this.oResponse.SetStatusCode(401)
					this.oResponse.SetContent(this.oHelper.getJsonResponse('error', .null., 'Se requiere un token de autenticaci髇'))
				EndIf
				Return lbValid
			EndFunc
		
			Function format(tcString,p2,p3,p4,p5,p6,p7,p8,p9,p10,p11)
				Local i, lcResult, lcEval, lcPattern
				lcResult = tcString
				For i=2 to Pcount()
					lcPattern 	= '{' + Alltrim(Str(i-1)) + '}'
					lcEval 		= Alltrim(Transform(Evaluate("p" + Alltrim(Str(i)))))
					lcResult 	= Strtran(lcResult, lcPattern, lcEval)
				EndFor
				Return lcResult
			EndFunc
		EndDefine
		ENDTEXT
		Return lcBuffer
	ENDPROC

	PROCEDURE createmacrofile
		LOCAL lcBuffer AS MEMO
		** Create the Macros.h file
		TEXT TO lcBuffer NOSHOW TEXTMERGE
		&& -------------------------------------------------------- &&
		&& <(_screen.oHelper.oLanguage.Translate("_6QE11M0DS"))>
		&& -------------------------------------------------------- &&
		#define CRLF				Chr(13)+Chr(10)
		#define QUERY				TEXT TO this.oHelper.cQuery NOSHOW PRETEXT 15 TEXTMERGE
		#define ENDQUERY			ENDTEXT
		#define HELPER				this.oHelper
		#define	WRITELOG			this.oHelper.Log
		#define REQUEST				this.oRequest
		#define ROUTE				this.oFoxServer.addRoute
		#define CONTROLLER			this.oFoxServer.addController
		#define BODY				this.oJson
		#define _TRY				try
		#define _CATCH				catch to loEx
		#define _ENDTRY				endtry
		#define _FINALLY			finally
		#define STATUS_CODE			this.oResponse.SetStatusCode
		#define CONTENT_TYPE		this.oResponse.SetContentType
		#define CONTENT				this.oResponse.SetContent
		#define GET_HEADER			this.oRequest.GetHeader
		#define HTML_ENCODE			HELPER.EscapeCharsToJSON
		#define _ERRORMSG			HTML_ENCODE(HELPER.GetExceptionMessage(loEx))
		#define _ERRORSQL			HTML_ENCODE(HELPER.GetSQLError())
		#define GET_METHOD			this.oRequest.GetMethod
		#Define GET_BODY			This.GetBody
		#Define GET_BODYSTR			This.oRequest.GetBody
		#define SET_STRCON			HELPER.SetConnectionString
		#define CONNECT				HELPER.openConnection
		#define DISCONNECT			HELPER.closeConnection
		#define OBJ_QUERY			HELPER.executeQuery
		#define EXEC_QUERY			HELPER.executeNonQuery
		#define JSON_QUERY			HELPER.queryToJSON
		#define GET_JSON_RESPONSE 	HELPER.getJsonResponse
		#define URL_PARAM			this.oRequest.GetURLParam
		#Define SET_LOCATION		This.oResponse.SetLocation
		#Define HEADER_EXISTS		This.oRequest.HeaderExists
		#Define HEADER_GET			This.oRequest.HeaderGet
		#Define QPARAM_EXISTS		This.oRequest.QueryParamExists
		#Define QPARAM_GET			This.oRequest.QueryParamGet
		#Define MULTIPART_EXISTS	This.oRequest.MultiPartExists
		#Define MULTIPART_GET		This.oRequest.MultiPartGet
		#Define DTOUNX				HELPER.DateToUnix
		#Define UNXTOD				HELPER.UnixToDate
		#Define NEW_JWT				HELPER.CreateJwt
		#Define GET_JWT				HELPER.ParseJwt
		#Define MIME_FILE			this.oResponse.SetFileName
		#Define MIME_ENCODE			HELPER.EncodeMIMEFile
		#Define PARSE_HTML			HELPER.ParseHTML
		#Define PRINT_PDF			HELPER.frx2pdf
		#Define CURSORTOJSON		This.TableToJson
		#Define	SET_LASTID			This.SetLastID
		#Define VALID_JWT			This.ValidateToken
		#Define FMT					This.Format
		#Define MASTERDETAILTOJSON	This.MasterToJSON
		#Define SET_DEBUG			HELPER.SetDebugMode
		#Define NEWGUID				HELPER.GetNewGuid
		#Define GET_URL				This.GetURL
		#Define _HOME 				ADDBS(FullPath(Curdir()))
		EndText
		
		RETURN lcBuffer
	ENDPROC

	PROCEDURE createmainfile
		Lparameters tcClassName, tcHost, tnPort
		
		Local lcBuffer as memo
		TEXT TO lcBuffer NOSHOW TEXTMERGE
		&& -------------------------------------------------------- &&
		* <(_screen.oHelper.oLanguage.Translate("_6Q80XDL46"))>
		&& -------------------------------------------------------- &&
		#include "src\header\macros.h"
		Set Procedure To "src\prg\BaseClass.prg" Additive
		DEFINE CLASS <(tcClassName)> AS Base OLEPUBLIC
			cHost 		= "<(tcHost)>"
			nPort 		= <(tnPort)>
			cAPIPath	= ""
			cLang		= "<(Upper(_Screen.oHelper.oLanguage.GetLanguage()))>"
			* <(_screen.oHelper.oLanguage.Translate("_6T4151ULM"))>
			bHandleURL  = .F.
		
			PROCEDURE AddControllers
				* <(_screen.oHelper.oLanguage.Translate("_6Q80XFXE0"))>
				ROUTE("/hello", "pHello")
				* <(_screen.oHelper.oLanguage.Translate("_6Q91CY4IV"))>
		*!*			CONTROLLER("/productos", CREATEOBJECT("ProductosController"))
			ENDPROC
		
			* <(_screen.oHelper.oLanguage.Translate("_6Q80XGUMG"))>
			PROCEDURE pHello
				CONTENT_TYPE("application/json")
				CONTENT(GET_JSON_RESPONSE("<(_screen.oHelper.oLanguage.Translate('_6RX1CQVBU'))>", .null., "VFP Rocks!"))
			ENDPROC
		
			* <(_screen.oHelper.oLanguage.Translate("_6T4150E24"))>
			PROCEDURE URLDispatch(tcURL)
				
			ENDPROC
		EndDefine
		ENDTEXT
		Return lcBuffer
	ENDPROC

	PROCEDURE downloadtemplates
	ENDPROC

	PROCEDURE getcontrollertemplate
		Local lcBuffer As Memo
		
		TEXT to lcBuffer noshow textmerge
		&& -------------------------------------------------------- &&
		&& <<_screen.oHelper.oLanguage.Translate("_6RX1F7GOV")>>
		&& -------------------------------------------------------- &&
		#INCLUDE "..\header\macros.h"
		SET PROCEDURE TO "BaseClass.prg" ADDITIVE
		DEFINE CLASS MyClassController AS Base
			* <<_screen.oHelper.oLanguage.Translate("_6T4151ULM")>>
			bHandleURL = .F.
		
			* <<_screen.oHelper.oLanguage.Translate("_6T4150E24")>>
			PROCEDURE URLDispatch(tcURL)
				*<<_screen.oHelper.oLanguage.Translate("_6RX1F9WGS")>>
			ENDPROC
		
			FUNCTION BeforeExecute as Boolean
				*SET DELETED ON
				Return .t.
			ENDFUNC
		
			PROCEDURE AfterExecute
				*<<_screen.oHelper.oLanguage.Translate("_6RX1F9WGS")>>
			ENDPROC
		
			PROCEDURE GetAll(toQueryParameters)
				_TRY
					*<<_screen.oHelper.oLanguage.Translate("_6RX1F9WGS")>>
				_CATCH
					STATUS_CODE(500)
					CONTENT(GET_JSON_RESPONSE('error', .null., _ERRORMSG))
				_ENDTRY	
			ENDPROC
		
			PROCEDURE GetOne(tvIdentifier)
				_TRY
					*<<_screen.oHelper.oLanguage.Translate("_6RX1F9WGS")>>
				_CATCH
					STATUS_CODE(500)
					CONTENT(GET_JSON_RESPONSE('error', .null., _ERRORMSG))
				_ENDTRY
			ENDPROC
		
			PROCEDURE Create(toBody)
				_TRY
					*<<_screen.oHelper.oLanguage.Translate("_6RX1F9WGS")>>
				_CATCH
					STATUS_CODE(500)
					CONTENT(GET_JSON_RESPONSE('error', .null., _ERRORMSG))
				_ENDTRY
			ENDPROC
		
			PROCEDURE Update(tvIdentifier, toBody)
				_TRY
					*<<_screen.oHelper.oLanguage.Translate("_6RX1F9WGS")>>
				_CATCH
					STATUS_CODE(500)
					CONTENT(GET_JSON_RESPONSE('error', .null., _ERRORMSG))
				_ENDTRY
			ENDPROC
		
			PROCEDURE Delete(tvIdentifier)
				_TRY
					*<<_screen.oHelper.oLanguage.Translate("_6RX1F9WGS")>>
				_CATCH
					STATUS_CODE(500)
					CONTENT(GET_JSON_RESPONSE('error', .null., _ERRORMSG))
				_ENDTRY
			ENDPROC
		ENDDEFINE
		EndText
		
		_cliptext = lcBuffer
		
		*MessageBox(_screen.oHelper.oLanguage.Translate("_6RY002OYR"))
	ENDPROC

	PROCEDURE gethtmltemplate
		Local lcBuffer As Memo
		
		TEXT to lcBuffer noshow textmerge
		<!DOCTYPE html>
		<html>
		    <head>
		        <meta name="viewport" content="width=device-width, initial-scale=1.0">
		        <link rel="stylesheet" href="https://cdn.jsdelivr.net/gh/yegor256/tacit@gh-pages/tacit-css.min.css">
		        <title>HTML Template</title>
		    </head>
		    <body>
		        <h1>HTML Template</h1>
		    </body>
		</html>
		EndText
		
		_cliptext = lcBuffer
	ENDPROC

	PROCEDURE newprogram
	ENDPROC

	PROCEDURE newsite
		RETURN this.newWebServer()
		*!*	LOCAL loForm, loSite, lcRootFolder, lcCurDir
		
		*!*	loForm = CREATEOBJECT("frmNewSite")
		*!*	loForm.SHOW(1)
		*!*	loSite = loForm.oSite
		
		*!*	RELEASE loForm
		
		*!*	IF EMPTY(loSite.cName)
		*!*		RETURN
		*!*	ENDIF
		
		*!*	* Create the root folder
		*!*	lcRootFolder = ALLTRIM(loSite.cDirectory)
		*!*	IF NOT DIRECTORY(lcRootFolder)
		*!*		MKDIR &lcRootFolder
		*!*	ENDIF
		*!*	lcCurDir = FULLPATH(CURDIR())
		*!*	CD (lcRootFolder)
		*!*	_screen.oHelper.oSystem.DownloadFilesFromManifest("https://raw.githubusercontent.com/Irwin1985/avfp-template/main/site-setup.manifest", "site-setup.manifest")
		
		*!*	* Restore the current directory
		*!*	CD (lcCurDir)
		*!*	LOCAL loIISManager
		*!*	IF NOT _SCREEN.oBridge.LoadAssembly(_screen.oMagicMenu.cMainDir + "libs\IISManager.dll")
		*!*		lcMsg = _SCREEN.oHelper.oLanguage.Translate("_6P51DMRAR")
		*!*		lcMsg = STRTRAN(lcMsg, "{assembly}", FULLPATH("IISManager.dll"))
		*!*		MESSAGEBOX(lcMsg, 16)
		*!*		RETURN
		*!*	ENDIF
		
		*!*	loIISManager = _SCREEN.oBridge.CreateInstance("IISManager.Manager")
		*!*	IF TYPE('loIISManager') <> 'O'
		*!*		lcMsg = _SCREEN.oHelper.oLanguage.Translate("_6P51DFEA2")
		*!*		lcMsg = STRTRAN(lcMsg, "{instance}", "IISManager.Manager")
		*!*		MESSAGEBOX(lcMsg, 16)
		*!*		RETURN
		*!*	ENDIF
		
		*!*	** Create the site
		*!*	IF NOT loIISManager.NewSite(ALLTRIM(loSite.cName), ALLTRIM(loSite.cHost), ALLTRIM(loSite.cDirectory), loSite.nPort)
		*!*		MESSAGEBOX(_SCREEN.oHelper.oLanguage.Translate("_6P51DW7IF"), 16)
		*!*		RETURN
		*!*	ENDIF
		
		*!*	** Register ActiveVFP.dll
		*!*	LOCAL lcActiveVFPLocation
		*!*	lcActiveVFPLocation = ADDBS(ALLTRIM(loSite.cDirectory)) + 'ActiveVFP.dll'
		*!*	IF FILE(lcActiveVFPLocation)
		*!*		_SCREEN.oHelper.oSystem.RegisterServer(lcActiveVFPLocation)
		*!*	ELSE
		*!*		MESSAGEBOX(_SCREEN.oHelper.oLanguage.Translate("_6P81AZT2X"), 16)
		*!*	ENDIF
		
		*!*	** Create new project.json
		*!*	*!*	LOCAL loProject, lcPrjRoot
		*!*	*!*	lcPrjRoot = STRTRAN(ADDBS(lcRootFolder), '\', '\\')
		*!*	*!*	loProject = CREATEOBJECT("Empty")
		*!*	*!*	ADDPROPERTY(loProject, "cName", ALLTRIM(loSite.cName))
		*!*	*!*	ADDPROPERTY(loProject, "cType", "WEBAPP")
		*!*	*!*	ADDPROPERTY(loProject, "cDirectory", lcPrjRoot)
		*!*	*!*	ADDPROPERTY(loProject, "cMain", lcPrjRoot+"Main.prg")
		*!*	*!*	ADDPROPERTY(loProject, "oExt", .NULL.)
		*!*	*!*	ADDPROPERTY(loProject, "oIgnored", .NULL.)
		*!*	*!*	ADDPROPERTY(loProject, "oExcluded", .NULL.)
		*!*	*!*	_screen.oHelper.oProject.newProject(loProject)
		
		*!*	** Show the success message
		*!*	LOCAL lcURISite
		*!*	lcMsg = _SCREEN.oHelper.oLanguage.Translate("_6P51E8RDF")
		*!*	lcURISite = "http://" + ALLTRIM(loSite.cHost) + ":" +  ALLTRIM(STR(loSite.nPort)) + "/default.avfp"
		*!*	_CLIPTEXT = lcURISite
		*!*	lcMsg = STRTRAN(lcMsg, "{siteName}", lcURISite)
		*!*	MESSAGEBOX(lcMsg, 64)
	ENDPROC

	PROCEDURE newwebserver
		LOCAL loForm, loService, lcRootFolder, lcCurDir, lcMsg, lcDistFolder, lcPublicFolder, ;
		lcImagesFolder, lcScriptsFolder, lcStylesFolder, lcHTMLFolder, lcManifestURL, lcManifestName, lcSafAct, lcFolder
		
		loForm = CREATEOBJECT("frmNewSite")
		loForm.SHOW(1)
		loService = loForm.oSite
		
		RELEASE loForm
		
		IF EMPTY(loService.cName)
			RETURN
		ENDIF
		
		lcSafAct = SET("Safety")
		SET SAFETY OFF
		
		* Create the root folder
		lcRootFolder = ADDBS(ALLTRIM(loService.cDirectory))
		IF !DIRECTORY(lcRootFolder)
			*!* fixed by xinjie  2024.01.27
			MKDIR '&lcRootFolder'
			*!* MKDIR &lcRootFolder
		ENDIF
		
		* Distribution folder
		lcDistFolder = lcRootFolder + 'dist\'
		IF !DIRECTORY(lcDistFolder)
			*!* fixed by xinjie  2024.01.27
			MKDIR '&lcDistFolder'
			*!* MKDIR &lcDistFolder
		ENDIF
		
		* Public folder (for web development)
		lcPublicFolder = lcRootFolder + 'dist\public'
		IF !DIRECTORY(lcPublicFolder)
			*!* fixed by xinjie  2024.01.27
			MKDIR '&lcPublicFolder'
			*!* MKDIR &lcPublicFolder
		EndIf
		
		* Images folder (for web development)
		lcImagesFolder = lcRootFolder + 'dist\public\images'
		IF !DIRECTORY(lcImagesFolder)
			*!* fixed by xinjie  2024.01.27
			MKDIR '&lcImagesFolder'
			*!* MKDIR &lcImagesFolder
		EndIf
		
		* Scripts folder (for web development)
		lcScriptsFolder = lcRootFolder + 'dist\public\scripts'
		IF !DIRECTORY(lcScriptsFolder)
			*!* fixed by xinjie  2024.01.27
			MKDIR '&lcScriptsFolder'
			*!* MKDIR &lcScriptsFolder
		EndIf
		
		* Styles folder (for web development)
		lcStylesFolder = lcRootFolder + 'dist\public\styles'
		IF !DIRECTORY(lcStylesFolder)
			*!* fixed by xinjie  2024.01.27
			 MKDIR '&lcStylesFolder'
			*!* MKDIR &lcStylesFolder
		EndIf
		
		* HTML folder (for web development)
		lcHTMLFolder = lcRootFolder + 'dist\public\html'
		IF !DIRECTORY(lcHTMLFolder)
			*!* fixed by xinjie  2024.01.27
			MKDIR '&lcHTMLFolder'
			*!* MKDIR &lcHTMLFolder
		ENDIF
		
		* src folder
		lcFolder = lcRootFolder + 'src'
		IF !DIRECTORY(lcFolder)
			*!* fixed by xinjie  2024.01.27
			MKDIR '&lcFolder'
			*!* MKDIR &lcFolder
		EndIf
		
		* header folder
		lcFolder = lcRootFolder + 'src\header'
		IF !DIRECTORY(lcFolder)
			*!* fixed by xinjie  2024.01.27
			MKDIR '&lcFolder'
			*!*MKDIR &lcFolder
		EndIf
		
		* prg folder
		lcFolder = lcRootFolder + 'src\prg'
		IF !DIRECTORY(lcFolder)
			*!* fixed by xinjie  2024.01.27
			MKDIR '&lcFolder'
			*!* MKDIR &lcFolder
		EndIf
		
		* vcx folder
		lcFolder = lcRootFolder + 'src\vcx'
		IF !DIRECTORY(lcFolder)
			*!* fixed by xinjie  2024.01.27
			MKDIR '&lcFolder'
			*!* MKDIR &lcFolder
		EndIf
		
		lcCurDir = FULLPATH(CURDIR())
		* Change Directory to the site root
		*CD (lcDistFolder)
		
		Local lcDomain
		*!* fixed by xinjie  2024.01.26		
		*!* For countries where the network is so tightly controlled that GitHub cannot be accessed properly
		lcDomain = "https://github.com"					&& After testing, this is doable. However, verification still needs to be done in a normal network environment.
		If InList(Upper(_Screen.oHelper.oLanguage.GetLanguage()), "CN")
			lcDomain = FileToStr("domain4cn.txt")		&& Prevent addresses from being blocked from access without warning
		EndIf
		
		* Change Directory to the site root
		CD (lcDistFolder)
		
		*!*	lcDomain = "https://raw.githubusercontent.com"
		*!*	If Upper(_Screen.oHelper.oLanguage.GetLanguage()) == "CN"
		*!*		lcDomain = "https://hub.nuaa.cf"
		*!*	EndIf
		
		IF _screen.oMagicMenu.bUseNative
			CD (lcRootFolder)
			*!* fixed by xinjie  2024.01.26		In order to match the variable lcDomain
			lcManifestURL  = lcDomain + '/VFPLegacy/MagicMenu/raw/master/native/fox-server.manifest'
			* lcManifestURL  = lcDomain + '/VFPLegacy/MagicMenu/master/native/fox-server.manifest'
			lcManifestName = 'fox-server.manifest'
		ELSE
			*!* fixed by xinjie  2024.01.26		In order to match the variable lcDomain
			lcManifestURL  = lcDomain + '/Irwin1985/foxserver/raw/main/setup.manifest'
			* lcManifestURL  = lcDomain + '/Irwin1985/foxserver/main/setup.manifest'
			lcManifestName = 'setup.manifest'
		ENDIF
		
		*!* fixed by xinjie  2024.01.28
		llReturn = _screen.oHelper.oSystem.DownloadFilesFromManifest(lcManifestURL, lcManifestName)
		
		If llReturn = .F.
			Return .F.
		EndIf 
		*!* _screen.oHelper.oSystem.DownloadFilesFromManifest(lcManifestURL, lcManifestName)
		
		* Restore the current directory
		CD (lcCurDir)
		
		** Register FoxServer.dll
		LOCAL lcFoxServerLocation
		lcFoxServerLocation = lcDistFolder + 'FoxServer.dll'
		IF FILE(lcFoxServerLocation)
			_SCREEN.oHelper.oSystem.RegisterServer(lcFoxServerLocation)
		ELSE
			lcMsg = STRTRAN(_SCREEN.oHelper.oLanguage.Translate("_6P81AZT2X"), "{FILENAME}", "FoxServer.dll")
			MESSAGEBOX(lcMsg, 16)
		ENDIF
		
		** Rename FoxServer.exe with the project name
		LOCAL lcWrapper, lcService
		lcWrapper = lcDistFolder + 'FoxServer.exe'
		lcService = lcDistFolder + ALLTRIM(loService.cName) + '.exe'
		IF NOT FILE(lcWrapper)
			lcMsg = _SCREEN.oHelper.oLanguage.Translate("_6PA1A9Y9J")
			lcMsg = STRTRAN(lcMsg, "{cFileName}", lcWrapper)
			MESSAGEBOX(lcMsg, 16)
			SET SAFETY &lcSafAct
			RETURN
		ENDIF
		lcScript = "RENAME '" + lcWrapper + "' TO '" + lcService + "'"
		&lcScript
		
		LOCAL lcBuffer, lcMainFilePath, lcClassName, lcServiceName, lcRegisterFile, lcConfigFilePath, lcXMLFilel, lcWinSWFile, lcJsonFile, lcSrcFile
		lcClassName 	= 'BaseController' + LOWER(SYS(2015))
		lcMainFilePath 	= lcRootFolder + 'Main.prg'
		
		** Distribution folder
		lcConfigFilePath = lcDistFolder + 'config.kvp'
		lcRegisterFile 	 = lcDistFolder + 'Install.bat'
		lcStartFile 	 = lcDistFolder + 'start.bat'
		lcStopFile 		 = lcDistFolder + 'stop.bat'
		lcUnistFile 	 = lcDistFolder + 'uninst.bat'
		lcServiceName 	 = ALLTRIM(loService.cName)
		lcXMLFile 		 = lcDistFolder + lcServiceName + '.xml'
		lcWinSWFile 	 = lcDistFolder + 'WinSW.exe'
		lcJsonFile		 = lcDistFolder + 'JsonFox.app'
		lcDistMain		 = lcDistFolder + 'Main.prg'
		
		** Create the XML config file
		TEXT TO lcBuffer NOSHOW TEXTMERGE
		<service>
			<id><<lcServiceName>></id>
			<name><<lcServiceName>></name>
			<description><<_SCREEN.oHelper.oLanguage.Translate("_6PA17SL2A")>></description>
			<executable><<lcDistFolder + lcServiceName + '.exe'>></executable>	
		</service>
		ENDTEXT
		STRTOFILE(lcBuffer, lcXMLFile)
		
		** Create the batch file for registering the service
		TEXT TO lcBuffer NOSHOW TEXTMERGE
		"<<lcWinSWFile>>" install "<<lcXMLFile>>"
		ENDTEXT
		STRTOFILE(lcBuffer, lcRegisterFile)
		
		** Create the start batch file
		TEXT TO lcBuffer NOSHOW TEXTMERGE
		"<<lcWinSWFile>>" start "<<lcXMLFile>>"
		ENDTEXT
		STRTOFILE(lcBuffer, lcStartFile)
		
		** Create the stop batch file
		TEXT TO lcBuffer NOSHOW TEXTMERGE
		"<<lcWinSWFile>>" stop "<<lcXMLFile>>"
		ENDTEXT
		STRTOFILE(lcBuffer, lcStopFile)
		
		** Create the stop batch file
		TEXT TO lcBuffer NOSHOW TEXTMERGE
		"<<lcWinSWFile>>" uninstall "<<lcXMLFile>>"
		ENDTEXT
		STRTOFILE(lcBuffer, lcUnistFile)
		
		IF !_screen.oMagicMenu.bUseNative
			Set Textmerge delimiters to "<(", ")>"
			** Create the Main.prg file
			TEXT TO lcBuffer NOSHOW TEXTMERGE
			<(this.createMacroFile())>
			&& -------------------------------------------------------- &&
			* <(_screen.oHelper.oLanguage.Translate("_6Q80XDL46"))>
			&& -------------------------------------------------------- &&
			DEFINE CLASS <(lcClassName)> AS Base OLEPUBLIC
				cHost 		= "<(ALLTRIM(loService.cHost))>"
				nPort 		= <(loService.nPort)>
				oRequest 	= .NULL.
				oResponse 	= .NULL.
				oJson 		= .NULL.
				oFoxServer 	= .null.
				oHelper		= .null.
				cAPIPath	= ""
				cLang		= "<(Upper(_Screen.oHelper.oLanguage.GetLanguage()))>"
				
				PROCEDURE AddControllers
					* <(_screen.oHelper.oLanguage.Translate("_6Q80XFXE0"))>
					ROUTE("/hello", "pHello")
					* <(_screen.oHelper.oLanguage.Translate("_6Q91CY4IV"))>
			*!*			CONTROLLER("/productos", CREATEOBJECT("ProductosController"))
				ENDPROC
				
				* <(_screen.oHelper.oLanguage.Translate("_6Q80XGUMG"))>
				PROCEDURE pHello
					CONTENT_TYPE("application/json")
					CONTENT(GET_JSON_RESPONSE("correcta", .null., "VFP Rocks!"))
				ENDPROC
		
				*----------------------------------------------------------*
				** HELPER METHODS
				*----------------------------------------------------------*
				Procedure ParseJsonBodyFromRequest
					this.LoadJsonFox()
					this.oJson = _Screen.json.parse(GET_BODYSTR())
				EndProc
		
			ENDDEFINE
			<(this.createBaseClassFile())>
			ENDTEXT
			STRTOFILE(lcBuffer, lcMainFilePath)
			Set Textmerge delimiters to
		Else
			Set Textmerge delimiters to "<(", ")>"
			lcBuffer = this.createMacroFile()
			STRTOFILE(lcBuffer, lcRootFolder + 'src\header\macros.h')
			
			lcBuffer = this.createMainFile(lcClassName, loService.cHost, loService.nPort)
			StrToFile(lcBuffer, lcRootFolder + 'Main.prg')	
			
			lcBuffer = this.createBaseClassFile()
			STRTOFILE(lcBuffer, lcRootFolder + 'src\prg\BaseClass.prg')
			
			Set Textmerge delimiters to
		ENDIF
		
		** Create the config file
		TEXT TO lcBuffer NOSHOW TEXTMERGE
		progid = <<ALLTRIM(loService.cName)>>.<<ALLTRIM(lcClassName)>>
		ENDTEXT
		STRTOFILE(lcBuffer, lcConfigFilePath)
		
		* Restore the current directory
		CD (lcCurDir)
		
		** Create new project
		LOCAL loProject, lcPrjRoot
		lcPrjRoot = STRTRAN(ADDBS(lcRootFolder), '\', '\\')
		loProject = CREATEOBJECT("Empty")
		ADDPROPERTY(loProject, "cName", ALLTRIM(loService.cName))
		ADDPROPERTY(loProject, "cType", "WEBAPP")
		ADDPROPERTY(loProject, "cDirectory", lcPrjRoot)
		ADDPROPERTY(loProject, "cMain", lcPrjRoot+"Main.prg")
		ADDPROPERTY(loProject, "oExt", .NULL.)
		ADDPROPERTY(loProject, "oIgnored", .NULL.)
		ADDPROPERTY(loProject, "oExcluded", CREATEOBJECT("Collection"))
		loProject.oExcluded.Add(lcService)
		loProject.oExcluded.Add(lcWinSWFile)
		loProject.oExcluded.Add(lcJsonFile)
		loProject.oExcluded.Add(Addbs(lcPublicFolder) + "index.html")
		loProject.oExcluded.Add(Addbs(lcPublicFolder) + "404.html")
		
		** Register the service
		WAIT _screen.oHelper.oLanguage.Translate("_6PH124M74") WINDOW NOWAIT
		_SCREEN.oHelper.oSystem.OpenApplication(lcRegisterFile, "", 2)
		WAIT CLEAR
		*----------------------
		
		_screen.oHelper.oProject.newProject(loProject)
		
		SET SAFETY &lcSafAct
	ENDPROC

	PROCEDURE openexamples
		Local loExamples, lcCurDir, lcSamplesFolder, lcSafAct, lcManifestURL, lcManifestName, lcZipFileURL, loSamples, loSample, lcTitle
		
		lcCurDir 		= FULLPATH(CURDIR())
		*lcSamplesFolder = Addbs(Home(1)) + 'MagicMenuSamples\'
		lcSamplesFolder = 'c:\MagicMenuSamples\'
		lcSafAct 		= SET("Safety")
		loSamples		= CreateObject("Collection")
		
		SET SAFETY OFF
		
		* Check the samples folder
		IF !DIRECTORY(lcSamplesFolder)
			lcMacro = 'MKDIR "' + lcSamplesFolder + '"'
			&lcMacro
		ENDIF
		
		*!*	* Change Directory to the samples folder
		*!*	CD (lcSamplesFolder)
		
		Local lcDomain
		*!* fixed by xinjie  2024.01.26		
		*!* For countries where the network is so tightly controlled that GitHub cannot be accessed properly
		lcDomain = "https://github.com"					&& After testing, this is doable. However, verification still needs to be done in a normal network environment.
		If InList(Upper(_Screen.oHelper.oLanguage.GetLanguage()), "CN")
			lcDomain = FileToStr("domain4cn.txt")		&& Prevent addresses from being blocked from access without warning
		EndIf
		
		*!*	lcDomain = "https://raw.githubusercontent.com"
		*!*	If Upper(_Screen.oHelper.oLanguage.GetLanguage()) == "CN"
		*!*		lcDomain = "https://hub.nuaa.cf"
		*!*	EndIf
		
		*!* fixed by xinjie  2024.01.26		In order to match the variable lcDomain
		lcManifestURL  = lcDomain+'/VFPLegacy/FoxServer/raw/main/examples.manifest'
		* lcManifestURL  = lcDomain+'/VFPLegacy/FoxServer/main/examples.manifest'
		lcManifestName = 'examples.manifest'
		
		* Change Directory to the samples folder
		CD (lcSamplesFolder)
		
		*********************************************************************************************
		
		LOCAL loHttp, lnHandle, lnStartTime, lcMsg, lcFolderName
		loHttp = _SCREEN.oBridge.CreateInstance("System.Net.WebClient")
		IF TYPE('loHttp') <> 'O'
			lcMsg = _SCREEN.oHelper.oLanguage.Translate("_6P51DFEA2")
			lcMsg = STRTRAN(lcMsg, "{instance}", "System.Net.WebClient")
			MESSAGEBOX(lcMsg, 16)
			RETURN
		ENDIF
		
		** Delete the .manifest file (if exists)
		IF FILE(lcManifestName)
			TRY
				DELETE FILE (lcManifestName)
			CATCH
			ENDTRY
		ENDIF
		
		* Download the .manifest file
		*!* fixed by xinjie  2024.01.30
		llOK = .T.
		Try
			loHttp.DownloadFile(lcManifestURL, lcManifestName)
		Catch to loException
			Do Case
				Case Version(3) = [86]
					lcErrorMessage = [网络访问出现问题:] + Chr(13) + ;
									 loException.message + Chr(13) + ;
									 [点击“确定”按钮后输入可用的 github 镜像网络域名，例如：] + Chr(13) + ;
									 [https://github.com]
			
					MessageBox(lcErrorMessage, 64, [Info])
			
					lcNewDomain = Alltrim(InputBox([请输入新的 github 镜像地址：], [切换域名], [https://github.com]))
					
					lcManifestURL = Strtran(lcManifestURL, lcDomain, lcNewDomain)
					
					Try 
						loHttp.DownloadFile(lcManifestURL, lcManifestName)
					Catch 
						llOK = .F.
						MessageBox([无法正常访问。请修改 domain4cn.txt 文件内容后重试！], 64, [Info])
					EndTry
		
			EndCase 
		EndTry
		*loHttp.DownloadFile(lcManifestURL, lcManifestName)
		IF !FILE(lcManifestName)
			lcMsg = _SCREEN.oHelper.oLanguage.Translate("_6P519EMNA")
			lcMsg = STRTRAN(lcMsg, "{cFileName}", JUSTFNAME(lcManifestName))
			MESSAGEBOX(lcMsg, 48)
			RETURN
		ENDIF
		
		** Open the .manifest file
		lnHandle = FOPEN(lcManifestName)
		IF lnHandle <= 0
			MESSAGEBOX(_SCREEN.oHelper.oLanguage.Translate("_6P51AOFXH"), 48)
			RETURN
		ENDIF
		
		lnStartTime = SECONDS()
		WAIT _SCREEN.oHelper.oLanguage.Translate("_6P519I2WS") WINDOW NOWAIT
		DO WHILE !FEOF(lnHandle)
			* Open the manifest file and start downloading files
			lcMsg = _SCREEN.oHelper.oLanguage.Translate("_6P6009RZM")
			lcMsg = STRTRAN(lcMsg, "{cTime}", TRANSFORM(INT(SECONDS()-lnStartTime)))
			WAIT lcMsg WINDOW NOWAIT
		*!*		IF LASTKEY() = 27
		*!*			WAIT _SCREEN.oHelper.oLanguage.Translate("_6P51CHJQE") WINDOW NOWAIT
		*!*			EXIT
		*!*		ENDIF
			lcLine 		  = FGETS(lnHandle)
			lcZipFileURL  = ALLTRIM(GETWORDNUM(lcLine, 2, ';'))
		
			*!* Add by xinjie  2024.01.26
			If InList(Upper(_Screen.oHelper.oLanguage.GetLanguage()), "CN")
				lcZipFileURL = lcDomain + Right(lcZipFileURL, Len(lcZipFileURL) - 18)
			EndIf 
			
			lcTitle 	  = ALLTRIM(GETWORDNUM(lcLine, 1, ';'))
			lcFileName	  = JustFname(lcZipFileURL)
			* lcFolderName  = juststem(lcZipFileURL)
			*!* fixed by xinjie  2024.01.26
			lcFolderName  = Strtran(juststem(lcZipFileURL), [-], [])
		
			loSample	  = CreateObject("Empty")
			AddProperty(loSample, "cTitle", lcTitle)
			AddProperty(loSample, "cURL", lcZipFileURL)
			AddProperty(loSample, "cFileName", lcFileName)
			AddProperty(loSample, "cFolderName", lcFolderName)
			AddProperty(loSample, "bDownloaded", Directory(Addbs(lcSamplesFolder) + lcFolderName))
		
			*!* add by xinjie  2024.01.30
			*!* If there is an abnormality in the network......
			AddProperty(loSample, "cDomain", lcDomain)
			
			loSamples.Add(loSample, lcFolderName)
		ENDDO
		FCLOSE(lnHandle)
		
		WAIT CLEAR
		
		TRY
			* Delete the manifest file
			DELETE FILE (lcManifestName)
		CATCH
		EndTry
		*********************************************************************************************
		
		* Restore the current directory
		CD (lcCurDir)
		
		* Start the samples form
		loExamples = CREATEOBJECT("frmExamples", loSamples)
		loExamples.SHOW(1)
		Release loExamples
		
		SET SAFETY &lcSafAct
		
		*!*	Local loExamples, lcCurDir, lcSamplesFolder, lcSafAct, lcManifestURL, lcManifestName, lcZipFileURL, loSamples, loSample
		
		*!*	Set Step On
		
		*!*	lcCurDir 		= FULLPATH(CURDIR())
		*!*	lcSamplesFolder = Addbs(Home(1)) + 'MagicMenuSamples\'
		*!*	lcSafAct 		= SET("Safety")
		*!*	loSamples		= CreateObject("Collection")
		
		*!*	SET SAFETY OFF
		
		*!*	* Check the samples folder
		*!*	IF !DIRECTORY(lcSamplesFolder)
		*!*		lcMacro = 'MKDIR " ' + lcSamplesFolder + '"'
		*!*		&lcMacro
		*!*	ENDIF
		
		*!*	* Change Directory to the samples folder
		*!*	CD (lcSamplesFolder)
		
		*!*	lcManifestURL  = 'https://raw.githubusercontent.com/VFPLegacy/FoxServer/main/examples.manifest'
		*!*	lcManifestName = 'examples.manifest'
		
		*!*	*********************************************************************************************
		
		*!*	LOCAL loHttp, lnHandle, lnStartTime, lcMsg, loNotFound, lcProjectName
		*!*	loHttp = _SCREEN.oBridge.CreateInstance("System.Net.WebClient")
		*!*	IF TYPE('loHttp') <> 'O'
		*!*		lcMsg = _SCREEN.oHelper.oLanguage.Translate("_6P51DFEA2")
		*!*		lcMsg = STRTRAN(lcMsg, "{instance}", "System.Net.WebClient")
		*!*		MESSAGEBOX(lcMsg, 16)
		*!*		RETURN
		*!*	ENDIF
		
		*!*	** Delete the .manifest file (if exists)
		*!*	IF FILE(lcManifestName)
		*!*		TRY
		*!*			DELETE FILE (lcManifestName)
		*!*		CATCH
		*!*		ENDTRY
		*!*	ENDIF
		
		*!*	* Download the .manifest file
		*!*	loHttp.DownloadFile(lcManifestURL, lcManifestName)
		*!*	IF !FILE(lcManifestName)
		*!*		lcMsg = _SCREEN.oHelper.oLanguage.Translate("_6P519EMNA")
		*!*		lcMsg = STRTRAN(lcMsg, "{cFileName}", JUSTFNAME(lcManifestName))
		*!*		MESSAGEBOX(lcMsg, 48)
		*!*		RETURN
		*!*	ENDIF
		
		*!*	** Open the .manifest file
		*!*	lnHandle = FOPEN(lcManifestName)
		*!*	IF lnHandle <= 0
		*!*		MESSAGEBOX(_SCREEN.oHelper.oLanguage.Translate("_6P51AOFXH"), 48)
		*!*		RETURN
		*!*	ENDIF
		
		*!*	loNotFound = CREATEOBJECT("Collection")
		*!*	lnStartTime = SECONDS()
		*!*	WAIT _SCREEN.oHelper.oLanguage.Translate("_6P519I2WS") WINDOW NOWAIT
		*!*	DO WHILE !FEOF(lnHandle)
		*!*		* Open the manifest file and start downloading files
		*!*		lcMsg = _SCREEN.oHelper.oLanguage.Translate("_6P6009RZM")
		*!*		lcMsg = STRTRAN(lcMsg, "{cTime}", TRANSFORM(INT(SECONDS()-lnStartTime)))
		*!*		WAIT lcMsg WINDOW NOWAIT
		*!*		IF LASTKEY() = 27
		*!*			WAIT _SCREEN.oHelper.oLanguage.Translate("_6P51CHJQE") WINDOW NOWAIT
		*!*			EXIT
		*!*		ENDIF
		*!*		lcLine 		  = FGETS(lnHandle)
		*!*		lcZipFileURL  = ALLTRIM(GETWORDNUM(lcLine, 2, ';'))
		*!*		lcProjectName = ALLTRIM(GETWORDNUM(lcLine, 1, ';'))
		*!*		lcFileName	  = JustFname(lcZipFileURL)
		
		*!*		* try to download the .zip file
		*!*		loHttp.DownloadFile(lcZipFileURL, lcFileName)
		*!*		IF !FILE(lcFileName)
		*!*			loNotFound.ADD(ADDBS(lcSamplesFolder) + lcFileName)
		*!*		ENDIF
		*!*	ENDDO
		*!*	FCLOSE(lnHandle)
		
		*!*	WAIT CLEAR
		
		*!*	IF loNotFound.COUNT > 0
		*!*		LOCAL lcMsg1, lcMsg2, lcFileList, lcFile
		*!*		lcMsg1 = _SCREEN.oHelper.oLanguage.Translate("_6P51BO4Y5")
		*!*		lcFileList = ""
		*!*		FOR EACH lcFile IN loNotFound
		*!*			IF !EMPTY(lcFileList)
		*!*				lcFileList = lcFileList + CHR(13) + CHR(10)
		*!*			ENDIF
		*!*			lcFileList = lcFileList + lcFile
		*!*		ENDFOR
		*!*		lcMsg2 = _SCREEN.oHelper.oLanguage.Translate("_6P51BPWEM")
		*!*		MESSAGEBOX(lcMsg1 + CHR(13) + CHR(10) + lcFileList + CHR(13) + CHR(10) + lcMsg2, 48)
		*!*	ENDIF
		
		*!*	TRY
		*!*		* Delete the manifest file
		*!*		DELETE FILE (lcManifestName)
		*!*	CATCH
		*!*	EndTry
		*!*	*********************************************************************************************
		
		*!*	* Restore the current directory
		*!*	CD (lcCurDir)
		
		*!*	* Start the samples form
		*!*	loExamples = CREATEOBJECT("frmExamples")
		*!*	loExamples.SHOW(1)
		*!*	Release loExamples
		
		*!*	SET SAFETY &lcSafAct
	ENDPROC

	PROCEDURE run		&& Occurs when an Active Document is ready to execute your application code.
		IF NOT WEXIST('frmProjectManager')
			RETURN
		ENDIF
		
		LOCAL loProject, lcExeName, loDelete
		loProject = _SCREEN.oActiveProject.oProject
		lcExeName = ADDBS(ALLTRIM(loProject.cDirectory)) + 'dist\' + ALLTRIM(loProject.cName) + '.exe'
		
		IF !FILE(lcExeName)
			RETURN
		ENDIF
		
		_screen.oHelper.oSystem.OpenApplication(lcExeName, "", 2)
	ENDPROC

ENDDEFINE

DEFINE CLASS system AS collection 
 	*< CLASSDATA: Baseclass="collection" Timestamp="" Scale="Pixels" Uniqueid="" />

	*<DefinedPropArrayMethod>
		*m: deletefiles
		*m: downloadfilefromurl
		*m: downloadfilesfrommanifest
		*m: extractdependencies
		*m: findfiles
		*m: isuseradmin
		*m: openapplication
		*m: openfolder
		*m: registerserver
		*m: runcmd
		*p: _memberdata		&& XML Metadata for customizable properties
	*</DefinedPropArrayMethod>

	*<PropValue>
		Height = 23
		Name = "system"
		Width = 23
		_memberdata = <VFPData>

		</VFPData>
	*</PropValue>
	
	PROCEDURE deletefiles
		LPARAMETERS tcDirectory, toFiles
		
		LOCAL lcFile, lcSetAct, lcCurDir
		lcSetAct = SET("Safety")
		lcCurDir = FULLPATH(CURDIR())
		
		CD (tcDirectory)
		
		FOR EACH lcFile IN toFiles
			TRY
				IF FILE(lcFile)
					DELETE FILE (lcFile) RECYCLE
				ENDIF
			CATCH
			ENDTRY
		ENDFOR
		
		SET SAFETY &lcSetAct
		CD (lcCurDir)
	ENDPROC

	PROCEDURE downloadfilefromurl
		LPARAMETERS tcURL, tcFile
		
		LOCAL lcPath, lcCurDir, loHttp, lcMsg
		
		lcPath = JUSTPATH(tcFile)
		
		IF !DIRECTORY(lcPath)
			MKDIR &lcPath
		ENDIF
		
		lcCurDir = FULLPATH(CURDIR())
		loHttp 	 = _SCREEN.oBridge.CreateInstance("System.Net.WebClient")
		
		IF TYPE('loHttp') <> 'O'
			lcMsg = _SCREEN.oHelper.oLanguage.Translate("_6P51DFEA2")
			lcMsg = STRTRAN(lcMsg, "{instance}", "System.Net.WebClient")
			MESSAGEBOX(lcMsg, 16)
			RETURN .F.
		ENDIF
		
		IF FILE(tcFile)
			TRY
				DELETE FILE (tcFile)
			CATCH
			ENDTRY
		ENDIF
		
		*!* fixed by xinjie  2024.01.30
		llOK = .T.
		
		Try 
			loHttp.DownloadFile(tcURL, tcFile)
		Catch to loException
			Do Case
				Case Version(3) = [86]
					lcErrorMessage = [网络访问出现问题:] + Chr(13) + ;
									 loException.message + Chr(13) + ;
									 [点击“确定”按钮后输入可用的 github 镜像网络域名，例如：] + Chr(13) + ;
									 [https://github.com]
			
					MessageBox(lcErrorMessage, 64, [Info])
			
					lcDomain = Alltrim(InputBox([请输入新的 github 镜像地址：], [切换域名], [https://github.com]))
		
					tcURL = Strtran(tcURL, Alltrim(curSamples.Domain), lcDomain)
					
					Try 
						loHttp.DownloadFile(tcURL, tcFile)
					Catch 
						llOK = .F.
						MessageBox([无法正常访问。请修改 domain4cn.txt 文件内容后重试！], 64, [Info])
					EndTry
			EndCase
		EndTry 
		
		If m.llOK = .F.
			Return .F.
		EndIf 
		*loHttp.DownloadFile(tcURL, tcFile)
		
		IF !FILE(tcFile)
			lcMsg = _SCREEN.oHelper.oLanguage.Translate("_6P519EMNA")
			lcMsg = STRTRAN(lcMsg, "{cFileName}", JUSTFNAME(tcManifestFile))
			MESSAGEBOX(lcMsg, 48)
			RETURN .F.
		ENDIF
		
		CD (lcCurDir)
		
		*!* add by xinjie  2024.01.29
		Return .T.
		
	ENDPROC

	PROCEDURE downloadfilesfrommanifest
		LPARAMETERS tcManifestURI, tcManifestFile
		
		* Download the manifest file
		LOCAL lcCurDir, loHttp, lnHandle, lnStartTime, lcMsg, lbChineseVersion, lcUrl4CN
		*!* add by xinjie  2024.01.27
		If Version(3) = [86] 
			lcURL4CN = FileToStr(_Screen.oMagicMenu.cMainDir + [domain4cn.txt])
		EndIf 
				
		lcCurDir = FULLPATH(CURDIR())
		loHttp 	 = _SCREEN.oBridge.CreateInstance("System.Net.WebClient")
		lbChineseVersion = Upper(_Screen.oHelper.oLanguage.GetLanguage()) == "CN"
		
		IF TYPE('loHttp') <> 'O'
			lcMsg = _SCREEN.oHelper.oLanguage.Translate("_6P51DFEA2")
			lcMsg = STRTRAN(lcMsg, "{instance}", "System.Net.WebClient")
			MESSAGEBOX(lcMsg, 16)
			*!* fixed by xinjie  2024.01.28
			*!* The logical value returned is a sign of terminating the program
			Return .F.
			*RETURN 
		ENDIF
		
		IF FILE(tcManifestFile)
			TRY
				DELETE FILE (tcManifestFile)
			CATCH
			ENDTRY
		ENDIF
		
		*!* fixed by xinjie 2024.01.27		Necessary remedies
		*!* Of course, there is still a possibility of localization here, but the CASE statement is not written
		*!* If you're in a country like China, or the state of the network is Terrible, then...
		llOK = .T.
		
		Try 
			loHttp.DownloadFile(tcManifestURI, tcManifestFile)
		Catch to loException
			Do Case
				Case Version(3) = [86]
					lcErrorMessage = [网络访问出现问题:] + Chr(13) + ;
									 loException.message + Chr(13) + ;
									 [点击“确定”按钮后输入可用的 github 镜像网络域名，例如：] + Chr(13) + ;
									 [https://github.com]
			
					MessageBox(lcErrorMessage, 64, [Info])
			
					lcDomain = Alltrim(InputBox([请输入新的 github 镜像地址：], [切换域名], [https://github.com]))
					
					tcManifestURI = Strtran(tcManifestURI, lcURL4CN, lcDomain)
					
					Try 
						loHttp.DownloadFile(tcManifestURI, tcManifestFile)
					Catch 
						llOK = .F.
						MessageBox([无法正常访问。请修改 domain4cn.txt 文件内容后重试！], 64, [Info])
					EndTry
		
			EndCase
		EndTry 
		
		If llOK = .F.
			*!* edit by xinjie  2024.01.28
			Return .F.
			*!* Return 
		EndIf 
		
		IF !FILE(tcManifestFile)
			lcMsg = _SCREEN.oHelper.oLanguage.Translate("_6P519EMNA")
			lcMsg = STRTRAN(lcMsg, "{cFileName}", JUSTFNAME(tcManifestFile))
			MESSAGEBOX(lcMsg, 48)
			*!* edit by xinjie  2024.01.28
			Return .F.
			*!* RETURN
		ENDIF
		
		lnHandle = FOPEN(tcManifestFile)
		IF lnHandle <= 0
			MESSAGEBOX(_SCREEN.oHelper.oLanguage.Translate("_6P51AOFXH"), 48)
			*!* edit by xinjie  2024.01.28
			Return .F.
			*!*RETURN
		ENDIF
		
		loNotFound = CREATEOBJECT("Collection")
		lnStartTime = SECONDS()
		WAIT _SCREEN.oHelper.oLanguage.Translate("_6P519I2WS") WINDOW NOWAIT
		DO WHILE !FEOF(lnHandle)
			* Open the manifest file and start downloading files
			lcMsg = _SCREEN.oHelper.oLanguage.Translate("_6P6009RZM")
			lcMsg = STRTRAN(lcMsg, "{cTime}", TRANSFORM(INT(SECONDS()-lnStartTime)))
			WAIT lcMsg WINDOW NOWAIT
		
			lcLine = FGETS(lnHandle)
			lcLine = STRTRAN(lcLine, "{root}", lcCurDir)
			lcURL  = ALLTRIM(GETWORDNUM(lcLine, 2, ';'))
			
			*!* fixed by xinjie		for China
			If lbChineseVersion
				lcURL = Strtran(lcURL, "github.com", Right(lcURL4CN, Len(lcURL4CN) - 8))
				
				If "raw.githubusercontent.com" $ lcURL
					lcURL = Strtran(lcURL, "raw.githubusercontent.com", Right(lcURL4CN, Len(lcURL4CN) - 8))
					lcURL = Strtran(lcURL, "main", "raw/main")
				EndIf 
			EndIf
			
			lcLine = ALLTRIM(GETWORDNUM(lcLine, 1, ';'))
			lcFileName = JUSTFNAME(lcLine)
			lcPath = JUSTPATH(lcLine)
			IF !DIRECTORY(lcPath)
				*!* fixed by xinjie  2024.01.27
				MKDIR '&lcPath'
				*!* MKDIR &lcPath
			ENDIF
			CD (lcPath)
			* try to download the file
			*!* edit by xinjie 2024.01.27		Necessary remedies
			*!* Of course, there is still a possibility of localization here, but the CASE statement is not written
			*!* If you're in a country like China, or the state of the network is Terrible, then...
			llOK = .T.
			*!* add by xinjie  2024.01.28
			llReturn = .F.
		
			Try
				llReturn = loHttp.DownloadFile(lcURL, lcFileName)
			Catch to loException
				Do Case
					Case Version(3) = [86]
						lcErrorMessage = [网络访问出现问题:] + Chr(13) + ;
										 loException.message + Chr(13) + ;
										 [点击“确定”按钮后输入可用的 github 镜像网络域名，例如：] + Chr(13) + ;
										 [https://github.com]
				
						MessageBox(lcErrorMessage, 64, [Info])
				
						lcDomain = Alltrim(InputBox([请输入新的 github 镜像地址：], [切换域名], [https://github.com]))
						
						lcURL = Strtran(lcURL, lcURL4CN, lcDomain)
						
						Try 
							llReturn = loHttp.DownloadFile(lcURL, lcFileName)
						Catch 
							llOK = .F.
							MessageBox([无法正常访问。请修改 domain4cn.txt 文件内容后重试！], 64, [Info])
							*!* add by xinjie  2024.01.28
		Exit 
						EndTry
		
				EndCase
			EndTry 
		
		*!*		If llOK = .F.
		*!*			Return 
		*!*		EndIf 
			
			IF !FILE(lcFileName)
				loNotFound.ADD(ADDBS(lcPath) + lcFileName)
			ENDIF
		EndDo
		*!* edit by xinjie  2024.01.28
		If llReturn = .F.
			Return .F.
		EndIf 
		
		If llOK = .F.
			Return .F.
		EndIf 
		
		
		FCLOSE(lnHandle)
		
		WAIT CLEAR
		
		*!* add by xinjie  2024.01.28
		llOK = .T.
		
		IF loNotFound.COUNT > 0
			LOCAL lcMsg1, lcMsg2, lcFileList, lcFile
			lcMsg1 = _SCREEN.oHelper.oLanguage.Translate("_6P51BO4Y5")
			lcFileList = ""
			FOR EACH lcFile IN loNotFound
				IF !EMPTY(lcFileList)
					lcFileList = lcFileList + CHR(13) + CHR(10)
				ENDIF
				lcFileList = lcFileList + lcFile
			ENDFOR
			lcMsg2 = _SCREEN.oHelper.oLanguage.Translate("_6P51BPWEM")
			MESSAGEBOX(lcMsg1 + CHR(13) + CHR(10) + lcFileList + CHR(13) + CHR(10) + lcMsg2, 48)
			*!* add by xinjie  2024.01.28
			llOK = .F.
		ENDIF
		
		TRY
			* Change Directory to the site root
			CD (lcCurDir)
			DELETE FILE (tcManifestFile)
		CATCH
		EndTry
		
		*!* add by xinjie  2024.01.28
		Return llOK
	ENDPROC

	PROCEDURE extractdependencies
		TRY
			USE dependencies SHARED IN 0
		
			LOCAL lcFileName, lcLibFolder
		
			* Create the root folder
			lcLibFolder = _screen.oMagicMenu.cMainDir + 'libs\'
			IF NOT DIRECTORY(lcLibFolder)
				* MKDIR &lcLibFolder
				* fixed by xinjie   If the path contains spaces, this is required
				MKDIR '&lcLibFolder'
			ENDIF
		
			SCAN
				lcFileName = lcLibFolder + ALLTRIM(dependencies.filename) + '.' + ALLTRIM(dependencies.extension)
				STRTOFILE(dependencies.binary, lcFileName)
			ENDSCAN
		Catch
		FINALLY
			USE IN dependencies
		EndTry
	ENDPROC

	PROCEDURE findfiles
		LPARAMETERS tcDirectory, toExtensions, toFiles
		
		LOCAL ARRAY aryTemp(1,5)
		LOCAL nCount, nMax, nLen, cFile, cExt, lcExt
		SET DEFAULT TO (tcDirectory)
		=ADIR(aryTemp, "*.*","AHRSD",1)
		nMax = ALEN(aryTemp,1)
		
		FOR nCount = 1 TO nMax
			cFile = ALLTRIM(aryTemp(nCount,1))
			IF cFile != '.' AND cFile != '..'
				IF 'D' $ aryTemp(nCount, 5)
					THIS.FindFiles(ADDBS(tcDirectory + cFile), toExtensions, toFiles)
				ELSE
					cExt = LOWER(RIGHT(cFile, 3))			
					FOR EACH lcExt IN toExtensions
						IF cExt == lcExt
							toFiles.Add(tcDirectory + cFile)
							EXIT
						ENDIF
					ENDFOR
				ENDIF
			ENDIF
		ENDFOR
	ENDPROC

	PROCEDURE isuseradmin
		LOCAL lnResult AS INTEGER
		lnResult = 0 && NO ES ADMIN POR DEFECTO.
		DECLARE INTEGER IsUserAnAdmin IN Shell32 AS FoxThreadUserAdmin
		lnResult = FoxThreadUserAdmin()
		CLEAR DLLS FoxThreadUserAdmin
		
		RETURN lnResult == 1
	ENDPROC

	PROCEDURE openapplication
		LPARAMETERS tcExecutable, tcParamList, tnShowWin
		
		#DEFINE SHOW_WINDOW_NORMAL 		1
		#DEFINE SHOW_WINDOW_MINIMIZED 	2
		#DEFINE SHOW_WINDOW_MAXIMIZED 	3
		
		IF EMPTY(tcParamList)
			tcParamList = ""
		ENDIF
		
		IF EMPTY(tnShowWin)
			tnShowWin = SHOW_WINDOW_NORMAL
		ENDIF
		
		DECLARE INTEGER ShellExecute IN shell32.DLL ;
			INTEGER hndWin, ;
			STRING cAction, ;
			STRING cFileName, ;
			STRING cParams, ;
			STRING cDir, ;
			INTEGER nShowWin
		
		=ShellExecute(0, "open", tcExecutable, tcParamList, "", tnShowWin)
		CLEAR DLLS "ShellExecute"
	ENDPROC

	PROCEDURE openfolder
		LPARAMETERS tcFolder
		
		DECLARE INTEGER ShellExecute IN shell32.dll ; 
		  INTEGER hndWin, ; 
		  STRING cAction, ; 
		  STRING cFileName, ; 
		  STRING cParams, ;  
		  STRING cDir, ; 
		  INTEGER nShowWin
		
		 =ShellExecute(0, "open", tcFolder, "", "", 1)
		 Clear Dlls "ShellExecute"
		
	ENDPROC

	PROCEDURE registerserver
		LPARAMETERS tcFileName AS STRING, tcRegMacro AS STRING
		
		LOCAL lbInstalled
		TRY
			DECLARE LONG DllRegisterServer IN (tcFileName)
			lbInstalled = (DllRegisterServer() == 0)
		CATCH
		ENDTRY
		
		CLEAR DLLS DllRegisterServer
		
		RETURN lbInstalled
	ENDPROC

	PROCEDURE runcmd
		Lparameters tcCommand
		
		DECLARE LONG WinExec IN kernel32 STRING lpCmdLine, LONG nCmdShow
		WinExec(tcCommand, 0)
		Clear Dlls WinExec
	ENDPROC

ENDDEFINE

DEFINE CLASS toolbarmenux16 AS toolbar 
 	*< CLASSDATA: Baseclass="toolbar" Timestamp="" Scale="Pixels" Uniqueid="" />

	*-- OBJECTDATA items order determines ZOrder / El orden de los items OBJECTDATA determina el ZOrder 
	*< OBJECTDATA: ObjPath="Command1" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="btnNew" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="btnUpdateRuntime" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="btnReload" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="btnBuild" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="btnDebug" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="btnRun" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="btnStart" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="btnStop" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="btnClose" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="btnHelp" UniqueID="" Timestamp="" />

	*<DefinedPropArrayMethod>
		*m: newsite
		*m: update
		*p: _memberdata		&& XML Metadata for customizable properties
	*</DefinedPropArrayMethod>

	*<PropValue>
		Caption = "MagicMenu"
		Height = 30
		KeyPreview = .F.
		Left = 0
		Name = "toolbarmenux16"
		ScaleMode = 3
		Top = 0
		Width = 264
		_memberdata = <VFPData>

		</VFPData>
	*</PropValue>

	ADD OBJECT 'btnBuild' AS commandbutton WITH ;
		Caption = "", ;
		DisabledPicture = ..\bmps\cog_disabled16.bmp, ;
		Enabled = .F., ;
		Height = 24, ;
		Left = 97, ;
		Name = "btnBuild", ;
		Picture = ..\bmps\cog16.bmp, ;
		Top = 3, ;
		Width = 24
		*< END OBJECT: BaseClass="commandbutton" />

	ADD OBJECT 'btnClose' AS commandbutton WITH ;
		Caption = "", ;
		DisabledPicture = ..\bmps\door_out_disabled16.bmp, ;
		Enabled = .F., ;
		Height = 24, ;
		Left = 212, ;
		Name = "btnClose", ;
		Picture = ..\bmps\door_out16.bmp, ;
		Top = 3, ;
		Width = 24
		*< END OBJECT: BaseClass="commandbutton" />

	ADD OBJECT 'btnDebug' AS commandbutton WITH ;
		Caption = "", ;
		DisabledPicture = ..\bmps\bug_disabled16.bmp, ;
		Enabled = .F., ;
		Height = 24, ;
		Left = 120, ;
		Name = "btnDebug", ;
		Picture = ..\bmps\bug16.bmp, ;
		Top = 3, ;
		Width = 24
		*< END OBJECT: BaseClass="commandbutton" />

	ADD OBJECT 'btnHelp' AS commandbutton WITH ;
		Caption = "", ;
		Height = 24, ;
		Left = 235, ;
		Name = "btnHelp", ;
		Picture = ..\bmps\help16.bmp, ;
		Top = 3, ;
		Width = 24
		*< END OBJECT: BaseClass="commandbutton" />

	ADD OBJECT 'btnNew' AS commandbutton WITH ;
		Caption = "", ;
		DisabledPicture = ..\bmps\application_disabled16.bmp, ;
		Height = 24, ;
		Left = 28, ;
		Name = "btnNew", ;
		Picture = ..\bmps\application16.bmp, ;
		Top = 3, ;
		Width = 24
		*< END OBJECT: BaseClass="commandbutton" />

	ADD OBJECT 'btnReload' AS commandbutton WITH ;
		Caption = "", ;
		DisabledPicture = ..\bmps\reload_disabled16.bmp, ;
		Enabled = .F., ;
		Height = 24, ;
		Left = 74, ;
		Name = "btnReload", ;
		Picture = ..\bmps\reload16.bmp, ;
		Top = 3, ;
		Width = 24
		*< END OBJECT: BaseClass="commandbutton" />

	ADD OBJECT 'btnRun' AS commandbutton WITH ;
		Caption = "", ;
		DisabledPicture = ..\bmps\lightning_disabled16.bmp, ;
		Enabled = .F., ;
		Height = 24, ;
		Left = 143, ;
		Name = "btnRun", ;
		Picture = ..\bmps\lightning16.bmp, ;
		Top = 3, ;
		Width = 24
		*< END OBJECT: BaseClass="commandbutton" />

	ADD OBJECT 'btnStart' AS commandbutton WITH ;
		Caption = "", ;
		DisabledPicture = ..\bmps\start_disabled16.bmp, ;
		Enabled = .F., ;
		Height = 24, ;
		Left = 166, ;
		Name = "btnStart", ;
		Picture = ..\bmps\start_enabled16.bmp, ;
		Top = 3, ;
		Width = 24
		*< END OBJECT: BaseClass="commandbutton" />

	ADD OBJECT 'btnStop' AS commandbutton WITH ;
		Caption = "", ;
		DisabledPicture = ..\bmps\stop_disabled16.bmp, ;
		Enabled = .F., ;
		Height = 24, ;
		Left = 189, ;
		Name = "btnStop", ;
		Picture = ..\bmps\stop_enabled16.bmp, ;
		Top = 3, ;
		Width = 24
		*< END OBJECT: BaseClass="commandbutton" />

	ADD OBJECT 'btnUpdateRuntime' AS commandbutton WITH ;
		Caption = "", ;
		DisabledPicture = ..\bmps\box_down_disabled16.bmp, ;
		Enabled = .F., ;
		Height = 24, ;
		Left = 51, ;
		Name = "btnUpdateRuntime", ;
		Picture = ..\bmps\box_down16.bmp, ;
		Top = 3, ;
		Width = 24
		*< END OBJECT: BaseClass="commandbutton" />

	ADD OBJECT 'Command1' AS commandbutton WITH ;
		Caption = "", ;
		DisabledPicture = ..\bmps\folder_disabled16.bmp, ;
		Height = 24, ;
		Left = 5, ;
		Name = "Command1", ;
		Picture = ..\bmps\folder16.bmp, ;
		Top = 3, ;
		Width = 24
		*< END OBJECT: BaseClass="commandbutton" />
	
	PROCEDURE newsite
		
		
		
		
		
	ENDPROC

	PROCEDURE update
		IF WEXIST('frmProjectManager') AND TYPE('_screen.oActiveProject') == 'O'
			this.btnReload.Enabled = .t.
			this.btnBuild.Enabled = .t.
			this.btnUpdateRuntime.Enabled = .t.
			this.btnDebug.Enabled = .t.
			this.btnRun.Enabled = .t.
			this.btnClose.Enabled = .t.
			do case
			case inlist(_screen.oActiveProject.oProject.cType, "SRVEXE", "WEBAPP")
				this.btnStart.Enabled = .t.
				this.btnStop.Enabled = .t.
			case inlist(_screen.oActiveProject.oProject.cType, "DLL", "MTDLL")
				this.btnRun.Enabled = .f.
				this.btnDebug.Enabled = .f.
				this.btnUpdateRuntime.Enabled = .f.
			endcase
		ENDIF
	ENDPROC

	PROCEDURE btnBuild.Click
		_screen.oHelper.oProject.Compile()
	ENDPROC

	PROCEDURE btnBuild.Init
		this.ToolTipText = _screen.oHelper.oLanguage.Translate("_6P50J6CTS", 2) && 2 ToolTipText
	ENDPROC

	PROCEDURE btnClose.Click
		_screen.oHelper.oProject.Close()
	ENDPROC

	PROCEDURE btnClose.Init
		this.ToolTipText = _screen.oHelper.oLanguage.Translate("_6PG0PZMF7", 2) && 2 ToolTipText
	ENDPROC

	PROCEDURE btnDebug.Click
		_screen.oHelper.oProject.Debug()
	ENDPROC

	PROCEDURE btnDebug.Init
		this.ToolTipText = _screen.oHelper.oLanguage.Translate("_6PG0LNQDA", 2) && 2 ToolTipText
	ENDPROC

	PROCEDURE btnHelp.Click
		LOCAL lcMsg
		lcMsg = _screen.oHelper.oLanguage.Translate("_6P81CQUZT")
		lcMsg = STRTRAN(lcMsg, "{cVersion}", _screen.oMagicMenu.cVersion)
		
		MESSAGEBOX(lcMsg, 64, "MagicMenu")
	ENDPROC

	PROCEDURE btnHelp.Init
		this.ToolTipText = _screen.oHelper.oLanguage.Translate("_6PD0KRIJE", 2) && 2 ToolTipText
	ENDPROC

	PROCEDURE btnNew.Click
		LOCAL loMenu, lnChoice
		loMenu = CREATEOBJECT("frmNew")
		loMenu.show(1)
		lnChoice = loMenu.nChoice
		RELEASE loMenu
		
		*!*	1 Executable with windows 	=> WINEXE
		*!*	2 Console Executable		=> CONEXE
		*!*	3 Application				=> APP
		*!*	4 Windows Service			=> SRVEXE
		*!*	5 Web Application			=> WEBAPP
		*!*	6 Single Threaded			=> DLL
		*!*	7 Multi Threaded			=> MTDLL
		
		DO CASE
		CASE lnChoice == 1 && Executable with windows
		CASE lnChoice == 2 && Console Executable
			_screen.oHelper.oConsole.newProject()
		CASE lnChoice == 3 && Application
		CASE lnChoice == 4 && Windows Service
			_screen.oHelper.oService.newService()
		CASE lnChoice == 5 && Web Application
			_screen.oHelper.oSite.newSite()
		CASE lnChoice == 6 && Single Threaded
			_screen.oHelper.oLibrary.newProject('DLL')
		CASE lnChoice == 7 && Multi Threaded
			_screen.oHelper.oLibrary.newProject('MTDLL')
		OTHERWISE
		
		ENDCASE
		
	ENDPROC

	PROCEDURE btnNew.Init
		this.ToolTipText = _screen.oHelper.oLanguage.Translate("_6P50J4SVE", 2) && 2 ToolTipText
	ENDPROC

	PROCEDURE btnReload.Click
		_screen.oHelper.oProject.ReloadProject()
	ENDPROC

	PROCEDURE btnReload.Init
		this.ToolTipText = _screen.oHelper.oLanguage.Translate("_6PG0LMYS5", 2) && 2 ToolTipText
	ENDPROC

	PROCEDURE btnRun.Click
		_screen.oHelper.oProject.Run()
	ENDPROC

	PROCEDURE btnRun.Init
		this.ToolTipText = _screen.oHelper.oLanguage.Translate("_6P50J78WK", 2) && 2 ToolTipText
	ENDPROC

	PROCEDURE btnStart.Click
		_screen.oHelper.oService.Start()
	ENDPROC

	PROCEDURE btnStart.Init
		this.ToolTipText = _screen.oHelper.oLanguage.Translate("_6PH11SWT8", 2)
	ENDPROC

	PROCEDURE btnStop.Click
		_screen.oHelper.oService.Stop()
	ENDPROC

	PROCEDURE btnStop.Init
		this.ToolTipText = _screen.oHelper.oLanguage.Translate("_6PH11TFJY", 2)
	ENDPROC

	PROCEDURE btnUpdateRuntime.Click
		_screen.oHelper.oProject.UpdateRuntimes()
	ENDPROC

	PROCEDURE btnUpdateRuntime.Init
		this.ToolTipText = _screen.oHelper.oLanguage.Translate("_6QQ1B4K8T", 2) && 2 ToolTipText
	ENDPROC

	PROCEDURE Command1.Click
		_screen.oHelper.oProject.OpenProject()
	ENDPROC

	PROCEDURE Command1.Init
		this.ToolTipText = _screen.oHelper.oLanguage.Translate("_6PB0LM2GY", 2) && 2 ToolTipText
	ENDPROC

ENDDEFINE

DEFINE CLASS toolbarmenux32 AS toolbar 
 	*< CLASSDATA: Baseclass="toolbar" Timestamp="" Scale="Pixels" Uniqueid="" />

	*-- OBJECTDATA items order determines ZOrder / El orden de los items OBJECTDATA determina el ZOrder 
	*< OBJECTDATA: ObjPath="Command1" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="btnNew" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="btnUpdateRuntime" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="btnReload" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="btnBuild" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="btnDebug" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="btnRun" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="btnStart" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="btnStop" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="btnClose" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="btnHelp" UniqueID="" Timestamp="" />

	*<DefinedPropArrayMethod>
		*m: newsite
		*m: update
		*p: _memberdata		&& XML Metadata for customizable properties
	*</DefinedPropArrayMethod>

	*<PropValue>
		Caption = "MagicMenu"
		Height = 48
		KeyPreview = .F.
		Left = 0
		Name = "toolbarmenux32"
		ScaleMode = 3
		Top = 0
		Width = 462
		_memberdata = <VFPData>

		</VFPData>
	*</PropValue>

	ADD OBJECT 'btnBuild' AS commandbutton WITH ;
		Caption = "", ;
		DisabledPicture = ..\bmps\cog_disabled32.bmp, ;
		Enabled = .F., ;
		Height = 42, ;
		Left = 169, ;
		Name = "btnBuild", ;
		Picture = ..\bmps\cog32.bmp, ;
		Top = 3, ;
		Width = 42
		*< END OBJECT: BaseClass="commandbutton" />

	ADD OBJECT 'btnClose' AS commandbutton WITH ;
		Caption = "", ;
		DisabledPicture = ..\bmps\door_out_disabled32.bmp, ;
		Enabled = .F., ;
		Height = 42, ;
		Left = 374, ;
		Name = "btnClose", ;
		Picture = ..\bmps\door_out32.bmp, ;
		Top = 3, ;
		Width = 42
		*< END OBJECT: BaseClass="commandbutton" />

	ADD OBJECT 'btnDebug' AS commandbutton WITH ;
		Caption = "", ;
		DisabledPicture = ..\bmps\bug_disabled32.bmp, ;
		Enabled = .F., ;
		Height = 42, ;
		Left = 210, ;
		Name = "btnDebug", ;
		Picture = ..\bmps\bug32.bmp, ;
		Top = 3, ;
		Width = 42
		*< END OBJECT: BaseClass="commandbutton" />

	ADD OBJECT 'btnHelp' AS commandbutton WITH ;
		Caption = "", ;
		Height = 42, ;
		Left = 415, ;
		Name = "btnHelp", ;
		Picture = ..\bmps\help32.bmp, ;
		Top = 3, ;
		Width = 42
		*< END OBJECT: BaseClass="commandbutton" />

	ADD OBJECT 'btnNew' AS commandbutton WITH ;
		Caption = "", ;
		Height = 42, ;
		Left = 46, ;
		Name = "btnNew", ;
		Picture = ..\bmps\application32.bmp, ;
		Top = 3, ;
		Width = 42
		*< END OBJECT: BaseClass="commandbutton" />

	ADD OBJECT 'btnReload' AS commandbutton WITH ;
		Caption = "", ;
		DisabledPicture = ..\bmps\reload_disabled32.bmp, ;
		Enabled = .F., ;
		Height = 42, ;
		Left = 128, ;
		Name = "btnReload", ;
		Picture = ..\bmps\reload32.bmp, ;
		Top = 3, ;
		Width = 42
		*< END OBJECT: BaseClass="commandbutton" />

	ADD OBJECT 'btnRun' AS commandbutton WITH ;
		Caption = "", ;
		DisabledPicture = ..\bmps\lightning_disabled32.bmp, ;
		Enabled = .F., ;
		Height = 42, ;
		Left = 251, ;
		Name = "btnRun", ;
		Picture = ..\bmps\lightning32.bmp, ;
		Top = 3, ;
		Width = 42
		*< END OBJECT: BaseClass="commandbutton" />

	ADD OBJECT 'btnStart' AS commandbutton WITH ;
		Caption = "", ;
		DisabledPicture = ..\bmps\start_disabled32.bmp, ;
		Enabled = .F., ;
		Height = 42, ;
		Left = 292, ;
		Name = "btnStart", ;
		Picture = ..\bmps\start_enabled32.bmp, ;
		Top = 3, ;
		Width = 42
		*< END OBJECT: BaseClass="commandbutton" />

	ADD OBJECT 'btnStop' AS commandbutton WITH ;
		Caption = "", ;
		DisabledPicture = ..\bmps\stop_disabled32.bmp, ;
		Enabled = .F., ;
		Height = 42, ;
		Left = 333, ;
		Name = "btnStop", ;
		Picture = ..\bmps\stop_enabled32.bmp, ;
		Top = 3, ;
		Width = 42
		*< END OBJECT: BaseClass="commandbutton" />

	ADD OBJECT 'btnUpdateRuntime' AS commandbutton WITH ;
		Caption = "", ;
		DisabledPicture = ..\bmps\box_down_disabled32.bmp, ;
		Enabled = .F., ;
		Height = 42, ;
		Left = 87, ;
		Name = "btnUpdateRuntime", ;
		Picture = ..\bmps\box_down32.bmp, ;
		Top = 3, ;
		Width = 42
		*< END OBJECT: BaseClass="commandbutton" />

	ADD OBJECT 'Command1' AS commandbutton WITH ;
		Caption = "", ;
		Height = 42, ;
		Left = 5, ;
		Name = "Command1", ;
		Picture = ..\bmps\folder32.bmp, ;
		Top = 3, ;
		Width = 42
		*< END OBJECT: BaseClass="commandbutton" />
	
	PROCEDURE newsite
		
		
		
		
		
	ENDPROC

	PROCEDURE update
		IF WEXIST('frmProjectManager') AND TYPE('_screen.oActiveProject') == 'O'
			this.btnReload.Enabled = .t.
			this.btnBuild.Enabled = .t.
			this.btnUpdateRuntime.Enabled = .t.
			this.btnDebug.Enabled = .t.
			this.btnRun.Enabled = .t.
			this.btnClose.Enabled = .t.
			DO case
			case inlist(UPPER(_screen.oActiveProject.oProject.cType), "SRVEXE", "WEBAPP")
				this.btnStart.Enabled = .t.
				this.btnStop.Enabled = .t.
			case inlist(_screen.oActiveProject.oProject.cType, "DLL", "MTDLL")
				this.btnRun.Enabled = .f.
				this.btnDebug.Enabled = .f.
				this.btnUpdateRuntime.Enabled = .f.
			endcase
		ENDIF
	ENDPROC

	PROCEDURE btnBuild.Click
		_screen.oHelper.oProject.Compile()
	ENDPROC

	PROCEDURE btnBuild.Init
		this.ToolTipText = _screen.oHelper.oLanguage.Translate("_6P50J6CTS", 2) && 2 ToolTipText
	ENDPROC

	PROCEDURE btnClose.Click
		*!*	_screen.oHelper.oProject.Close()
		IF NOT WEXIST('frmProjectManager')
			RETURN
		ENDIF
		_SCREEN.oProjectManager.CloseProject()
	ENDPROC

	PROCEDURE btnClose.Init
		this.ToolTipText = _screen.oHelper.oLanguage.Translate("_6PG0PZMF7", 2) && 2 ToolTipText
	ENDPROC

	PROCEDURE btnDebug.Click
		_screen.oHelper.oProject.Debug()
	ENDPROC

	PROCEDURE btnDebug.Init
		this.ToolTipText = _screen.oHelper.oLanguage.Translate("_6PG0LNQDA", 2) && 2 ToolTipText
	ENDPROC

	PROCEDURE btnHelp.Click
		LOCAL lcMsg
		lcMsg = _screen.oHelper.oLanguage.Translate("_6P81CQUZT")
		lcMsg = STRTRAN(lcMsg, "{cVersion}", _screen.oMagicMenu.cVersion)
		
		MESSAGEBOX(lcMsg, 64, "MagicMenu")
	ENDPROC

	PROCEDURE btnHelp.Init
		this.ToolTipText = _screen.oHelper.oLanguage.Translate("_6PD0KRIJE", 2) && 2 ToolTipText
	ENDPROC

	PROCEDURE btnNew.Click
		LOCAL loMenu, lnChoice
		loMenu = CREATEOBJECT("frmNew")
		loMenu.show(1)
		lnChoice = loMenu.nChoice
		RELEASE loMenu
		
		*!*	1 Executable with windows 	=> WINEXE
		*!*	2 Console Executable		=> CONEXE
		*!*	3 Application				=> APP
		*!*	4 Windows Service			=> SRVEXE
		*!*	5 Web Application			=> WEBAPP
		*!*	6 Single Threaded			=> DLL
		*!*	7 Multi Threaded			=> MTDLL
		
		DO CASE
		CASE lnChoice == 1 && Executable with windows
		CASE lnChoice == 2 && Console Executable
			_screen.oHelper.oConsole.newProject()
		CASE lnChoice == 3 && Application
		CASE lnChoice == 4 && Windows Service
			_screen.oHelper.oService.newService()
		CASE lnChoice == 5 && Web Application
			_screen.oHelper.oSite.newSite()
		CASE lnChoice == 6 && Single Threaded
			_screen.oHelper.oLibrary.newProject('DLL')
		CASE lnChoice == 7 && Multi Threaded
			_screen.oHelper.oLibrary.newProject('MTDLL')
		OTHERWISE
		
		ENDCASE
		
	ENDPROC

	PROCEDURE btnNew.Init
		this.ToolTipText = _screen.oHelper.oLanguage.Translate("_6P50J4SVE", 2) && 2 ToolTipText
	ENDPROC

	PROCEDURE btnReload.Click
		_screen.oHelper.oProject.ReloadProject()
	ENDPROC

	PROCEDURE btnReload.Init
		this.ToolTipText = _screen.oHelper.oLanguage.Translate("_6PG0LMYS5", 2) && 2 ToolTipText
	ENDPROC

	PROCEDURE btnRun.Click
		_screen.oHelper.oProject.Run()
	ENDPROC

	PROCEDURE btnRun.Init
		this.ToolTipText = _screen.oHelper.oLanguage.Translate("_6P50J78WK", 2) && 2 ToolTipText
	ENDPROC

	PROCEDURE btnStart.Click
		_screen.oHelper.oService.Start()
	ENDPROC

	PROCEDURE btnStart.Init
		this.ToolTipText = _screen.oHelper.oLanguage.Translate("_6PH11SWT8", 2)
	ENDPROC

	PROCEDURE btnStop.Click
		_screen.oHelper.oService.Stop()
	ENDPROC

	PROCEDURE btnStop.Init
		this.ToolTipText = _screen.oHelper.oLanguage.Translate("_6PH11TFJY", 2)
	ENDPROC

	PROCEDURE btnUpdateRuntime.Click
		_screen.oHelper.oProject.UpdateRuntimes()
	ENDPROC

	PROCEDURE btnUpdateRuntime.Init
		this.ToolTipText = _screen.oHelper.oLanguage.Translate("_6QQ1B4K8T", 2) && 2 ToolTipText
	ENDPROC

	PROCEDURE Command1.Click
		_screen.oHelper.oProject.OpenProject()
	ENDPROC

	PROCEDURE Command1.Init
		this.ToolTipText = _screen.oHelper.oLanguage.Translate("_6PB0LM2GY", 2) && 2 ToolTipText
	ENDPROC

ENDDEFINE

DEFINE CLASS window AS collection 
 	*< CLASSDATA: Baseclass="collection" Timestamp="" Scale="Pixels" Uniqueid="" />

	*<DefinedPropArrayMethod>
		*m: newproject
		*m: run		&& Occurs when an Active Document is ready to execute your application code.
	*</DefinedPropArrayMethod>

	*<PropValue>
		Height = 23
		Name = "window"
		Width = 23
	*</PropValue>
	
	PROCEDURE newproject
		LOCAL loForm, loConsole, lcRootFolder
		
		loForm = CREATEOBJECT("frmNewConsole")
		loForm.SHOW(1)
		loConsole = loForm.oProject
		
		RELEASE loForm
		
		IF EMPTY(loConsole.cName)
			RETURN
		ENDIF
		
		* Create the root folder
		lcRootFolder = ALLTRIM(loConsole.cDirectory)
		IF NOT DIRECTORY(lcRootFolder)
			MKDIR &lcRootFolder
		ENDIF
		
		LOCAL lcCurDir, lcFoxConsolePath, lcFoxConsoleURI, lcMainFilePath, lcConfigFPWFilePath, lcBuffer
		lcCurDir = FULLPATH(CURDIR())
		lcFoxConsolePath = ADDBS(lcRootFolder) + 'FoxConsole.prg'
		lcMainFilePath = ADDBS(lcRootFolder) + 'Main.prg'
		lcConfigFPWFilePath = ADDBS(lcRootFolder) + 'CONFIG.FPW'
		
		Local lcDomain
		lcDomain = "https://raw.githubusercontent.com"
		If Upper(_Screen.oHelper.oLanguage.GetLanguage()) == "CN"
			* lcDomain = "https://hub.nuaa.cf"
			*!* fixed by xinjie  2024.01.26
			lcDomain = FileToStr([domain4cn.txt])
		EndIf
		
		lcFoxConsoleURI  = lcDomain+"/Irwin1985/FoxConsole/main/foxconsole.prg"
		*!* add by xinjie  2024.01.26		for China
		If Upper(_Screen.oHelper.oLanguage.GetLanguage()) == "CN"
			lcFoxConsoleURI  = lcDomain+"/Irwin1985/FoxConsole/raw/main/foxconsole.prg"
		EndIf
		
		* Change Directory to the site root
		CD (lcRootFolder)
		
		* Download the FoxConsole
		LOCAL loHttp, lnHandle, lnStartTime, lcMsg
		loHttp = _SCREEN.oBridge.CreateInstance("System.Net.WebClient")
		IF TYPE('loHttp') <> 'O'
			lcMsg = _SCREEN.oHelper.oLanguage.Translate("_6P51DFEA2")
			lcMsg = STRTRAN(lcMsg, "{instance}", "System.Net.WebClient")
			MESSAGEBOX(lcMsg, 16)
			RETURN
		ENDIF
		
		IF FILE(lcFoxConsolePath)
			TRY
				DELETE FILE (lcFoxConsolePath)
			CATCH
			ENDTRY
		ENDIF
		WAIT _SCREEN.oHelper.oLanguage.Translate("_6P519I2WS") WINDOW NOWAIT
		loHttp.DownloadFile(lcFoxConsoleURI, lcFoxConsolePath)
		WAIT CLEAR
		IF !FILE(lcFoxConsolePath)
			lcMsg = _SCREEN.oHelper.oLanguage.Translate("_6P519EMNA")
			lcMsg = STRTRAN(lcMsg, "{cFileName}", JUSTFNAME(lcFoxConsolePath))
			MESSAGEBOX(lcMsg, 48)
			RETURN
		ENDIF
		
		** Create the main PRG file
		TEXT TO lcBuffer NOSHOW TEXTMERGE 
		Do FoxConsole
		* <<_screen.oHelper.oLanguage.Translate("_6P90N981C")>>
		_vfp.cli.Print("<<_screen.oHelper.oLanguage.Translate("_6P90N9ZPB")>>")
		_vfp.cli.Println()
		_vfp.cli.Println("<<_screen.oHelper.oLanguage.Translate("_6P90NAX88")>>")
		
		* <<_screen.oHelper.oLanguage.Translate("_6P90NBFC6")>>
		lcName = _vfp.cli.Input("<<_screen.oHelper.oLanguage.Translate("_6P90NBZXZ")>>")
		If !empty(lcName)
		    _vfp.cli.Println("<<_screen.oHelper.oLanguage.Translate("_6P90NDSL3")>> " + lcName + "!")
		Else
		    _vfp.cli.Println("<<_screen.oHelper.oLanguage.Translate("_6P90NFZF9")>>")
		Endif
		_vfp.cli.Println("<<_screen.oHelper.oLanguage.Translate("_6P90O1AW5")>>")
		_vfp.cli.readkey()
		_vfp.cli.exit(0)
		
		ENDTEXT
		
		STRTOFILE(lcBuffer, lcMainFilePath)
		
		** Create the CONFIG.FPW file
		TEXT TO lcBuffer NOSHOW
		SCREEN = OFF
		RESOURCE = OFF
		ENDTEXT
		STRTOFILE(lcBuffer, lcConfigFPWFilePath)
		
		* Restore the current directory
		CD (lcCurDir)
		
		** Create new project
		LOCAL loProject, lcPrjRoot
		lcPrjRoot = STRTRAN(ADDBS(lcRootFolder), '\', '\\')
		loProject = CREATEOBJECT("Empty")
		ADDPROPERTY(loProject, "cName", ALLTRIM(loConsole.cName))
		ADDPROPERTY(loProject, "cType", "CONEXE")
		ADDPROPERTY(loProject, "cDirectory", lcPrjRoot)
		ADDPROPERTY(loProject, "cMain", lcPrjRoot + "Main.prg")
		ADDPROPERTY(loProject, "oExt", .NULL.)
		ADDPROPERTY(loProject, "oIgnored", .NULL.)
		ADDPROPERTY(loProject, "oExcluded", .NULL.)
		_screen.oHelper.oProject.newProject(loProject)
	ENDPROC

	PROCEDURE run		&& Occurs when an Active Document is ready to execute your application code.
		IF NOT WEXIST('frmProjectManager')
			RETURN
		ENDIF
		
		LOCAL loProject, lcExeName, loDelete
		loProject = _SCREEN.oActiveProject.oProject
		lcExeName = ADDBS(ALLTRIM(loProject.cDirectory)) + ALLTRIM(loProject.cName) + '.exe'
		
		IF !FILE(lcExeName)
			RETURN
		ENDIF
		
		loDelete = CREATEOBJECT("Collection")
		
		lcTempDir = _screen.oMagicMenu.cTempDir + ALLTRIM(loProject.cName) + '\'
		IF NOT DIRECTORY(lcTempDir)
			MKDIR &lcTempDir
		ENDIF
		
		lcBuildFile = lcTempDir + "BUILD.FPW"
		lcBatFile = lcTempDir + "build.bat"
		
		loDelete.Add(JUSTFNAME(lcBuildFile))
		loDelete.Add(JUSTFNAME(lcBatFile))
		loDelete.Add('build.fxp')
		_screen.oHelper.oSystem.DeleteFiles(lcTempDir, loDelete)
		
		LOCAL lcScript, lcParams, lcCommand
		lcParams = _screen.oHelper.oProject.askForParameters()
		lcCommand = 'DO "' + lcExeName + '"'
		IF !EMPTY(lcParams)
			lcCommand = lcCommand + " WITH " + lcParams
		ENDIF
		TEXT TO lcScript NOSHOW textmerge
		_screen.Visible = .f.
		<<lcCommand>>
		
		TRY
			DELETE FILE "<<lcBuildFile>>"
		CATCH
		ENDTRY
		TRY
			DELETE FILE "<<lcBatFile>>"
		CATCH
		ENDTRY
		QUIT
		ENDTEXT
		
		=STRTOFILE(lcScript, lcBuildFile)
		IF !FILE(lcBuildFile)
			RETURN
		ENDIF
		
		TEXT TO lcScript NOSHOW TEXTMERGE PRETEXT 15
			"<<_screen.oMagicMenu.cVFPDir>>" -C "<<lcBuildFile>>"
		ENDTEXT
		
		=STRTOFILE(lcScript, lcBatFile)
		
		IF !FILE(lcBatFile)
			RETURN
		ENDIF
		WAIT CLEAR
		
		_screen.oHelper.oSystem.OpenApplication(lcBatFile, "", 2)
	ENDPROC

ENDDEFINE
